[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "TIG’R est une ressource d’apprentissage pour le traitement de l’information géographique avec R. Ce site a été crée dans le cadre de l’école thématique Méthodes et outils de sciences territoriales organisée par le Collègue Internationnal des Sciences Territoriales et qui s’est déroulée à Ouidah (Bénin) en Mars 2023.\nCe site contient des supports de cours et exercices reproductibles qui tente de couvrir l’ensemble de la chaîne de traitement de données géographiques.\nL’ensemble du matériel mis à disposition est soumis à la Licence ouverte V2.0 d’Etalab."
  },
  {
    "objectID": "modules/reproductibilite.html",
    "href": "modules/reproductibilite.html",
    "title": "Reproductibilité",
    "section": "",
    "text": "Le package miniCRAN\n\n\nCréer son CRAN personnel en local\n\n\n\n\n\n\n27 oct. 2023\n\n\nHugues Pecout\n\n\n\n\n\n\n\n\nProgrammation lettrée et notebook\n\n\nIntroduction et mise en pratique avec Rmarkdown et Quarto\n\n\n\n\n\n\n27 oct. 2023\n\n\nHugues Pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "correction/ggplot2/Correction_ggplot.html",
    "href": "correction/ggplot2/Correction_ggplot.html",
    "title": "Application Tidyverse & ggplot2",
    "section": "",
    "text": "Exercice 1 ~ Application Tidyverse\n\n1. Importer la base de données DEV_AFRICA_2018 sous le nom DevAfrica2018\n\nlibrary(tidyverse)\n\n# Import des métadonnées\nmetaDataDEVAFRICA  &lt;- read.table(file = \"data/DEV_AFRICA_2018/afrika_don_meta.csv\", \n                           header = TRUE,\n                           sep= \";\",\n                           encoding = \"UTF-8\")\n\nlibrary(readxl)\nDevAfrica2018 &lt;- read_excel(\"data/DEV_AFRICA_2018/afrika_don.xls\")\n\n\n\n2. Sélectionner la liste des pays et leur region d’appartenance\n\n# Sélection de la liste des pays et leur region d'appartenance\nDevAfrica2018 %&gt;%\n  select(nom, SUBREG)\n\n# A tibble: 49 × 2\n   nom                 SUBREG         \n   &lt;chr&gt;               &lt;chr&gt;          \n 1 Angola              Middle Africa  \n 2 Burundi             Eastern Africa \n 3 Bénin               Western Africa \n 4 Burkina Faso        Western Africa \n 5 Botswana            Southern Africa\n 6 Rep. Centrafricaine Middle Africa  \n 7 Côte d'Ivoire       Western Africa \n 8 Cameroun            Middle Africa  \n 9 Congo, Rép. dém. du Middle Africa  \n10 Congo               Middle Africa  \n# ℹ 39 more rows\n\n\n\n\n3. Quelles sont les variables de la base de données dont le nom commence par la lettre “P”\n\n# Select ion de colonnes par nom : sélectionner les variables dont le nom commencent par \"P\" \nDevAfrica2018 %&gt;%\n  select(starts_with(\"P\"))\n\n# A tibble: 49 × 2\n     POP PIB               \n   &lt;dbl&gt; &lt;chr&gt;             \n 1 31.3  6793.7084905000002\n 2 11.4  756.59407529999999\n 3 11.6  3224.0433155000001\n 4 20.0  2160.5894579999999\n 5  2.28 17700.315175      \n 6  4.71 938.98882209999999\n 7 25.4  5133.5904630000005\n 8 25.5  3628.1176970000001\n 9 85.4  1091.9212769999999\n10  5.31 3356.2418290000001\n# ℹ 39 more rows\n\n\n\n\n4. Quelles sont les variables de la base de données dont le nom contient la lettre “P”\n\n# sélectionner les variables dont le nom contient la lettre \"P\" \nDevAfrica2018 %&gt;%\n  select(contains(\"P\"))\n\n# A tibble: 49 × 5\n     POP PIB                EMPAGR EMPSER ESPVIE\n   &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 31.3  6793.7084905000002   50.4  41.4    61.0\n 2 11.4  756.59407529999999   92.0   6.50   61.4\n 3 11.6  3224.0433155000001   38.9  42.1    61.6\n 4 20.0  2160.5894579999999   25.6  40.9    61.4\n 5  2.28 17700.315175         20.9  61.0    69.4\n 6  4.71 938.98882209999999   77.4  17.2    53.0\n 7 25.4  5133.5904630000005   40.5  46.5    57.6\n 8 25.5  3628.1176970000001   43.8  41.4    59.1\n 9 85.4  1091.9212769999999   65.6  24.7    60.5\n10  5.31 3356.2418290000001   34.4  43.7    64.4\n# ℹ 39 more rows\n\n\n\n\n5. Renommer la variable “PIB” en “ProduitInterieurBrut”\n\n# Renommer la variable \"PIB\"  par \"ProduitInterieurBrut\"\nDevAfrica2018 %&gt;%\n  rename(ProduitInterieurBrut = PIB)\n\n# A tibble: 49 × 26\n   iso3  name        nom     POP ProduitInterieurBrut IDH   ADOFEC CO2HAB EMPAGR\n   &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 AGO   Angola      Ango… 31.3  6793.7084905000002   0.58…  153.  1.12     50.4\n 2 BDI   Burundi     Buru… 11.4  756.59407529999999   0.432   56.2 0.0467   92.0\n 3 BEN   Benin       Bénin 11.6  3224.0433155000001   0.54…   87.4 0.622    38.9\n 4 BFA   Burkina Fa… Burk… 20.0  2160.5894579999999   0.44…  106.  0.197    25.6\n 5 BWA   Botswana    Bots…  2.28 17700.315175         0.73…   46.3 2.96     20.9\n 6 CAF   Central Af… Rep.…  4.71 938.98882209999999   0.39…  130.  0.0651   77.4\n 7 CIV   Côte d'Ivo… Côte… 25.4  5133.5904630000005   0.53…  118.  0.335    40.5\n 8 CMR   Cameroon    Came… 25.5  3628.1176970000001   0.56…  108.  0.323    43.8\n 9 COD   Dem. Rep. … Cong… 85.4  1091.9212769999999   0.47…  125.  0.0242   65.6\n10 COG   Congo       Congo  5.31 3356.2418290000001   0.57…  113.  0.616    34.4\n# ℹ 39 more rows\n# ℹ 17 more variables: EMPSER &lt;dbl&gt;, INTERN &lt;dbl&gt;, ESPVIE &lt;dbl&gt;, AGEMED &lt;dbl&gt;,\n#   TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;, DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;,\n#   URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;, LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;,\n#   COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;\n\n\n\n\n6. Calculer le taux de dépendance jeune par sous-région\n\n# Proportion (Pourcentage) de jeunes par sous région\nDevAfrica2018 %&gt;%\n  group_by(SUBREG) %&gt;%\n  summarise(depJeune = mean(DJEUNE))\n\n# A tibble: 5 × 2\n  SUBREG          depJeune\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Eastern Africa      77.3\n2 Middle Africa       79.3\n3 Northern Africa     49.1\n4 Southern Africa     55.8\n5 Western Africa      79.6\n\n\n\n\n7. Ordonner les pays par sous région\n\n# Trier les pays par niveau de PIB croissant\nDevAfrica2018 %&gt;%\n  arrange(desc(SUBREG))\n\n# A tibble: 49 × 26\n   iso3  name  nom     POP PIB   IDH   ADOFEC CO2HAB EMPAGR EMPSER INTERN ESPVIE\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 BEN   Benin Bénin 11.6  3224… 0.54…   87.4  0.622   38.9   42.1  20      61.6\n 2 BFA   Burk… Burk… 20.0  2160… 0.44…  106.   0.197   25.6   40.9  16      61.4\n 3 CIV   Côte… Côte… 25.4  5133… 0.53…  118.   0.335   40.5   46.5  46.8    57.6\n 4 GHA   Ghana Ghana 30.1  5303… 0.60…   67.3  0.615   29.8   48.7  39      63.9\n 5 GIN   Guin… Guin… 12.6  2531… 0.47…  137.   0.256   62.0   31.9  18      61.4\n 6 GMB   Gamb… Gamb…  2.31 2175… 0.49…   79.8  0.268   27.4   56.9  19.8    61.9\n 7 GNB   Guin… Guin…  1.90 1969… 0.47…  105.   0.181   68.3   24.7   3.93   58.2\n 8 LBR   Libe… Libé…  4.88 1462… 0.47…  136.   0.323   43.4   46.3   7.98   63.9\n 9 MLI   Mali  Mali  19.4  2305… 0.43…  170.   0.187   62.8   29.6  13      59.1\n10 MRT   Maur… Maur…  4.46 5119… 0.54…   72.0  0.604   51.7   35.5  20.8    64.8\n# ℹ 39 more rows\n# ℹ 14 more variables: AGEMED &lt;dbl&gt;, TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;,\n#   DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;, URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;,\n#   LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;, COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;\n\n\n\n\n\nExercice 2 : Application ggplot2\n\n1. Recoder la variable « POP » en « Population » en trois catégories :\n\nMoins de 10 millions,\n\n10 -- 25 millions,\n\n&gt; 25 millions.\n\n\n# Recodage de la variable \nDevAfrica2018$Population &lt;- cut(DevAfrica2018$POP,  \n                                breaks = c(1,10,25,200), \n                                labels = c(\"Moins de 10 millions\", \n                                           \"10 - 25 millions\", \n                                           \"&gt; 25 millions\"), \n                                right = F)\n\n\n\n2. Représentation graphique de l’effectif des pays par sous-région\n\nlibrary(ggplot2)\n\nggplot(DevAfrica2018) + \n   geom_histogram(aes(x=SUBREG), stat = 'count')\n\n\n\n3. Ajout des étiquettes (titre du graphique, étiquette axe abscisse, axe des ordonnées) au graphique.\n\nggplot(DevAfrica2018) + \n  geom_histogram(aes(x=SUBREG), stat = 'count')+\n  ggtitle(\"Effectif de population par sous-région\")+\n  xlab(\"Sous région\") + \n  ylab(\"Effectif de population\")\n\n\n\n\n\n\n4. Construction d’une boite à moustaches de l’espérance de vie à la naissance par sous-région.\n\nggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y=ESPVIE))\n\n\n\n5. Construction d’une boite à moustache de l’espérance de vie à la naissance par sous-région. Note : faites les largeurs des boites à moustaches proportionnelles à l’effectif de la population par sous-région.\n\nggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y=ESPVIE), varwidth = TRUE)\n\n\n\n\n\n\n6. Ajout des étiquettes (titre du graphique, étiquette axe abscisse, axe des ordonnées) au graphique.\n\nfigure1 &lt;- ggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y=ESPVIE), varwidth = TRUE) + \n  xlab(\"Sous région\") + \n  ylab(\"Espérence de vie à la naissance\") + \n  ggtitle(\"Expérance de vie à la naissance par sous-règion\")\n\n# Sauvegarde du graphique\nggsave(\"figure1.png\", dpi = 3000)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "Introduction",
    "section": "",
    "text": "Les différentes leçons peuvent être utilisées indépendamment les unes des autres. Il est néanmoins nécessaire de connaître les bases du langage R (objets, opérateurs, fonctions…) pour comprendre les différents cours et exercices proposés.\nSi vous êtes débutant·e, plusieurs supports libres et gratuits d’initiation à R sont indiqués dans les ressources annexes. Si vous êtes enseignant·e, vous pouvez également utilisés ces deux diaporamas d’introduction au langage R :\n\n\n\nConsulter en plein écran\n\n\n\n\n\n\nConsulter en plein écran\n\n\n\n\n\n\n\nInstaller R et Rstudio\n\n\n\nTéléchargez R et Rstudio depuis le site de Posit : https://posit.co/download/rstudio-desktop/\nPuis, suivez les instructions d’installation (classiques)\n\n\n\nLes modules thématiques\nLes leçons TIG’R sont classées en huit modules thématiques qui segmentent l’ensemble de la chaîne de traitement de données géographiques :\n\nDonnées (Import, collecte , connexion BD… et export de données)\nManipulation de données (gestion & traitement de données)\nStatistique descriptives (uni, bi et multivariée)\nReprésentation graphique (R-base & ggplot2)\nAnalyse de réseau (Théorie de graphes et analyse de réseau)\nGéomatique (traitement des données vectorielles et raster)\nCartographie thématique (statique et interactive)\nReproductibilité (Bonnes pratiques pour la recherche reproductible)\n\n\n\nLes packages utilisés\nAfin de maximiser la reproductibilité des traitements présentés, les différents modules de formation tentent de minimiser les dépendances à des packages. Les différents packages utilisés sont généralement des références dans la communauté R et laisser présager une certaine stabilité du code présenté.\nLes packages utilisés dans les différents modules thématiques sont :\n\nreadxl\nopenxlsx\nhaven\njpeg\ndplyr\ntidyr\nlubridate\nstringr\ncluster\nade4\ncluster\nFactoMineR\ngtsummary\nggplot2\nigraph\nsf\nterra\nmapsf\nleaflet\nmapview\nmaptiles\nosmdata\nosmextract\nosrm\nrmarkdown\nknitr\nminiCRAN\n\n\nInstallation\n\n# Liste des packages à installer\npackages &lt;- c(\"readxl\", \"openxlsx\", \"haven\",\n              \"dplyr\", \"lubridate\", \"stringr\",\n              \"ggplot2\", \"FactoMineR\", \"sf\",\n              \"terra\", \"mapsf\", \"rmarkdown\", \"knitr\", \"...\")\n\n\n# Détection de package à installer\nmissing_packages &lt;- packages [!(packages  %in% installed.packages()[,\"Package\"])]\n\n# Installation des packages manquants\nif(length(missing_packages)) install.packages(missing_packages)\n\n\n\n\nLe miniCRAN\nAfin de pouvoir reproduire les différentes leçons sans être dépendant d’une connexion internet, un miniCRAN (répertoire contenant les sources de l’ensemble des packages) est mis à disposition :\n\n Télécharger le miniCRAN\n\nUne fois le répertoire décompressé, vous pouvez installer les différents packages en local de la manière suivante :\n\n# Chemin d'accès jusqu'au répertoire \"miniCRAN\" copié sur votre machine.\nURL_dossier &lt;- paste0(\"file:///\", \"C:/Users/&lt;username&gt;/.../\", \"miniCRAN\")\n\n# Installation de ggplot2 depuis la source (répertoire miniCRAN)\ninstall.packages(\"ggplot2\", \n                 repos = URL_dossier,\n                 type = \"source\")\n\n\n\n\n\n\n\nNote\n\n\n\nModifier “C:/Users/username/…/” par le chemin d’accès correct.\n\n\n\n\nLes données utilisées\nLes différents jeux de données utilisés dans les modules sont présentés et mis à disposition sur cette page.\n\n\nConditions d’utilisation\nLe contenu de ce site web (support de cours et exercice inclus) est soumis à la Licence ouverte V2.0 d’Etalab. Le « Réutilisateur » est libre de réutiliser l’ « Information » :\n\nde la reproduire, la copier,\n\nde l’adapter, la modifier, l’extraire et la transformer, pour créer des « Informations dérivées », des produits ou des services,\n\nde la communiquer, la diffuser, la redistribuer, la publier et la transmettre,\n\nde l’exploiter à titre commercial, par exemple en la combinant avec d’autres informations, ou en l’incluant dans son propre produit ou application.\n\nSous réserve de :\n\nmentionner la paternité de l’ « Information » : sa source (cf. citation et la date de dernière mise à jour de l’ « Information » réutilisée.\n\n\n\nCitation TIG’R\n\n\nPecout H., Dansou J., et al. 2023. « TIG’R :  Traitement de l’information géographique avec R ». 2023. https://ee2023.netlify.app/."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Crédits",
    "section": "",
    "text": "TIG’R a été initié en 2023 par Hugues pecout et Julien Dansou dans le cadre de l’école thématique Méthodes et outils de sciences territoriales organisée par le Collègue Internationnal des Sciences Territoirales en 2023. Ce site internet est desormais collaboratif. Il est ouvert à toute contribution.\n\n\n\nListe des contributeurs, par ordre alphabétique :\nLaurent Beauguitte\nAlexandre Cebeillac\nLéa Christophe\nRobin Cura\nJulien Dansou\nMégane Fernandez\nTimothée Giraud\nHugues Pecout\nSébastien Rey-Coyrehourcq\n\n\n\n\nConditions d’utilisation\nLe contenu de ce site web (support de cours et exercice inclus) est soumis à la Licence ouverte V2.0 d’Etalab.\nLe « réutilisateur » est libre de réutiliser l’ « information » :\n\nde la reproduire, la copier,\n\nde l’adapter, la modifier, l’extraire et la transformer, pour créer des « Informations dérivées », des produits ou des services,\n\nde la communiquer, la diffuser, la redistribuer, la publier et la transmettre,\n\nde l’exploiter à titre commercial, par exemple en la combinant avec d’autres informations, ou en l’incluant dans son propre produit ou application.\n\nSous réserve de :\n\nmentionner la paternité de l’ « Information » : sa source (cf. citation et la date de dernière mise à jour de l’ « Information » réutilisée.\n\n\n\n\n\n\n\n\nCitation\n\n\nPecout H., Dansou J., et al. 2023. « TIG’R :  Traitement de l’information géographique avec R ». 2023. https://ee2023.netlify.app/."
  },
  {
    "objectID": "ressources.html",
    "href": "ressources.html",
    "title": "Ressources",
    "section": "",
    "text": "analyse-R : Site web pour l’introduction à l’analyse d’enquêtes avec R et RStudio , crée et maintenue par Joseph Larmarange.\n Cartographie avec R : Manuel pour la création de cartes thématiques conformes aux règles de la sémiologie graphique et de la cartographie, T. giraud & H. Pecout.\n ElementR : Site web du groupe d’utilisateur·rice·s pour le traitement de l’information géographique avec R, coordonnée l’UMR Géographie-Cités, l’UMR PRODIG et l’UAR RIATE.\n Geocomputation with R : Ouvrage (en anglais mais le plus complet) sur la géographie computationnelle avec R, R. Lovelace, J. Nowosad et J. Muenchow.\n Géomatique avec R : Manuel pour la gestion et le traitements de données spatiales, T. Giraud & H. Pecout.\n guide-R : Guide pour l’analyse de données d’enquêtes avec R (version actualisée et restructurée de nombreux chapitres d’analyse-R).\n Parcours R : Supports de formations R MTES & MCTRCT.\n Spatial Data Science with R and terra : Documentation très complète (anglais) sur l’utilisation du package terra, produite par l’auteur principal du package.\n Une introduction à R et au tidyverse : Manuel d’introduction à R, accessible et régulièrement mis à jour, par Julien Barnier.\n UtilitR : Documentation collaborative et open source sur R, destinée en premier lieu aux agents de l’INSEE.\nDes centaines de ressources diverses et gratuites (livres, articles, agrégateurs, cours, exercices, sites web, vidéos…) pour la pratique de R en sciences humaines et sociale sont référencées sur le site internet rzine.fr."
  },
  {
    "objectID": "modules/WIP/osm.html",
    "href": "modules/WIP/osm.html",
    "title": "Exploiter les données OSM",
    "section": "",
    "text": "Work in progress"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html",
    "href": "modules/geomatique/geomatic_raster.html",
    "title": "Géomatique avec R - raster",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques matricielles (raster) avec le package terra. Les différentes manipulations de données matricielles abordées sont :\n\nImport et export de raster\nAffichage graphique de raster\nModification d’un raster (reprojection, découpage, aggrégation, fusion…)\nAlgèbre spatial (locale, focale, zonales et globale)\nTransformation et conversion de raster"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html#introduction",
    "href": "modules/geomatique/geomatic_raster.html#introduction",
    "title": "Géomatique avec R - raster",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques matricielles (raster) avec le package terra. Les différentes manipulations de données matricielles abordées sont :\n\nImport et export de raster\nAffichage graphique de raster\nModification d’un raster (reprojection, découpage, aggrégation, fusion…)\nAlgèbre spatial (locale, focale, zonales et globale)\nTransformation et conversion de raster"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html#manuel",
    "href": "modules/geomatique/geomatic_raster.html#manuel",
    "title": "Géomatique avec R - raster",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html#exercice",
    "href": "modules/geomatique/geomatic_raster.html#exercice",
    "title": "Géomatique avec R - raster",
    "section": " Exercice",
    "text": "Exercice"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html",
    "href": "modules/geomatique/OpenStreetMap.html",
    "title": "OpenStreetMap & R",
    "section": "",
    "text": "Cette leçon vise à introduire différents types d’exploitation de la base de données géographique libre OpenStreetMap avec R. Les traitements et analyses présentés sont :\n\nGéocodage d’adresses avec tidygeocoder\nCartographie interactive avec leaflet et mapview\nExtraction de données avec maptiles, osmdata et osmextract\nCalcul de matrice de distance euclidienne avec sf, puis par la route avec osrm\nCalcul itinéraires avec osrm"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html#introduction",
    "href": "modules/geomatique/OpenStreetMap.html#introduction",
    "title": "OpenStreetMap & R",
    "section": "",
    "text": "Cette leçon vise à introduire différents types d’exploitation de la base de données géographique libre OpenStreetMap avec R. Les traitements et analyses présentés sont :\n\nGéocodage d’adresses avec tidygeocoder\nCartographie interactive avec leaflet et mapview\nExtraction de données avec maptiles, osmdata et osmextract\nCalcul de matrice de distance euclidienne avec sf, puis par la route avec osrm\nCalcul itinéraires avec osrm"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html#manuel",
    "href": "modules/geomatique/OpenStreetMap.html#manuel",
    "title": "OpenStreetMap & R",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html#exercice",
    "href": "modules/geomatique/OpenStreetMap.html#exercice",
    "title": "OpenStreetMap & R",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio puis un script R à la racine du projet.\nFile/New Project/New Directory…\n2. Géocodez une de ces deux adresses :\nA. IRSP : “Institut Régional de Santé Publique de Ouidah, Bénin”\nB. LaReSPD : “Université de Parakou, Bénin”\n\n\nUn peu d’aide ?\n# Construction d'un data.frame avec nom et adresse\n... &lt;- data.frame(name = \"IRSP\",\n                  addresse = \".........\")\n\n# Géocodage \nlibrary(tidygeocoder)\n... &lt;- geocode(.tbl = ...,  address = ...)\n\n\n3. Créez un point (objet sf) à partir de la latitude et de la longitude récupérées.\n\n\nUn peu d’aide ?\nlibrary(sf)\n\n# Création objet sf\n... &lt;- st_as_sf(..., coords = c(\"...\", \"...\"), crs = 4326)\n\n\n4. Transformez la projection de ce point en WGS84 / Pseudo-Mercator (EPSG 3857), puis visualisez-le avec mapview.\n\n\nUn peu d’aide ?\n... &lt;- st_transform(..., crs = 3857)\n\nlibrary(mapview)\nmapview(...)\n\n\n5. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nEmprise des agglomérations urbaines (AFRICAPOLIS 2020)\n Download\n\n\n\n6. Placez les données décompressées dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n7. Importez la couche géographique africapolis_extract.shp et transformez sa projection en en WGS84 / Pseudo-Mercator (EPSG 3857).\n\n\nUn peu d’aide ?\n... &lt;- st_read(\"data/.../....shp\",  quiet = TRUE)\n\n# Transformation de la projection en Pseudo-Mercator (3857)\n... &lt;- st_transform(..., crs = 3857)\n\n\n8. Sélectionnez uniquement les agglomérations béninoises.\n\n\nUn peu d’aide ?\n... &lt;- ...[...$... == \"BEN\", ]\n\n\n9. Extrayez les centroïdes des polygones d’agglomération du Bénin.\n\n\nUn peu d’aide ?\n... &lt;- st_centroid(...)\n\n\n10. Extrayez la tuile (fond de carte) OSM située au niveau des centroïdes extraits.\nVous pouvez utiliser la fonction st_buffer() pour extraire une zone légèrement plus étendue que l’emprise des centroïdes.\n\n\nUn peu d’aide ?\nlibrary(maptiles)\n... &lt;- get_tiles(x = st_buffer(x = ..., dist =  ...), zoom = 8, crop = TRUE)\n\n\n11. Affichez la tuile OSM, les centroïdes d’agglomérations et l’IRSP (ou LaReSPD) sur une carte.\n\n\nUn peu d’aide ?\nplot_tiles(...)\nplot(st_geometry(...),  col=\"...\" , add = TRUE)\nplot(st_geometry(...),  col=\"...\" , add = TRUE)\n\n# Source des données ?\nmtext(side = 1, line = -1, text = get_credit(\"OpenStreetMap\"), col=\"tomato\")\n\n\n12. Calculez trois matrices de distance différentes entre l’IRSP (ou LaReSPD) et les centroïdes des agglomérations béninoises.\nA. Une matrice de distance euclidienne\nB. Une matrice de distance par la route\nC. Un matrice de distance temps par la route\n\n\nUn peu d’aide ?\n# Distance Euclidienne \n... &lt;- st_distance(x = ..., y = ...) \n\n# Distance et temps par la route\nlibrary(osrm)\n... &lt;- osrmTable(src = ..., \n                 dst = ...,\n                 measure = c(\"...\", \"...\"))\n\n\n13. Créez de nouveaux attributs (nouvelles colonnes) dans la couche géographique des centroïdes d’agglomérations, pour y stocker les distances euclidiennes à l’IRSP (ou LaReSPD), et les distances (km et temps) par la route.\nConvertissez les distances calculées (mètres) en kilomètres et les temps (minutes) en heures.\n\n\nUn peu d’aide ?\n# Distances euclidiennes\n...$... &lt;- as.numeric(...) / 1000\n\n# Distances km/route\n...$... &lt;- as.numeric(...$...) / 1000\n\n# Distances hrs/route\n...$... &lt;- as.numeric(...$...) / 60\n\n\n14. Calculez les indices moyens d’accessibilité à l’IRSP (ou LaReSPD).\n\n\nUn peu d’aide ?\n# Moyenne des indices accessibilité \nmean(...$...)\nmean(...$...)\nmean(...$...)\n\n\n15. Calculez les indices de performances suivants à partir des distances récupérées.\n\nIndice de sinuosité = distance km par la route / distance euclidienne\n\nIndice de vitesse sur route = distance km par la route / distance temps par la route\n\nIndice global de performance = Indice de vitesse sur route / Indice de sinuosité.\n\nEnregistrez ces indices dans de nouvelles colonnes. Vous pouvez arrondir leurs valeurs à l’aide de la fonction round().\n\n\nUn peu d’aide ?\n# Indice de sinuosité \n...$ind_sin &lt;- round(...$... / ...$..., 2)\n\n# Indice de vitesse sur route\n...$ind_vit &lt;- round(...$... / ...$..., 1)\n\n# Indice global de performance\n...$... &lt;- round(...$ind_vit / ...$ind_sin, 1)\n\n\n16. Cartographiez l’indice global de performance sur les centroïdes (points) des agglomérations. Utilisez la tuile OSM téléchargée comme fond de carte.\n\n\nUn peu d’aide ?\nlibrary(mapsf)\nlibrary(maptiles)\n\n# Affichage de la tuile\nplot_tiles(...)\n\n# Cartographie de l'indice global de performance\nmf_map(x = ...,\n       var = \"...\",\n       type = \"...\",\n       pal = \"...\",\n       leg_pos = \"...\",\n       leg_title = \"...\",\n       breaks = \"...s\",\n       nbreaks = ...,\n       leg_val_rnd = ...,\n       border= ...,\n       cex = ...,\n       add = TRUE)\n\n# Affichage de l'IRSP (ou LaReSPD)\nplot(st_geometry(...), border = NA, col=\"red\", pch = 20, cex = 2, add = TRUE)\n\n\n17. Quelle agglomération présente la plus forte valeur de l’indice global de performance d’accessibilité pour l’IRSP (ou LaReSPD).\n\n\nUn peu d’aide ?\n# Sélection \n... &lt;- ...[...$... == max(...$...), ]\n\n\n18. Calculez l’itinéraire (plus court chemin) entre l’IRSP (ou LaReSPD) et cette agglomération. Cartographiez cet intinéraire sur la tuile OSM téléchargée.\n\n\nUn peu d’aide ?\nlibrary(osrm)\nroute &lt;- osrmRoute(src = ..., dst = ...)\n\n# Cartographie\nplot_tiles(...)\nplot(st_geometry(route), col = \"grey10\", lwd = 6, add = TRUE)\nplot(st_geometry(route), col = \"grey90\", lwd = 1, add = TRUE)\n# Affichage du point d'origine\nplot(st_geometry(...), border = NA, col=\"red\", pch = 20, cex = 3, add = TRUE)\n# Affichage du point de destination\nplot(st_geometry(...), border = NA, col=\"red\", pch = 20, cex = 3, add = TRUE)\n# Crédit pour la tuile OSM\nmtext(side = 1, line = -1, text = get_credit(\"OpenStreetMap\"), col=\"tomato\")\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/reproductibilite/minicran.html",
    "href": "modules/reproductibilite/minicran.html",
    "title": "Le package miniCRAN",
    "section": "",
    "text": "Le package miniCRAN permet de créer un dépôt en interne composé de packages sélectionnés dans des dépôts de type CRAN. Cela permet de récupérer les sources binaires de packages ciblés, et de les rendre disponibles où l’on souhaite (sur sa machine, sur clef USB, sur son propre serveur…).\nminiCRAN peut par exemple être utilisé pour créer son CRAN personnel sur une clef USB, qui vous permettra d’installer ces packages sur n’importe quelle machine sans avoir besoin d’être connecté à internet.\nCommencez par installer le package miniCRAN :\n\ninstall.packages(\"miniCRAN\")\n\nminiCRAN ne récupère pas uniquement le code source d’un package ciblé mais également toutes ses dépendances (autres packages) indispensables à son fonctionnement.\n\nLister les dépendances\nla fonction pkgDep()permet de connaitre la liste de toutes les dépendances d’un package. Exemple :\n\nlibrary(miniCRAN)\n\npkgDep(pkg = \"mapsf\", suggests = FALSE, enhances = FALSE, repos = \"https://cloud.r-project.org/\")\n\n [1] \"mapsf\"      \"classInt\"   \"Rcpp\"       \"sf\"         \"e1071\"     \n [6] \"class\"      \"KernSmooth\" \"DBI\"        \"magrittr\"   \"s2\"        \n[11] \"units\"      \"MASS\"       \"proxy\"      \"wk\"        \n\n\nVous pouvez visualiser ces dépendances sous forme de graphe à l’aide de la fonction makeDepGraph() :\n\n# Construction d'un objet igraph (graphe) formalisant les dépendances d'un package\ngraph_dep &lt;- makeDepGraph( \"mapsf\", suggests = FALSE, enhances = FALSE, repos = \"https://cloud.r-project.org/\")\n\n# Affichage du graphe\nplot(graph_dep , legendPosition = c(-1, 1), vertex.size = 20)\n\n\n\n\n\n\nCréer son miniCRAN\nAvant d’importer les sources des packages ciblés ainsi que leurs dépendances, créez un nouveau répertoire qui permettra de les stocker. Vous pouvez le faire manuellement ou en code R avec la fonction dir.create() :\n\npath_miniCRAN &lt;- \"/home/hugues/Documents/5.Cours/Modules_R/miniCRAN\"\n\n# Création du répertoire nommé \"miniCRAN\"\ndir.create(path = path_miniCRAN)\n\nIl ne vous reste plus qu’à remplir votre répertoire avec les sources des packages ciblés. Pour cela, utilisez la fonction makeRepo() :\n\n# Création d'un vecteur avec le ou les package(s) ciblé(s)\nmes_pkgs &lt;- c(\"readxl\", \"openxlsx\", \"haven\",\n              \"dplyr\", \"lubridate\", \"stringr\",\n              \"ggplot2\", \"FactoMineR\", \"sf\",\n              \"terra\", \"mapsf\", \"rmarkdown\", \"knitr\")\n\n\n# Téléchargement des sources des packages (+ dépendances) dans le répertoire \"miniCRAN\"\nmakeRepo(pkgDep(mes_pkgs), path = path_miniCRAN, type = c(\"source\", \"mac.binary\", \"win.binary\"))\n\n\n\nAjouter des packages\nIl est très simple de rajouter de nouveaux packages (et leur dépendances) dans votre miniCRAN en utilisant la fonction addPackage() :\n\naddPackage(\"tidyr\", path = path_miniCRAN, type = c(\"source\", \"mac.binary\", \"win.binary\"))\n\nPour lister l’ensemble des packages stockés sur votre miniCRAN, utilisez la fonction pkgAvail() :\n\n# Check for available packages\npkgAvail(repos = path_miniCRAN, )[, c(1:3, 5)]\n\n\n\nInstaller un package du miniCRAN\nPour installer un package stocké sur votre miniCRAN local, utilisez la fonction install.packages()de la manière suivante :\n\n# Chemin d'accès jusqu'au \"miniCRAN\" stocké sur votre machine.\nurl_miniCRAN &lt;- paste0(\"file:///\", \"C:/Users/&lt;username&gt;/.../miniCRAN\")\n\n# Installation (type = \"source\", \"mac.binary\" ou \"win.binary\")\ninstall.packages(\"ggplot2\", \n                 repos = url_miniCRAN,\n                 type = \"win.binary\", \n                 dependencies = TRUE)\n\n\n\nLe miniCRAN de TIG’R\nUn miniCRAN comportant l’ensemble des packages utilisés dans les leçons de ce site web est mis à disposition. Vous pouvez le télécharger en vous connectant à cette page.\n\n\nPour aller plus loin\nPour connaitre l’ensemble des fonctionnalités offertes par le package miniCRAN, consultez le site web du package."
  },
  {
    "objectID": "modules/reseau.html",
    "href": "modules/reseau.html",
    "title": "Réseau",
    "section": "",
    "text": "Analyse de réseau avec igraph\n\n\nPrésentation et fonctionnement du package igraph\n\n\n\n\n\n\n27 oct. 2023\n\n\nLaurent Beauguitte, Mégane Fernandez, Hugues pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html",
    "href": "modules/geomatique/geomatic_vector.html",
    "title": "Géomatique avec R - vecteur",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques vectorielles avec le package sf. Les différentes manipulations de données vectorielles abordées sont :\n\nImport et export de données\nGestion de la projection cartographique\nAffichage graphique des données\nSélection par attribut\nSélection spatiale\nOpération sur les géométries"
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html#introduction",
    "href": "modules/geomatique/geomatic_vector.html#introduction",
    "title": "Géomatique avec R - vecteur",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques vectorielles avec le package sf. Les différentes manipulations de données vectorielles abordées sont :\n\nImport et export de données\nGestion de la projection cartographique\nAffichage graphique des données\nSélection par attribut\nSélection spatiale\nOpération sur les géométries"
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html#manuel",
    "href": "modules/geomatique/geomatic_vector.html#manuel",
    "title": "Géomatique avec R - vecteur",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCe support de ce cours est très largement inspiré du manuel “Géomatique avec R”, plus complet et initialement conçu pour accompagner le cours ‘Cartographie avec R’ du Master 2 Géomatique, géodécisionnel, géomarketing et multimédia (G2M) de l’Université Paris 8 Vincennes - Saint-Denis (France). Vous pouvez envoyer vos remarques et suggestions aux auteurs en postant une issue sur le dépôt GitHub de ce document."
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html#exercice",
    "href": "modules/geomatique/geomatic_vector.html#exercice",
    "title": "Géomatique avec R - vecteur",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nEmprise des agglomérations urbaines (AFRICAPOLIS 2020)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez le fichier africapolis_extract.shp\n\n\nUn peu d’aide ?\n# Pour importer des données géographiques \nlibrary(sf)\n... &lt;- st_read()\n\n\n5. Vérifiez quelle est la projection cartographique utilisée. Re-projetez la couche dans la projection UTM zone 31N (EPSG : 32631 ).\n\n\nUn peu d’aide ?\n# Pour connaitre le système de référence et de projection d'une couche\nst_crs(...)\n\n# Transformer le crs d'un objet sf\n... &lt;- st_transform(...)\n\n\n5. Affichez les géométries des agglomérations urbaines.\nAstuce : Vous pouvez utiliser la package mapview qui permet d’afficher la couche sur différents fonds de carte dynamiques. Cela permet de contrôler le niveau de précision de vos données.\n\n\nUn peu d’aide ?\n# Affichez les géométries d'un objet sf\nplot(st_geometry(...))\n\n# Afficher sur un fond de carte dynamique\nlibrary(mapview)\nmapview(...)\n\n\n6. Calculez les surfaces de chaque agglomération urbaine. Enregistrez ces valeurs dans une nouvelle colonne.\n\n\nUn peu d’aide ?\n# st_area() permet de calculer la surface des polygones d'un objet sf\n...$... &lt;- st_area(...)\n\n\n7. Calculez le nombre et la superficie totale des agglomérations urbaines, par pays.\n\n\nUn peu d’aide ?\nlibrary(dplyr)\n\n... &lt;- ... %&gt;% \n          group_by(...) %&gt;% \n          summarise(... = sum(...),\n                    ... = n())\n\n\n8. Créez une quatrième couche géographique (point) à partir des coordonnées de l’Institut Régional de Santé Publique, à Ouidah (Bénin) :\n\nLatitude = 6.349223507626634\nLongitude = 2.0879482065861783\nCRS = WGS84 (4326)\n\n\n\nUn peu d’aide ?\n# Création d'un data.frame avec les colonnes \"name\", \"lat\" et \"long\"\nIRSP &lt;- data.frame(name = \"...\", \n                   lat = ..., \n                   long = ...)\n\n\n# Création d'une couche géographique à partir de ces cordonnées\nIRSP_geo &lt;- st_as_sf(IRSP, \n                     coords = c(\"...\", \"...\"), \n                     crs = ...)\n\n\n9. Créez une zone tampon de 50km autour de l’Institut Régional de Santé Publique\n\n\nUn peu d’aide ?\n# Créer un zone tampon\n... &lt;- st_buffer(..., dist = ...)\n\n\n10. Détectez les agglomérations urbaines situées à moins de 50 km de l’IRSP\n\n\nUn peu d’aide ?\n# Quelles agglomérations intersectent la zone tampon ?\n...$... &lt;- st_intersects(..., ..., sparse = ...)\n\n\n11. Affichez correctement les différentes couches. Utilisez la couleur pour indiquer les agglomérations urbaines qui intersectent la zone tampon. Exemple :\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Utilisez l'argument \"add\" pour superposer les couches\n\nplot(st_geometry(...))\nplot(...[\"...\"], add = TRUE)\nplot(st_geometry(...), add = TRUE)\nplot(st_geometry(...), add = TRUE)\n\n\n12. Combien d’habitants résident dans les agglomérations urbaines qui intersectent la zone tampon ?\n\n\nCode\n# Sélectionnez les agglomérations qui intersectent la zone tampon\n... &lt;- ...[...$... == TRUE, ]\n\n# Calcul de la population totale de ces agglomérations\nsum(...$...)\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/WIP/connectBD.html",
    "href": "modules/WIP/connectBD.html",
    "title": "Connexion à une BD",
    "section": "",
    "text": "Work in progress"
  },
  {
    "objectID": "modules.html",
    "href": "modules.html",
    "title": "Modules thématiques",
    "section": "",
    "text": "Données\n\n\nImport, collecte , connexion BD…\n\n\n\n\n\n\n\n\n\n\n\n\n\nManipulation\n\n\nGestion & traitement de données\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique\n\n\nStat. descriptive uni, bi et multivariée\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraphique\n\n\nReprésentation graphique\n\n\n\n\n\n\n\n\n\n\n\n\n\nRéseau\n\n\nAnalyse de réseau et théorie des graphes\n\n\n\n\n\n\n\n\n\n\n\n\n\nGéomatique\n\n\nTraitement données vecteur et raster\n\n\n\n\n\n\n\n\n\n\n\n\n\nCartographie\n\n\nCartographie thématique\n\n\n\n\n\n\n\n\n\n\n\n\n\nReproductibilité\n\n\nBonnes pratiques pour la recherche reproductible\n\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "correction/tidyverse/correction_tidyverse.html",
    "href": "correction/tidyverse/correction_tidyverse.html",
    "title": "Application Tidyverse & ggplot2",
    "section": "",
    "text": "Exercice 1 ~ Application Tidyverse\n\n1. Importer la base de données DEV_AFRICA_2018 sous le nom DevAfrica2018\n\nlibrary(tidyverse)\n\n# Import des métadonnées\nmetaDataDEVAFRICA  &lt;- read.table(file = \"data/DEV_AFRICA_2018/afrika_don_meta.csv\", \n                           header = TRUE,\n                           sep= \";\",\n                           encoding = \"UTF-8\")\n\nlibrary(readxl)\nDevAfrica2018 &lt;- read_excel(\"data/DEV_AFRICA_2018/afrika_don.xls\")\n\n\n\n2. Sélectionner la liste des pays et leur region d’appartenance\n\n# Sélection de la liste des pays et leur region d'appartenance\nDevAfrica2018 %&gt;%\n  select(nom, SUBREG)\n\n# A tibble: 49 × 2\n   nom                 SUBREG         \n   &lt;chr&gt;               &lt;chr&gt;          \n 1 Angola              Middle Africa  \n 2 Burundi             Eastern Africa \n 3 Bénin               Western Africa \n 4 Burkina Faso        Western Africa \n 5 Botswana            Southern Africa\n 6 Rep. Centrafricaine Middle Africa  \n 7 Côte d'Ivoire       Western Africa \n 8 Cameroun            Middle Africa  \n 9 Congo, Rép. dém. du Middle Africa  \n10 Congo               Middle Africa  \n# ℹ 39 more rows\n\n\n\n\n3. Quelles sont les variables de la base de données dont le nom commence par la lettre “P”\n\n# Select ion de colonnes par nom : sélectionner les variables dont le nom commencent par \"P\" \nDevAfrica2018 %&gt;%\n  select(starts_with(\"P\"))\n\n# A tibble: 49 × 2\n     POP PIB               \n   &lt;dbl&gt; &lt;chr&gt;             \n 1 31.3  6793.7084905000002\n 2 11.4  756.59407529999999\n 3 11.6  3224.0433155000001\n 4 20.0  2160.5894579999999\n 5  2.28 17700.315175      \n 6  4.71 938.98882209999999\n 7 25.4  5133.5904630000005\n 8 25.5  3628.1176970000001\n 9 85.4  1091.9212769999999\n10  5.31 3356.2418290000001\n# ℹ 39 more rows\n\n\n\n\n4. Quelles sont les variables de la base de données dont le nom contient la lettre “P”\n\n# sélectionner les variables dont le nom contient la lettre \"P\" \nDevAfrica2018 %&gt;%\n  select(contains(\"P\"))\n\n# A tibble: 49 × 5\n     POP PIB                EMPAGR EMPSER ESPVIE\n   &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 31.3  6793.7084905000002   50.4  41.4    61.0\n 2 11.4  756.59407529999999   92.0   6.50   61.4\n 3 11.6  3224.0433155000001   38.9  42.1    61.6\n 4 20.0  2160.5894579999999   25.6  40.9    61.4\n 5  2.28 17700.315175         20.9  61.0    69.4\n 6  4.71 938.98882209999999   77.4  17.2    53.0\n 7 25.4  5133.5904630000005   40.5  46.5    57.6\n 8 25.5  3628.1176970000001   43.8  41.4    59.1\n 9 85.4  1091.9212769999999   65.6  24.7    60.5\n10  5.31 3356.2418290000001   34.4  43.7    64.4\n# ℹ 39 more rows\n\n\n\n\n5. Renommer la variable “PIB” en “ProduitInterieurBrut”\n\n# Renommer la variable \"PIB\"  par \"ProduitInterieurBrut\"\nDevAfrica2018 %&gt;%\n  rename(ProduitInterieurBrut = PIB)\n\n# A tibble: 49 × 26\n   iso3  name        nom     POP ProduitInterieurBrut IDH   ADOFEC CO2HAB EMPAGR\n   &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 AGO   Angola      Ango… 31.3  6793.7084905000002   0.58…  153.  1.12     50.4\n 2 BDI   Burundi     Buru… 11.4  756.59407529999999   0.432   56.2 0.0467   92.0\n 3 BEN   Benin       Bénin 11.6  3224.0433155000001   0.54…   87.4 0.622    38.9\n 4 BFA   Burkina Fa… Burk… 20.0  2160.5894579999999   0.44…  106.  0.197    25.6\n 5 BWA   Botswana    Bots…  2.28 17700.315175         0.73…   46.3 2.96     20.9\n 6 CAF   Central Af… Rep.…  4.71 938.98882209999999   0.39…  130.  0.0651   77.4\n 7 CIV   Côte d'Ivo… Côte… 25.4  5133.5904630000005   0.53…  118.  0.335    40.5\n 8 CMR   Cameroon    Came… 25.5  3628.1176970000001   0.56…  108.  0.323    43.8\n 9 COD   Dem. Rep. … Cong… 85.4  1091.9212769999999   0.47…  125.  0.0242   65.6\n10 COG   Congo       Congo  5.31 3356.2418290000001   0.57…  113.  0.616    34.4\n# ℹ 39 more rows\n# ℹ 17 more variables: EMPSER &lt;dbl&gt;, INTERN &lt;dbl&gt;, ESPVIE &lt;dbl&gt;, AGEMED &lt;dbl&gt;,\n#   TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;, DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;,\n#   URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;, LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;,\n#   COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;\n\n\n\n\n6. Calculer le taux de dépendance jeune par sous-région\n\n# Proportion (Pourcentage) de jeunes par sous région\nDevAfrica2018 %&gt;%\n  group_by(SUBREG) %&gt;%\n  summarise(depJeune = mean(DJEUNE))\n\n# A tibble: 5 × 2\n  SUBREG          depJeune\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Eastern Africa      77.3\n2 Middle Africa       79.3\n3 Northern Africa     49.1\n4 Southern Africa     55.8\n5 Western Africa      79.6\n\n\n\n\n7. Ordonner les pays par sous région\n\n# Trier les pays par niveau de PIB croissant\nDevAfrica2018 %&gt;%\n  arrange(desc(SUBREG))\n\n# A tibble: 49 × 26\n   iso3  name  nom     POP PIB   IDH   ADOFEC CO2HAB EMPAGR EMPSER INTERN ESPVIE\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 BEN   Benin Bénin 11.6  3224… 0.54…   87.4  0.622   38.9   42.1  20      61.6\n 2 BFA   Burk… Burk… 20.0  2160… 0.44…  106.   0.197   25.6   40.9  16      61.4\n 3 CIV   Côte… Côte… 25.4  5133… 0.53…  118.   0.335   40.5   46.5  46.8    57.6\n 4 GHA   Ghana Ghana 30.1  5303… 0.60…   67.3  0.615   29.8   48.7  39      63.9\n 5 GIN   Guin… Guin… 12.6  2531… 0.47…  137.   0.256   62.0   31.9  18      61.4\n 6 GMB   Gamb… Gamb…  2.31 2175… 0.49…   79.8  0.268   27.4   56.9  19.8    61.9\n 7 GNB   Guin… Guin…  1.90 1969… 0.47…  105.   0.181   68.3   24.7   3.93   58.2\n 8 LBR   Libe… Libé…  4.88 1462… 0.47…  136.   0.323   43.4   46.3   7.98   63.9\n 9 MLI   Mali  Mali  19.4  2305… 0.43…  170.   0.187   62.8   29.6  13      59.1\n10 MRT   Maur… Maur…  4.46 5119… 0.54…   72.0  0.604   51.7   35.5  20.8    64.8\n# ℹ 39 more rows\n# ℹ 14 more variables: AGEMED &lt;dbl&gt;, TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;,\n#   DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;, URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;,\n#   LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;, COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;"
  },
  {
    "objectID": "modules/geomatique.html",
    "href": "modules/geomatique.html",
    "title": "Géomatique",
    "section": "",
    "text": "Géomatique avec R - vecteur\n\n\nLe package sf pour manipuler les données géographiques vectorielles\n\n\n\n\n\n\n27 juil. 2023\n\n\nTimothée Giraud, Hugues pecout\n\n\n\n\n\n\n\n\nGéomatique avec R - raster\n\n\nLe package terra pour manipuler les données géographiques RASTER\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues pecout, Timothée Giraud\n\n\n\n\n\n\n\n\nOpenStreetMap & R\n\n\nUtilisation du fond de carte, Géocodage, extraction de données et calcul d’itinéraire\n\n\n\n\n\n\n26 juil. 2023\n\n\nTimothée Giraud, Hugues pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  }
]