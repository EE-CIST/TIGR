[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "TIG’R est une ressource d’apprentissage pour le traitement de l’information géographique avec R. Ce site a été crée dans le cadre de l’école thématique Méthodes et outils de sciences territoriales organisée par le Collègue Internationnal des Sciences Territoriales et qui s’est déroulée à Ouidah (Bénin) en Mars 2023.\nCe site contient des supports de cours et exercices reproductibles qui tente de couvrir l’ensemble de la chaîne de traitement de données géographiques.\nL’ensemble du matériel mis à disposition est soumis à la Licence ouverte V2.0 d’Etalab."
  },
  {
    "objectID": "correction/tidyverse/correction_tidyverse.html",
    "href": "correction/tidyverse/correction_tidyverse.html",
    "title": "Application Tidyverse & ggplot2",
    "section": "",
    "text": "Exercice 1 ~ Application Tidyverse\n\n1. Importer la base de données DEV_AFRICA_2018 sous le nom DevAfrica2018\n\nlibrary(tidyverse)\n\n# Import des métadonnées\nmetaDataDEVAFRICA  &lt;- read.table(file = \"data/DEV_AFRICA_2018/afrika_don_meta.csv\", \n                           header = TRUE,\n                           sep= \";\",\n                           encoding = \"UTF-8\")\n\nlibrary(readxl)\nDevAfrica2018 &lt;- read_excel(\"data/DEV_AFRICA_2018/afrika_don.xls\")\n\n\n\n2. Sélectionner la liste des pays et leur region d’appartenance\n\n# Sélection de la liste des pays et leur region d'appartenance\nDevAfrica2018 %&gt;%\n  select(nom, SUBREG)\n\n# A tibble: 49 × 2\n   nom                 SUBREG         \n   &lt;chr&gt;               &lt;chr&gt;          \n 1 Angola              Middle Africa  \n 2 Burundi             Eastern Africa \n 3 Bénin               Western Africa \n 4 Burkina Faso        Western Africa \n 5 Botswana            Southern Africa\n 6 Rep. Centrafricaine Middle Africa  \n 7 Côte d'Ivoire       Western Africa \n 8 Cameroun            Middle Africa  \n 9 Congo, Rép. dém. du Middle Africa  \n10 Congo               Middle Africa  \n# ℹ 39 more rows\n\n\n\n\n3. Quelles sont les variables de la base de données dont le nom commence par la lettre “P”\n\n# Select ion de colonnes par nom : sélectionner les variables dont le nom commencent par \"P\" \nDevAfrica2018 %&gt;%\n  select(starts_with(\"P\"))\n\n# A tibble: 49 × 2\n     POP PIB               \n   &lt;dbl&gt; &lt;chr&gt;             \n 1 31.3  6793.7084905000002\n 2 11.4  756.59407529999999\n 3 11.6  3224.0433155000001\n 4 20.0  2160.5894579999999\n 5  2.28 17700.315175      \n 6  4.71 938.98882209999999\n 7 25.4  5133.5904630000005\n 8 25.5  3628.1176970000001\n 9 85.4  1091.9212769999999\n10  5.31 3356.2418290000001\n# ℹ 39 more rows\n\n\n\n\n4. Quelles sont les variables de la base de données dont le nom contient la lettre “P”\n\n# sélectionner les variables dont le nom contient la lettre \"P\" \nDevAfrica2018 %&gt;%\n  select(contains(\"P\"))\n\n# A tibble: 49 × 5\n     POP PIB                EMPAGR EMPSER ESPVIE\n   &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 31.3  6793.7084905000002   50.4  41.4    61.0\n 2 11.4  756.59407529999999   92.0   6.50   61.4\n 3 11.6  3224.0433155000001   38.9  42.1    61.6\n 4 20.0  2160.5894579999999   25.6  40.9    61.4\n 5  2.28 17700.315175         20.9  61.0    69.4\n 6  4.71 938.98882209999999   77.4  17.2    53.0\n 7 25.4  5133.5904630000005   40.5  46.5    57.6\n 8 25.5  3628.1176970000001   43.8  41.4    59.1\n 9 85.4  1091.9212769999999   65.6  24.7    60.5\n10  5.31 3356.2418290000001   34.4  43.7    64.4\n# ℹ 39 more rows\n\n\n\n\n5. Renommer la variable “PIB” en “ProduitInterieurBrut”\n\n# Renommer la variable \"PIB\"  par \"ProduitInterieurBrut\"\nDevAfrica2018 %&gt;%\n  rename(ProduitInterieurBrut = PIB)\n\n# A tibble: 49 × 26\n   iso3  name        nom     POP ProduitInterieurBrut IDH   ADOFEC CO2HAB EMPAGR\n   &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 AGO   Angola      Ango… 31.3  6793.7084905000002   0.58…  153.  1.12     50.4\n 2 BDI   Burundi     Buru… 11.4  756.59407529999999   0.432   56.2 0.0467   92.0\n 3 BEN   Benin       Bénin 11.6  3224.0433155000001   0.54…   87.4 0.622    38.9\n 4 BFA   Burkina Fa… Burk… 20.0  2160.5894579999999   0.44…  106.  0.197    25.6\n 5 BWA   Botswana    Bots…  2.28 17700.315175         0.73…   46.3 2.96     20.9\n 6 CAF   Central Af… Rep.…  4.71 938.98882209999999   0.39…  130.  0.0651   77.4\n 7 CIV   Côte d'Ivo… Côte… 25.4  5133.5904630000005   0.53…  118.  0.335    40.5\n 8 CMR   Cameroon    Came… 25.5  3628.1176970000001   0.56…  108.  0.323    43.8\n 9 COD   Dem. Rep. … Cong… 85.4  1091.9212769999999   0.47…  125.  0.0242   65.6\n10 COG   Congo       Congo  5.31 3356.2418290000001   0.57…  113.  0.616    34.4\n# ℹ 39 more rows\n# ℹ 17 more variables: EMPSER &lt;dbl&gt;, INTERN &lt;dbl&gt;, ESPVIE &lt;dbl&gt;, AGEMED &lt;dbl&gt;,\n#   TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;, DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;,\n#   URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;, LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;,\n#   COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;\n\n\n\n\n6. Calculer le taux de dépendance jeune par sous-région\n\n# Proportion (Pourcentage) de jeunes par sous région\nDevAfrica2018 %&gt;%\n  group_by(SUBREG) %&gt;%\n  summarise(depJeune = mean(DJEUNE))\n\n# A tibble: 5 × 2\n  SUBREG          depJeune\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Eastern Africa      77.3\n2 Middle Africa       79.3\n3 Northern Africa     49.1\n4 Southern Africa     55.8\n5 Western Africa      79.6\n\n\n\n\n7. Ordonner les pays par sous région\n\n# Trier les pays par niveau de PIB croissant\nDevAfrica2018 %&gt;%\n  arrange(desc(SUBREG))\n\n# A tibble: 49 × 26\n   iso3  name  nom     POP PIB   IDH   ADOFEC CO2HAB EMPAGR EMPSER INTERN ESPVIE\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 BEN   Benin Bénin 11.6  3224… 0.54…   87.4  0.622   38.9   42.1  20      61.6\n 2 BFA   Burk… Burk… 20.0  2160… 0.44…  106.   0.197   25.6   40.9  16      61.4\n 3 CIV   Côte… Côte… 25.4  5133… 0.53…  118.   0.335   40.5   46.5  46.8    57.6\n 4 GHA   Ghana Ghana 30.1  5303… 0.60…   67.3  0.615   29.8   48.7  39      63.9\n 5 GIN   Guin… Guin… 12.6  2531… 0.47…  137.   0.256   62.0   31.9  18      61.4\n 6 GMB   Gamb… Gamb…  2.31 2175… 0.49…   79.8  0.268   27.4   56.9  19.8    61.9\n 7 GNB   Guin… Guin…  1.90 1969… 0.47…  105.   0.181   68.3   24.7   3.93   58.2\n 8 LBR   Libe… Libé…  4.88 1462… 0.47…  136.   0.323   43.4   46.3   7.98   63.9\n 9 MLI   Mali  Mali  19.4  2305… 0.43…  170.   0.187   62.8   29.6  13      59.1\n10 MRT   Maur… Maur…  4.46 5119… 0.54…   72.0  0.604   51.7   35.5  20.8    64.8\n# ℹ 39 more rows\n# ℹ 14 more variables: AGEMED &lt;dbl&gt;, TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;,\n#   DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;, URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;,\n#   LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;, COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;"
  },
  {
    "objectID": "modules.html",
    "href": "modules.html",
    "title": "Modules thématiques",
    "section": "",
    "text": "Données\n\n\nImport, collecte , connexion BD…\n\n\n\n\n\n\n\n\n\n\n\n\n\nManipulation\n\n\nGestion & traitement de données\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique\n\n\nStat. descriptive uni, bi et multivariée\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraphique\n\n\nReprésentation graphique\n\n\n\n\n\n\n\n\n\n\n\n\n\nRéseau\n\n\nAnalyse de réseau et théorie des graphes\n\n\n\n\n\n\n\n\n\n\n\n\n\nGéomatique\n\n\nTraitement données vecteur et raster\n\n\n\n\n\n\n\n\n\n\n\n\n\nCartographie\n\n\nCartographie thématique\n\n\n\n\n\n\n\n\n\n\n\n\n\nReproductibilité\n\n\nBonnes pratiques pour la recherche reproductible\n\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "modules/WIP/connectBD.html",
    "href": "modules/WIP/connectBD.html",
    "title": "Connexion à une BD",
    "section": "",
    "text": "Work in progress"
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html",
    "href": "modules/geomatique/geomatic_vector.html",
    "title": "Géomatique avec R - vecteur",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques vectorielles avec le package sf. Les différentes manipulations de données vectorielles abordées sont :\n\nImport et export de données\nGestion de la projection cartographique\nAffichage graphique des données\nSélection par attribut\nSélection spatiale\nOpération sur les géométries"
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html#introduction",
    "href": "modules/geomatique/geomatic_vector.html#introduction",
    "title": "Géomatique avec R - vecteur",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques vectorielles avec le package sf. Les différentes manipulations de données vectorielles abordées sont :\n\nImport et export de données\nGestion de la projection cartographique\nAffichage graphique des données\nSélection par attribut\nSélection spatiale\nOpération sur les géométries"
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html#manuel",
    "href": "modules/geomatique/geomatic_vector.html#manuel",
    "title": "Géomatique avec R - vecteur",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCe support de ce cours est très largement inspiré du manuel “Géomatique avec R”, plus complet et initialement conçu pour accompagner le cours ‘Cartographie avec R’ du Master 2 Géomatique, géodécisionnel, géomarketing et multimédia (G2M) de l’Université Paris 8 Vincennes - Saint-Denis (France). Vous pouvez envoyer vos remarques et suggestions aux auteurs en postant une issue sur le dépôt GitHub de ce document."
  },
  {
    "objectID": "modules/geomatique/geomatic_vector.html#exercice",
    "href": "modules/geomatique/geomatic_vector.html#exercice",
    "title": "Géomatique avec R - vecteur",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nEmprise des agglomérations urbaines (AFRICAPOLIS 2020)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez le fichier africapolis_extract.shp\n\n\nUn peu d’aide ?\n# Pour importer des données géographiques \nlibrary(sf)\n... &lt;- st_read()\n\n\n5. Vérifiez quelle est la projection cartographique utilisée. Re-projetez la couche dans la projection UTM zone 31N (EPSG : 32631 ).\n\n\nUn peu d’aide ?\n# Pour connaitre le système de référence et de projection d'une couche\nst_crs(...)\n\n# Transformer le crs d'un objet sf\n... &lt;- st_transform(...)\n\n\n5. Affichez les géométries des agglomérations urbaines.\nAstuce : Vous pouvez utiliser la package mapview qui permet d’afficher la couche sur différents fonds de carte dynamiques. Cela permet de contrôler le niveau de précision de vos données.\n\n\nUn peu d’aide ?\n# Affichez les géométries d'un objet sf\nplot(st_geometry(...))\n\n# Afficher sur un fond de carte dynamique\nlibrary(mapview)\nmapview(...)\n\n\n6. Calculez les surfaces de chaque agglomération urbaine. Enregistrez ces valeurs dans une nouvelle colonne.\n\n\nUn peu d’aide ?\n# st_area() permet de calculer la surface des polygones d'un objet sf\n...$... &lt;- st_area(...)\n\n\n7. Calculez le nombre et la superficie totale des agglomérations urbaines, par pays.\n\n\nUn peu d’aide ?\nlibrary(dplyr)\n\n... &lt;- ... %&gt;% \n          group_by(...) %&gt;% \n          summarise(... = sum(...),\n                    ... = n())\n\n\n8. Créez une quatrième couche géographique (point) à partir des coordonnées de l’Institut Régional de Santé Publique, à Ouidah (Bénin) :\n\nLatitude = 6.349223507626634\nLongitude = 2.0879482065861783\nCRS = WGS84 (4326)\n\n\n\nUn peu d’aide ?\n# Création d'un data.frame avec les colonnes \"name\", \"lat\" et \"long\"\nIRSP &lt;- data.frame(name = \"...\", \n                   lat = ..., \n                   long = ...)\n\n\n# Création d'une couche géographique à partir de ces cordonnées\nIRSP_geo &lt;- st_as_sf(IRSP, \n                     coords = c(\"...\", \"...\"), \n                     crs = ...)\n\n\n9. Créez une zone tampon de 50km autour de l’Institut Régional de Santé Publique\n\n\nUn peu d’aide ?\n# Créer un zone tampon\n... &lt;- st_buffer(..., dist = ...)\n\n\n10. Détectez les agglomérations urbaines situées à moins de 50 km de l’IRSP\n\n\nUn peu d’aide ?\n# Quelles agglomérations intersectent la zone tampon ?\n...$... &lt;- st_intersects(..., ..., sparse = ...)\n\n\n11. Affichez correctement les différentes couches. Utilisez la couleur pour indiquer les agglomérations urbaines qui intersectent la zone tampon. Exemple :\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Utilisez l'argument \"add\" pour superposer les couches\n\nplot(st_geometry(...))\nplot(...[\"...\"], add = TRUE)\nplot(st_geometry(...), add = TRUE)\nplot(st_geometry(...), add = TRUE)\n\n\n12. Combien d’habitants résident dans les agglomérations urbaines qui intersectent la zone tampon ?\n\n\nCode\n# Sélectionnez les agglomérations qui intersectent la zone tampon\n... &lt;- ...[...$... == TRUE, ]\n\n# Calcul de la population totale de ces agglomérations\nsum(...$...)\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/network.html",
    "href": "modules/network.html",
    "title": "Réseau",
    "section": "",
    "text": "Analyse de réseau avec igraph\n\n\nPrésentation et fonctionnement du package igraph\n\n\n\n\n\n\n26 juil. 2023\n\n\nLaurent Beauguitte, Mégane Fernandez, Hugues pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/reproductibilite/programmation_lettree.html",
    "href": "modules/reproductibilite/programmation_lettree.html",
    "title": "Programmation lettrée et notebook",
    "section": "",
    "text": "Présentation du paradigme de programmation lettrée et du format de publication notebook, qui offre de nombreuses fonctionnalités pour de nombreux usages.\n\n\n→ Consulter en plein écran\n→ Accéder au code source"
  },
  {
    "objectID": "modules/reproductibilite/programmation_lettree.html#introduction",
    "href": "modules/reproductibilite/programmation_lettree.html#introduction",
    "title": "Programmation lettrée et notebook",
    "section": "",
    "text": "Présentation du paradigme de programmation lettrée et du format de publication notebook, qui offre de nombreuses fonctionnalités pour de nombreux usages.\n\n\n→ Consulter en plein écran\n→ Accéder au code source"
  },
  {
    "objectID": "modules/reproductibilite/programmation_lettree.html#le-rmarkdown",
    "href": "modules/reproductibilite/programmation_lettree.html#le-rmarkdown",
    "title": "Programmation lettrée et notebook",
    "section": "Le Rmarkdown",
    "text": "Le Rmarkdown\n\n\n→ Consulter en plein écran\n→ Accéder au code source"
  },
  {
    "objectID": "modules/reproductibilite/programmation_lettree.html#exercice",
    "href": "modules/reproductibilite/programmation_lettree.html#exercice",
    "title": "Programmation lettrée et notebook",
    "section": " Exercice",
    "text": "Exercice"
  },
  {
    "objectID": "modules/import/import.html",
    "href": "modules/import/import.html",
    "title": "Import et export de données",
    "section": "",
    "text": "De nombreuses de fonctions permettent d’importer et d’exporter des données de différents formats."
  },
  {
    "objectID": "modules/import/import.html#tableau-de-données",
    "href": "modules/import/import.html#tableau-de-données",
    "title": "Import et export de données",
    "section": "Tableau de données",
    "text": "Tableau de données\n\nFichier texte simple\nUn fichier texte simple (ou fichier texte brut) est un fichier dont le contenu représente uniquement une suite de caractères. Il peut s’ouvrir avec n’importe quel éditeur de texte et utilise nécessairement une forme particulière de codage des caractères.\nPlusieurs fonctions primitives permettent d’importer et d’exporter des fichiers texte simples, comme les fichiers csv, txt , tsv…\n\nImport\n\nread.delim() : fichiers délimités par un symbole quelconque et “.” en séparateur décimal\nread.delim2() : fichiers délimités par un symbole quelconque et “,” en séparateur décimal\nread.table() : pour des fichiers texte délimités par des espaces\n\nread.csv() : pour des fichiers texte délimités par des virgules (format csv)\nread.csv2() : pour des fichiers texte délimités par des points-virgules (format csv français)\n\nPour que l’import de données s’effectue correctement, il est parfois nécessaire de renseigner plusieurs arguments, comme par exemple :\nheader = valeur logique qui indique si la première ligne contient les noms des variables. sep = indique le caractère utilisé comme séparateur de champ (ex : “;”) encoding = Chaîne de caractère qui précise l’encodage utilisé pour le fichier (ex : “UTF-8”).\n\n\n\n\n\n\nImportant\n\n\n\nN’oubliez pas d’assigner le résultat dans un objet pour garder en mémoire vos données importées.\n\n\n\n# Exemple d'utilisation de read.table()\nmon_tableau  &lt;- read.table(file = \"../data/DEV_AFRICA_2018/afrika_don_meta.csv\", \n                           header = TRUE,\n                           sep= \";\",\n                           encoding = \"UTF-8\")\n\n\n# Le tableau importé est stocké dans un objet data.frame\nclass(mon_tableau)\n\n[1] \"data.frame\"\n\n\n\n\nExport\nDes fonctions primitives permettent également d’exporter votre tableau de données vers différents format texte.\n\nwrite.table() : pour tous les types de formats texte simple (séparateur à renseigner)\nwrite.csv() : pour exporter en csv (séparateur virgule)\nwrite.csv2() : pour exporter en csv (séparateur points-virgules)\n\n\n\nVoir l’exemple\n# Exemple write.table()\nwrite.table(x = mon_tableau, \n            file = \"../data/tableau.txt\", \n            sep = \"\\t\", col.names = TRUE, \n            fileEncoding = \"UTF-8\")\n              \n# Exemple write.csv()\nwrite.csv(x = mon_tableau, file = \"../data/tableau.csv\")\n\n\n\n\n\n\n\nFichier Excel\nIl est parfois nécessaire d’importer des tableaux de données stockées dans un format propriétaire, comme par exemple Excel (xls, xlsx) ou SAS. Plusieurs packages vous permettent d’importer ce genre de format, et même d’exporter vos données dans ce type de format.\n\nImport\nVous pouvez par exemple importer un fichier Excel avec le package readxl.\n\ninstall.packages(\"readxl\")\n\n\n\n\n\n\n\nImportant\n\n\n\nLe packages readxl fait partie de l’écosystème tidyverse (cf. module x). Pour cette raison, le tableau importé est mis en mémoire dans un objet tibble et non dataframe. Il s’agit de deux objets très semblables mais pas identiques. Pour convertir un tibble en dataframe, vous pouvez utiliser la fonction as.data.frame().\n\n\n\nlibrary(readxl)\nmon_tableau &lt;- read_excel(path = \"../data/DEV_AFRICA_2018/afrika_don.xls\", \n                          sheet = \"afrika_meta\", \n                          skip = 0,\n                          col_names = TRUE)\n\n# Le tableau importé est stocké dans un objet data.frame\nclass(mon_tableau)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\nExport\nPour exporter un dataframe (ou tibble) dans un fichier au format Excel, vous pouvez utiliser le package openxlsx et sa fonction write.xlsx().\n\ninstall.packages(\"openxlsx\")\n\n\n\n\n\n\n\nImportant\n\n\n\nLe packages openxlsx permet uniquement de lire et écrire les fichiers Excel comportant l’extension .xlsx.\n\n\n\n\nVoir l’exemple\nlibrary(openxlsx)\nwrite.xlsx(x = mon_tableau, file = \"../data/DEV_AFRICA_2018/afrika_don.xlsx\")\n\n\n\n\n\n\n\nSAS, SPSS & Stata\nLe package haven permet de gérer des fichiers propriétaires de différents formats comme SAS, SPSS, Stata, dbf…\n\ninstall.packages(\"haven\")\n\n\n\n\n\n\n\nImportant\n\n\n\nTout comme readxl, ce package fait partie de l’écosystème tidyverse (cf. module x). Le tableau importé est mis en mémoire dans un objet tibble et non dataframe. Vous pouvez utiliser la fonction as.data.frame() pour le convertir.\n\n\n\nFichier SAS\n\n\nVoir l’exemple\nlibrary(haven)\n\n# Import\nmon_tableau  &lt;- read_sas(data_file = \"../data/data_sas.sas7bdat\")\n\n# Export\nwrite_sas(data = mon_tableau, path = \"../data/mon_tableau_sas.sas7bdat\")\n\n\n\n\nFichier SPSS\n\n\nVoir l’exemple\nlibrary(haven)\n\n# Import\nmon_tableau  &lt;- read_sav(file =  \"../data/data_spss.sav\")\n\n# Export\nwrite_sav(data = mon_tableau, path =  \"../data/mon_tableau_spss.sav\")\n\n\n\n\nFichier Stata\n\n\nVoir l’exemple\nlibrary(haven)\n\n# Import\nmon_tableau  &lt;- read_stata(file =  \"../data/data_stata.dta\")\n\n# Export\nwrite_dta(data = mon_tableau, path =  \"../data/mon_tableau_stata.dta\")"
  },
  {
    "objectID": "modules/import/import.html#couche-géographique",
    "href": "modules/import/import.html#couche-géographique",
    "title": "Import et export de données",
    "section": "Couche géographique",
    "text": "Couche géographique\n\nVecteur\nLe package sf permet de lire les différents formats de couche géographique vectorielle (ESRI Shapefile, GeoJSON, Keyhole Markup Language, GeoPackage…). Pour cela, ce package interface avec la librairie système GDAL. Les SIG fonctionnent de la même façon !\n\ninstall.packages(\"sf\")\n\n\n\n\n\n\n\nNote\n\n\n\nL’installation du package sf demande un prérequis. La librairie système GDAL doit être installée sur votre machine. Il est parfois nécessaire de la faire soi-même sur certains système d’exploitation comme GNU/Linux.\n\n\n\nImport\n\nlibrary(sf)\nmap_africa &lt;- st_read(\"../data/GADM_AFRICA_2020/afrika_map.shp\",  quiet = TRUE)\n\nclass(map_africa)\n\n[1] \"sf\"         \"data.frame\"\n\n\n\n\n\n\n\n\nImportant\n\n\n\nUne couche géographique importée via la fonction st_read() du package sf est mise en mémoire dans un objet sf (simple feature). Il s’agit en quelque sorte d’un dataframe ou chaque individu est associé à une géométrie.\n\n\n\n\nExport\nLa fonction st_write() permet d’enregistrer un objet sf sur sa machine, dans le format que l’on souhaite.\n\n\nVoir les exemples\nlibrary(sf)\n\n# Enregistrement en format ESRI Shapefile\nst_write(obj = map_africa, \n         dsn = \"../data/map_africa.shp\", \n         layer_options = \"ENCODING=UTF-8\")\n\n\n# Enregistrement en format GeoPackage\nst_write(obj = map_africa, \n         dsn = \"../data/map_africa.gpkg\", \n         layer = \"pays\")\n\n\n\n\n\n\n\nRaster\nLe package terra permet aussi de lire et d’écrire des données géographiques vectorielles (comme sf) mais sa valeur ajoutée se situe au niveau de la manipulation de données raster.\n\ninstall.packages(\"terra\")\n\n\nImport\nPour importer des données Raster, vous pouvez utiliser la fonction rast().\n\n\n\n\n\n\nImportant\n\n\n\nUn Raster importé via la fonction rast() du package terra est mis en mémoire dans un objet SpatRaster.\n\n\n\nlibrary(terra)\nElevation_Benin &lt;- rast(\"../data/elevation.tif\") \n\nElevation_Benin\n\nclass       : SpatRaster \ndimensions  : 742, 369, 1  (nrow, ncol, nlyr)\nresolution  : 0.008339098, 0.008333169  (x, y)\nextent      : 0.774574, 3.851701, 6.23514, 12.41835  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : elevation.tif \nname        : elevation \n\n\n\n\nExport\nLa fonction writeRaster() permet d’enregistrer un objet SpatRaster sur sa machine, dans le format que l’on souhaite.\n\n\nVoir l’exemple\nlibrary(terra)\nwriteRaster(x = Elevation_Benin, filename = \"../data/Benin_Elevation.tif\")"
  },
  {
    "objectID": "modules/import/import.html#image",
    "href": "modules/import/import.html#image",
    "title": "Import et export de données",
    "section": "Image",
    "text": "Image\n\nImport\nPour importer des images, le package pnget jpeg, pré-installés avec le language R vous permet d’importer des images.\n\nPNG\n\n\nVoir l’exemple\nlibrary(png)\nmon_image_png &lt;- readPNG(\"../img/map.png\")\n\n\n\n\nJPEG\n\n\nVoir l’exemple\nlibrary(jpeg)\nmon_image_jpg &lt;- readJPEG(\"../img/wip.jpg\")\n\n\n\n\n\nExport\nIl est également possible d’exporter les sorties graphiques en format image avec les fonctions primitives suivantes :\n\nbmp()\njpeg()\npng()\ntiff()\n\nCes fonctions doivent être utilisées avec la fonction dev.off(). Exemple :\n\n\nVoir l’exemple\n# Ouverture de la création de l'image\npng(filename = \"../img/mon_image.jpg\")\n\n# Création de la représentation graphique souhaitée\nplot(1:10)\n\n# Fermeture (enregistrement) de l'image png\ndev.off()\n\n\n\n\n\n\n\n\nImportant\n\n\n\nLa fonction dev.off() permet de clôturer la représentation graphique et d’enregistrer l’image. Si aucun dev.off() n’est exécuté à la suite de ces fonctions d’export, votre fenêtre graphique restera figée, et inutilisable.\n\n\nIl est également possible d’exporter vos représentations graphiques dans un format vectoriel, qui permet leur retouche avec des logiciel de DAO (Inkscape, Adobe Illustrator…). Les fonction pour réaliser cela sont :\n\npdf()\nsvg()\n\nL’utilisation de ces fonctions primitives est similaire à l’export d’images matricielles. Exemple :\n\n\nVoir l’exemple\n# Ouverture de la création de l'image\npdf(file = \"../img/mon_image.pdf\")\n\n# Création de la représentation graphique souhaitée\nplot(1:10)\n\n# Fermeture (enregistrement) du pdf\ndev.off()"
  },
  {
    "objectID": "modules/import/import.html#exercice",
    "href": "modules/import/import.html#exercice",
    "title": "Import et export de données",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\nFond de carte Afrique (GADM 2020)\n Download\n\n\nRaster délévation du Bénin\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Créez un script R à la racine de votre projet Rstudio\nFile/New File/R script\n5. Importer les fichiers suivants en utilisant les fonctions adéquates :\n\ndata/DEV_AFRIA_2018/afrika_don.csv\n\ndata/DEV_AFRICA_2018/afrika_don.xls (1er onglet)\n\ndata/GADM_AFRICA_2020/afrika_map.shp\n\ndata/elevation.tif\n\n\n\nUn peu d’aide ?\n# Pour importer un fichier csv (afrika_don.csv)\nread.csv()\nread.csv2()\n\n# Pour importer un fichier Excel (afrika_don.xls)\nlibrary(readxl)\nread_excel()\n\n# Pour importer un fichier ESRI Shapefile (afrika_map.shp)\nlibrary(sf)\nst_read()\n\n# Pour importer un fichier TIF (elevation.tif)\nlibrary(terra)\nrast()\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/manipulation.html",
    "href": "modules/manipulation.html",
    "title": "Manipulation",
    "section": "",
    "text": "Manipulation de tableau de données\n\n\nLes fonctions primitives pour manipuler un tableau de données\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues pecout, Justin Dansou\n\n\n\n\n\n\n\n\nL’ecosystème tidyverse\n\n\nManipulation de données avec les packages du tidyverse\n\n\n\n\n\n\n26 juil. 2023\n\n\nJustin Dansou, Hugues Pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/statistique.html",
    "href": "modules/statistique.html",
    "title": "Statistique",
    "section": "",
    "text": "Classification Ascendante Hiérarchique\n\n\nConstruire une CAH avec des fonctions R-base\n\n\n\n\n\n\n27 juil. 2023\n\n\nHugues pecout, Justin Dansou\n\n\n\n\n\n\n\n\nStatistique descriptive univariée\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nStatistique descriptive bivariée\n\n\n\n\n\n\n\n \n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/manipulation/tidyverse.html",
    "href": "modules/manipulation/tidyverse.html",
    "title": "L’ecosystème tidyverse",
    "section": "",
    "text": "L’objectif général de ce module est d’initier les participants à la famille de packages tidyverse.\nPlus spécifiquement, à la fin de ce module, les participants devraient être capables de:\n\ninstaller et de charger la librairie tidyverse,\ndécrire les principales librairies de la famille tidyverse,\ndécrire les principales fonctions de la librairie de tidyverse dédiée à la manipulation de données (dplyr),\nmanipuler les principales fonctions de dplyr dédiées à la manipulation de données."
  },
  {
    "objectID": "modules/manipulation/tidyverse.html#installation-et-chargement-du-package-tidyverse",
    "href": "modules/manipulation/tidyverse.html#installation-et-chargement-du-package-tidyverse",
    "title": "L’ecosystème tidyverse",
    "section": "Installation et chargement du package tidyverse",
    "text": "Installation et chargement du package tidyverse\nLes lignes de codes suivantes permettent de faire l’installation et le chargement de tidyverse.\n\n# Installation du package \ninstall.packages(\"tidyverse\")\n\n# Chargement du package. \nlibrary(tidyverse)\n\nLes principales librairies (écosystème tidyverse) automatiquement installées avec tidyverse sont les suivantes :\n\nreadr : import de données,\ntibble : exploitation des tableaux de données,\nstringr : manipulation des chaînes de caractères,\ndplyr : manipulation des données,\ntidyr : remise en forme des données,\nggplot2 : visualisation / représentation graphique des données,\nforcats : variables qualitatives,\npurrr : programmation.\n\nLa liste complèle des extensions de tidyverse se trouve sur le site officiel du tidyverse.\nNote: Ceci étant, au lieu d’installer la collection de packages (tidyverse), il est aussi possible d’installer directement l’extension souhaité. Par exemple, si l’on souhaite utiliser des fonctions du package dplyr, vous pouvez uniquement installer ce package de la manière suivante :\n\n# Installation du package dplyr \ninstall.packages(\"dplyr\")\n\nPuis charger la librairie pour pouvoir utiliser ses fonctions :\n\n# Chargement de la librairie\nlibrary(dplyr)"
  },
  {
    "objectID": "modules/manipulation/tidyverse.html#la-fonction-group_by",
    "href": "modules/manipulation/tidyverse.html#la-fonction-group_by",
    "title": "L’ecosystème tidyverse",
    "section": "La fonction group_by()",
    "text": "La fonction group_by()\nLa clause group_by() est aussi l’une des fonctions d’usage courant et utile de dplyr. Elle permet de définir des groupes de lignes à partir des valeurs d’une ou plusieurs colonnes. Par exemple, on peut regroupe la population d’un pays par un certain niveau de découpage administratif. L’usage courant est d’effectuer des opérations sur les groupes constitués par la fonction group_by() en faisant appel à d’autres fonctions, par exemple slice(), mutate() ou summarise(). L’argument n() de summarise() appliqué à un group_by() permet d’obtenir les effectifs par groupe.\nIl est aussi possible de grouper selon plusieurs colonnes / variables en les indiquant dans la clause du group_by().\nNote: la clause group_by() marche avec la plus part des fonctions à l’exception de arrange() qui s’applique par défaut à l’ensemble du tableau de données. Pour avoir un tri par groupe, un argument suplémentaire .by_group = TRUE doit être utilisé.\n\n# Population moyenne par sous région\nDevAfrica2018 %&gt;%\n     group_by(SUBREG) %&gt;%\n     summarise(popMoyen = mean(POP))\n\n# A tibble: 5 × 2\n  SUBREG          popMoyen\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Eastern Africa      28.3\n2 Middle Africa       21.4\n3 Northern Africa     39.8\n4 Southern Africa     13.2\n5 Western Africa      25.7"
  },
  {
    "objectID": "modules/manipulation/tidyverse.html#exercice",
    "href": "modules/manipulation/tidyverse.html#exercice",
    "title": "L’ecosystème tidyverse",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importer la base de données DEV_AFRICA_2018 sous le nom DevAfrica2018.\n\n\nUn peu d’aide ?\n# Import des métadonnées\n...  &lt;- read.table(file = \"...\", \n                   header = ...,\n                   sep= \"...\",\n                   encoding = \"...\")\n\n\nlibrary(...)\nDevAfrica2018 &lt;- read_excel(\"...\")\n\n\n5. Sélectionner la liste des pays et leur région d’appartenance.\n\n\nUn peu d’aide ?\nDevAfrica2018 %&gt;%\n    select(..., ...)\n\n\n6. Quelles sont les variables de la base de données dont le nom commence par la lettre “P”.\n\n\nUn peu d’aide ?\nDevAfrica2018 %&gt;%\n    select(...(\"...\"))\n\n\n7. Quelles sont les variables de la base de données dont le nom contient la lettre “P”.\n\n\nUn peu d’aide ?\nDevAfrica2018 %&gt;%\n   select(...(\"...\"))\n\n\n8. Renommer la variable “PIB” en “ProduitInterieurBrut”.\n\n\nUn peu d’aide ?\nDevAfrica2018 %&gt;%\n   rename(... = ...)\n\n\n9. Calculer le taux de dépendance jeune par sous-région.\n\n\nUn peu d’aide ?\nDevAfrica2018 %&gt;%\n    group_by(...) %&gt;%\n    summarise(... = mean(...))\n\n\n10. Trier les pays par sous-région.\n\n\nUn peu d’aide ?\nDevAfrica2018 %&gt;%\n   arrange(...(...))\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/graphique/ggplot2.html",
    "href": "modules/graphique/ggplot2.html",
    "title": "Le package ggplot2",
    "section": "",
    "text": "L’objectif général de ce module est d’initier les participants à l’extension de visualisation de données avec ggplot2, package de la famille de tidyverse.\nPlus spécifiquement, à la fin de ce module, les participants devraient être capables de:\n\nd’installer et de charger la librairie ggplot2,\ndécrire les principales fonctions de la librairie de tidyverse dédiée à la visualisation de données (ggplot2),\nmanipuler les principales fonctions graphiques de ggplot2 dédiées à la visualisation de données."
  },
  {
    "objectID": "modules/graphique/ggplot2.html#installation-et-chargement-du-package-ggplot2",
    "href": "modules/graphique/ggplot2.html#installation-et-chargement-du-package-ggplot2",
    "title": "Le package ggplot2",
    "section": "Installation et chargement du package ggplot2",
    "text": "Installation et chargement du package ggplot2\nLes lignes de codes suivantes permettent de faire l’installation et le chargement de tidyverse.\n\n# Installation du package \ninstall.packages(\"tidyverse\")\n\n# Chargement de la librairie \nlibrary(ggplot2)\n\nLa liste complète des extensions de tidyverse se trouve sur le site officiel du tidyverse ici.\nNote: Ceci étant, au lieu d’installer la collection de packages (tidyverse), il est aussi possible d’installer directement ggplot2. Exemple :\n\n# Installation du package ggplot2\ninstall.packages(\"ggplot2\")\n\nPuis charger la librairie pour pouvoir utiliser ses fonctions :\n\n# Chargement de la librairie\nlibrary(ggplot2)"
  },
  {
    "objectID": "modules/graphique/ggplot2.html#fonctions-graphiques-usuelles-de-viusalisation-des-données-avec-ggplot2",
    "href": "modules/graphique/ggplot2.html#fonctions-graphiques-usuelles-de-viusalisation-des-données-avec-ggplot2",
    "title": "Le package ggplot2",
    "section": "Fonctions graphiques usuelles de viusalisation des données avec ggplot2",
    "text": "Fonctions graphiques usuelles de viusalisation des données avec ggplot2\n\nPrincipe de base des synthaxes graphiques de ggplot2\nLa syntaxe de ggplot2 est spécifique et diffère totalement de celle des graphiques de base de R. Elle est de type “Grammar of Graphics” et est généralement structurée comme un ensemble indépendant de commandes. Ce module n’est qu’une introduction à quelques fonctions usuelles d’application de ggplot2. Pour plus d’information, le lecteur est invité à consulter les nombreuses ressources disponibles (en général gratuitement) en ligne sur l’extension.\nLe principe de base de la représentation graphique de ggplot2 consiste à segmenter les instructions. En général, il nécessite de spécifier :\n\nle jeux de données contenant l’information à visualiser,\nl’information (variable ou ensemble de variables) que l’on souhaite visualiser. Elle est généralement indiquée au niveau de la fonction aes(),\nle type de visualisation (représentation graphique) souhaité: camembert, histogramme, etc. Il est aussi spécifié par une fonction.\n\n\n\nGrammaire du ggplot\nLa grammaire de la syntaxe de ggplot2 se présente ainsi qui suit:\n\nData (ggplot): pour spécifier le jeu de données contenant l’information à visualiser. Le jeu de données est généralement un data frame, un tibble ou tableau de données renseigné dans la fonction ggplot(),\nAesthetics (aes): pour spécifier l’information / variable.s à représenter/visualiser. La ou les variables à visualiser est/sont indiquées dans la fonction aes(). Elle prend en argument d’autres paramètre de contrôler avancé du rendu de la représentation graphique. Il s’agit de color, size, fill en général utilisé lorsqu’une couleur ou une taille est définie par une variable,\nGeometrics (geom_…) pour spécifier le type de représentation graphique souhaité (cf. plus bas pour la description des fonctions usuelles des types de représentation graphiques),\nStatistics (stat_…): pour spécifier les éventuelles transformations des données pour la représentation en vue,\nScales (scale_…): permet de contrôler le lien entre les données et les aesthetics (modification de couleurs, gestion des axes, etc.)\n\n\n\nGeometrics et aesthetics\nLe tableau ci-dessous décrit quelques types de représentation géométrique et les types d’informations requises.\n\nExemples de geom et aesthetics associés\n\n\n\n\n\n\n\n\n#\nGeom\nDescription\nAesthetics\n\n\n\n\n1\ngeom_point()\nNuage de points\nx, y, shape, fill\n\n\n2\ngeom_line()\nLigne (ordonnées selon x)\nx, y, linetype\n\n\n3\ngeom_abline()\nDroite\nslope, intercept\n\n\n4\ngeom_path()\nLigne (ordre original)\nx, y, lignetype\n\n\n5\ngeom_text()\nTexte\nx, y, label, hjust, vjust\n\n\n6\ngeom_rect()\nRectangle\nxmin, xmax, ymin, ymax, fill, linetype\n\n\n7\ngeom_polygon()\nPolygone\nx, y, fill, linetype\n\n\n8\ngeom_segment()\nSegment\nx, y, fill, linetype\n\n\n9\ngeom_bar()\nDiagramme en barres\nx, fill, linetype, weight\n\n\n10\ngeom_histogram()\nHistogramme\nx, fill, linetype, weight\n\n\n11\ngeom_boxplot()\nBoîte à moustaches\nx, y, fill, weight\n\n\n12\ngeom_density()\nDensité\nx, y, fill, linetype\n\n\n13\ngeom_contour()\nLine de contour\nx, y, fill, linetype\n\n\n14\ngeom_smooth()\nLissage\nx, y, fill, linetype\n\n\n\n\n\nStatistics\nLes données brutes provenant des tableaux de données ou data frames nécessitent souvent de transformations préalables avant la visualisation. Ainsi, les statistiques permettent de gérer les transformations ou calculs intermédiaires dans le processus de visualisation. Les fonctions assurant ces transformations intermédiaires sont en géneral renseignés dans l’argument stat des fonctions geom_… Par exemple pour représenter un histogramme (geom_histgram), la valeur par défaut permettant le calculer des principaux indicateurs est stat=“bin”:\n\ncount : nombre de points dans chaque classe,\ndensity : densité pour chaque class,\nncount :similaire à count mais ici la valeur maximale est équivalent 1.\nndensity : similaire à density mais la valeur maximale ici est de 1.\n\nLe tableau ci-dessous présente quelques statistics prise en charge dans ggplot.\n\nExemples de statistics\n\n\n#\nStat\nDescription\nParamètres\n\n\n\n\n1\nstat_identity()\nAucune transformation\n\n\n\n2\nstat_bin()\nComptage\nbineidth, origin\n\n\n3\nstat_density()\nDensité\nadjust, kernel\n\n\n4\nstat_smooth()\nLissage\nmethod, se\n\n\n5\nstat_boxplot()\nBoxplot\ncoef\n\n\n\n\n\nFaceting\nLe faceting permet de faire une représentation graphique selon les modalités d’une ou de plusieurs variable.s qualitative.s. Ainsi, on distingue les variantes facet_wrap() et facet_grid(). facet_wrap() prend en argument un paramètre de la forme vars(variable) ou variable est le nom de la variable de catégorisation des différents graphiques.\n\n\nScales\nLes scales permettent de modifier la manière dont un attribut graphique va être relié aux valeurs d’une variable.\n\n\nThèmes\nLes thèmes permettent de contrôler l’aperçu de touts les éléments du graphique qui ne sont pas reliés aux données: titre, grilles, fonds, etc.\nCertains thèmes prédéfinis existent. C’est le cas de theme_bw(), theme_minimal()\n\n\nQuelques exemples\n\n# Import de la base de données DEV_AFRICA_2018\nlibrary(readxl)\nDevAfrica2018 &lt;- read_excel(\"data/DEV_AFRICA_2018/afrika_don.xls\")\n\n# Chargement de la librairie ggplot2\nlibrary(ggplot2)\n\nReprésentation graphique (diagramme en barre) du nombre de pays (effectif de pays) par sous-région.\n\nggplot(DevAfrica2018) + \n  geom_bar(aes(x=SUBREG))\n\n\n\n\nReprésentation graphique (boite à moustache) de l’espérance à la naissance par sous-région.\n\nggplot(DevAfrica2018) + geom_boxplot(aes(x=SUBREG, y = ESPVIE))\n\n\n\n\nOn peut personnaliser le graphique avec différents arguments supplémentaires comme fill et color.\n\nggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y = ESPVIE),\n               fill= \"wheat\", color = \"tomato4\")\n\n\n\n\nUn autre argument utile, varwidth, permet de faire varier la largeur des boîtes en fonction des effectifs de la classe (donc, ici, en fonction du nombre de pays par sous-région) :\n\nggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y = ESPVIE),\n               fill= \"wheat\", color = \"tomato4\", varwidth = TRUE)\n\n\n\n\nSi on préfère avoir un graphique en barres horizontales, il suffit de passer la variable comme attribut y plutôt que x.\nPour modifier manuellement les différents éléments, les fonctions ggtitle, xlab et ylab permettent d’ajouter ou de modifier le titre du graphique, ainsi que les étiquettes des axes x et y.\n\nggplot(DevAfrica2018) + geom_bar(aes(y=SUBREG)) + \n  xlab(\"Nombre de pays\") +\n  ylab(\"Sous-région\") +\n  ggtitle(\"Joli graphique\")"
  },
  {
    "objectID": "modules/graphique/ggplot2.html#ressources",
    "href": "modules/graphique/ggplot2.html#ressources",
    "title": "Le package ggplot2",
    "section": "Ressources:",
    "text": "Ressources:\nLa documentation officielle de ggplot2\nThe R Graph Gallery"
  },
  {
    "objectID": "modules/graphique/ggplot2.html#linterface-graphique-du-package-esquisse",
    "href": "modules/graphique/ggplot2.html#linterface-graphique-du-package-esquisse",
    "title": "Le package ggplot2",
    "section": "L’interface graphique du package Esquisse",
    "text": "L’interface graphique du package Esquisse\n\n# Installation du package \ninstall.packages(\"esquisse\")\n\n\n\n\n\n\n\n\n\n\nConstruisez votre graphique ggplot en clic-bouton et glisser-déposer, puis récupérer le code source !"
  },
  {
    "objectID": "modules/graphique/ggplot2.html#exercice",
    "href": "modules/graphique/ggplot2.html#exercice",
    "title": "Le package ggplot2",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez la base de données DEV_AFRICA_2018 sous le nom DevAfrica2018.\n\n\nUn peu d’aide ?\n# Import des métadonnées\n...  &lt;- read.table(file = \"...\", \n                   header = ...,\n                   sep= \"...\",\n                   encoding = \"...\")\n\n\nlibrary(...)\nDevAfrica2018 &lt;- read_excel(\"...\")\n\n\n5. Re-codez la variable « POP » en « Population » en trois catégories :\n\nMoins de 10 millions\n10 – 25 millions\n&gt; 25 millions\n\n\n\nUn peu d’aide ?\n...$... &lt;- cut(...$...,  \n              breaks = c(..., ..., ..., ...), \n              labels = c(\"...s\", \n              \"...\", \n              \"...\"), \n              right = ...)\n\n\n6. Faite une représentation graphique de l’effectif des pays par sous-région.\n\n\nUn peu d’aide ?\nlibrary(...)\n\nggplot(...) + \n   geom_histogram(aes(x = ...), stat = '...')\n\n\n7. Ajoutez les étiquettes (titre du graphique, étiquette axe abscisse, axe des ordonnées) au graphique.\n\n\nUn peu d’aide ?\nggplot(...) + \n  geom_histogram(aes(x=...), stat = '...')+\n  ggtitle(\"...\")+\n  xlab(\"...\") + \n  ylab(\"...\")\n\n\n8. Faite la boite à moustache de l’espérance de vie à la naissance par sous-région.\n\n\nUn peu d’aide ?\nggplot(...) + \n  geom_boxplot(aes(x=..., y=...))\n\n\n9. Ajout des étiquettes (titre du graphique, étiquette axe abscisse, axe des ordonnées) au graphique.\n\n\nUn peu d’aide ?\nggplot(...) + \n  geom_boxplot(aes(x=..., y=...), varwidth = ...)\n\n\nNote : faites les largeurs des boites à moustaches proportionnelles à l’effectif de pays par sous-région\n\n\nUn peu d’aide ?\nGraphique1 &lt;- ggplot(...) + \n  geom_boxplot(aes(x=..., y=...), varwidth = ...) + \n  xlab(\"...\") + \n  ylab(\"...\") + \n  ggtitle(\"...\")\n\n\n# Sauvegarde du graphique\nggsave(\"...\", dpi = 3000)\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/cartographie/map_sf.html",
    "href": "modules/cartographie/map_sf.html",
    "title": "Cartographie avec mapsf",
    "section": "",
    "text": "Cette leçon vise à initier à l’utilisation du package mapsf pour la construction et la mise en page de carte thématique et statistique de différents types :\n\nCarte de symboles proportionnels\nCarte choroplèthe\nCarte de typologie\nCarte de stocks et de ratios\nCarte de stocks et de catégories\n\nLa construction de cartogramme (ou anamorphose) à l’aide du package cartogram est également abordé en fin de leçon."
  },
  {
    "objectID": "modules/cartographie/map_sf.html#introduction",
    "href": "modules/cartographie/map_sf.html#introduction",
    "title": "Cartographie avec mapsf",
    "section": "",
    "text": "Cette leçon vise à initier à l’utilisation du package mapsf pour la construction et la mise en page de carte thématique et statistique de différents types :\n\nCarte de symboles proportionnels\nCarte choroplèthe\nCarte de typologie\nCarte de stocks et de ratios\nCarte de stocks et de catégories\n\nLa construction de cartogramme (ou anamorphose) à l’aide du package cartogram est également abordé en fin de leçon."
  },
  {
    "objectID": "modules/cartographie/map_sf.html#manuel",
    "href": "modules/cartographie/map_sf.html#manuel",
    "title": "Cartographie avec mapsf",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nCe support de ce cours est très largement inspiré du manuel “https://rcarto.github.io/cartographie_avec_r/”, plus complet et initialement conçu pour accompagner le cours ‘Cartographie avec R’ du Master 2 Géomatique, géodécisionnel, géomarketing et multimédia (G2M) de l’Université Paris 8 Vincennes - Saint-Denis (France). Ce manuel, qui présente en détail le fonctionnement et l’utilisation du package mapsf, se complète avec le manuel “Géomatique avec R”, qui présente la manipulation de données géographiques avec R."
  },
  {
    "objectID": "modules/cartographie/map_sf.html#exercice",
    "href": "modules/cartographie/map_sf.html#exercice",
    "title": "Cartographie avec mapsf",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\nFond de carte Afrique (GADM 2020)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez les fichiers suivants en utilisant les fonctions adéquates :\n\ndata/DEV_AFRIA_2018/afrika_don.csv\n\ndata/GADM_AFRICA_2020/afrika_map.shp\n\n\n\n\nUn peu d’aide ?\n# Pour importer le fichier csv (afrika_don.csv)\nread.csv()\nread.csv2()\n\n# Pour importer le fichier ESRI Shapefile (afrika_map.shp)\nlibrary(sf)\nst_read()\n\n\n5. Faîte une jointure entre le fond de carte des pays et le tableau de données statistiques\n\n\nUn peu d’aide ?\n# Jointure en R-base\nmerge() \n\n# Ou \njointure avec le package dplyr\nleft_join()\n\n\n6. Construisez une carte thématique représentant la variable POP (nombre d’habitants)\n\n\nUn peu d’aide ?\n# Créer une carte en symboles proportionnels\nmf_map()\n# OU\nmf_prop()\n\n\n7. Construisez une thématique représentant la variable INTERN (part des utilisateurs d’internet dans la population totale)\n\n\nUn peu d’aide ?\n# Créer une carte choroplèthe\nmf_map()\n# OU\nmf_choro()\n\n\n8. Exportez ces deux cartes en format svg et png, à l’aide d’une fonction du package mapsf\n\n\nUn peu d’aide ?\nmf_export()\ndev.off()\n\n\n9. Construisez une carte thématique représentant la variable POP ET la variable INTERN\n\n\nUn peu d’aide ?\n# Créer une carte de stocks et de ratios\nmf_map()\n# OU\nmf_prop_choro()\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/geomatique.html",
    "href": "modules/geomatique.html",
    "title": "Géomatique",
    "section": "",
    "text": "Géomatique avec R - vecteur\n\n\nLe package sf pour manipuler les données géographiques vectorielles\n\n\n\n\n\n\n27 juil. 2023\n\n\nTimothée Giraud, Hugues pecout\n\n\n\n\n\n\n\n\nGéomatique avec R - raster\n\n\nLe package terra pour manipuler les données géographiques RASTER\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues pecout, Timothée Giraud\n\n\n\n\n\n\n\n\nOpenStreetMap & R\n\n\nUtilisation du fond de carte, Géocodage, extraction de données et calcul d’itinéraire\n\n\n\n\n\n\n26 juil. 2023\n\n\nTimothée Giraud, Hugues pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/import.html",
    "href": "modules/import.html",
    "title": "Données",
    "section": "",
    "text": "Import et export de données\n\n\nLes différents types et formats de données pris en charge par R\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues pecout, Justin Dansou\n\n\n\n\n\n\n\n\nIntroduction au WebScraping\n\n\nWORK IN PROGRESS - Avril 2024\n\n\n\n\n\n\n26 juil. 2023\n\n\nAlexandre Cebeillac, Léa Christophe, Robin Cura, Hugues Pecout, Sébastien Rey-Coyrehourcq\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "Données",
    "section": "",
    "text": "Note\n\n\n\nSeules les données mobilisées dans le cadre de l’école thématique Méthodes et outils de sciences territoriales organisée par la FR CIST (Bénin, mars 2023) sont présentées et mises à disposition sur cette page."
  },
  {
    "objectID": "data.html#i.-un-cepii-data",
    "href": "data.html#i.-un-cepii-data",
    "title": "Données",
    "section": "I. UN & CEPII data",
    "text": "I. UN & CEPII data\nIndicateurs nationaux produits par les Nations-Unis (Human Development Report 2020) et le centre français d’étude et de recherche en économie internationale, couvrant la majorité des pays d’Afrique (2020).\n\n Télécharger les données\n\n\n\nCe tableau de données comporte 26 variables décrivant 49 pays.\n\nDictionnaire des variables :\n\n\n\n\n\n\n\n\n\n\n\nAffichage de données :"
  },
  {
    "objectID": "data.html#ii.-gadm-data",
    "href": "data.html#ii.-gadm-data",
    "title": "Données",
    "section": "II. GADM data",
    "text": "II. GADM data\nCouche géographique des frontières nationales des pays d’Afrique issues de la base de données GAMD (2023). Cette couche géographique comporte peu d’attributs : code iso3, nom, sous-région d’appartenance.\n\n Télécharger les données\n\n\n\n\nAttributs de la couche géographique :\n\n\n\n\n\n\n\n\n\nAffichage de géométrie :"
  },
  {
    "objectID": "data.html#iii.-africapolis",
    "href": "data.html#iii.-africapolis",
    "title": "Données",
    "section": "III. Africapolis",
    "text": "III. Africapolis\nExtraction (Ghana, Bénin et Togo) de la base de données géographique AFRICAPOLIS (2023), sur l’emprise des agglomérations urbaines en Afrique.\n\n Télécharger les données\n\n\n\n\nAttributs de la couche géographique :\n\n\n\n\n\n\n\n\n\n\n\nAffichage de la couche géographique :"
  },
  {
    "objectID": "data.html#iii.-elevation-bénin",
    "href": "data.html#iii.-elevation-bénin",
    "title": "Données",
    "section": "III. Elevation Bénin",
    "text": "III. Elevation Bénin\nDonnées numériques d’élévation (raster en format TIF) pour le Bénin provenant de la base de données SRTM 90m Digital Elevation du CIAT. Database v4.1. Les données SRTM originales de l’USGS/NASA ont été fournies dans des cellules d’environ 90m x 90m.\n\n Télécharger les données\n\n\n\n\nAffichage du raster :\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaractèristiques du Raster :\n\n\nclass       : SpatRaster \ndimensions  : 742, 369, 1  (nrow, ncol, nlyr)\nresolution  : 0.008339098, 0.008333169  (x, y)\nextent      : 0.774574, 3.851701, 6.23514, 12.41835  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : elevation.tif \nname        : elevation"
  },
  {
    "objectID": "modules/statistique/CAH.html",
    "href": "modules/statistique/CAH.html",
    "title": "Classification Ascendante Hiérarchique",
    "section": "",
    "text": "La Classification Ascendante Hiérarchique (CAH) est l’une des techniques statistiques les plus utilisées pour segmenter une population en différentes classes ou sous-groupes. Son objectif est de regrouper les individus similaires tout en maintenant une grande dissimilarité entre ces classes.\nLe principe de la CAH se déroule en trois étapes :\n\nCalcul d’une matrice de distances qui mesure la distance entre chaque paire d’individus. Lorsque deux observations sont identiques, leur distance est nulle. Plus les observations sont différentes, plus la distance est grande.\nRegroupement hiérarchique des individus par itération. Cette classification est ascendante car elle part des observations individuelles. Elle est hiérarchique car elle engendre des classes ou groupes de plus en plus larges (incluant des sous-groupes en leur sein) en fonction des distances calculée entre les individus.\nDécoupage du dendrogramme (ou arbre de classification) à une certaine hauteur pour obtenir la partition souhaitée.\n\n\n\n\n\nPour ce cours nous utiliserons les données DEV_AFRICA_2018.\n\ndata &lt;- read.csv2(file = \"data/DEV_AFRICA_2018/afrika_don.csv\")\n\nPour réaliser une CAH, il est nécessaire de préparer le tableau de données. Commencez par séléctionner uniquement les variables qui vous souhaitez utiliser.\n\n# Liste des variable à supprimer\nvar_to_del &lt;- c(\"iso3\", \"name\", \"nom\", \"SUBREG\")\n\n# Supression des variables\ndata_clean &lt;- data[,!names(data) %in% var_to_del]\n\nAfin de pouvoir manipuler correctement des données qualitatives, convertissez-les en facteur.\n\nliste_var_quali &lt;-  c(\"LOCKED\", \"COLFRA\", \"COLGBR\", \"LANGFR\", \"LANGEN\")\n\n# Transformation des variables qualitatives en `factor`\ndata_clean[,liste_var_quali] &lt;- data.frame(lapply(data_clean[,liste_var_quali], factor))\n\nIl est indispensable de bien nommer les lignes du tableau afin d’identifier facilement les individus.\n\n# Utilisation du code ISO des pays en nom de lignes\nrow.names(data_clean) &lt;- data[,\"iso3\"] \n\nTableau de données préparé pour la CAH :\n\n\n\n\n\n\n\nPOP\nPIB\nIDH\nADOFEC\nCO2HAB\nEMPAGR\nEMPSER\nINTERN\nESPVIE\nAGEMED\nTELMOB\nMORINF\nTXMIGR\nDVIEUX\nTUBERC\nURBANI\nDJEUNE\nLOCKED\nCOLFRA\nCOLGBR\nLANGFR\nLANGEN\n\n\n\n\nAGO\n31.317543\n6793.7085\n0.5815\n152.635250\n1.1209815\n50.4490\n41.3865\n14.33910\n60.9660\n16.677\n43.1305\n51.58504\n0.211\n4.3225\n355\n65.85\n91.4625\n0\n0\n0\n0\n0\n\n\nBDI\n11.352978\n756.5941\n0.4320\n56.227500\n0.0466776\n92.0170\n6.4980\n2.66075\n61.4135\n17.320\n56.5347\n40.99260\n0.181\n4.3610\n111\n13.20\n86.9555\n1\n0\n0\n1\n0\n\n\nBEN\n11.643093\n3224.0433\n0.5430\n87.379625\n0.6224791\n38.9125\n42.1465\n20.00000\n61.6200\n18.781\n82.3843\n60.53574\n-0.176\n5.9895\n56\n47.60\n77.7865\n0\n1\n0\n1\n0\n\n\nBFA\n20.036424\n2160.5895\n0.4475\n105.713875\n0.1973980\n25.5640\n40.8700\n16.00000\n61.3770\n17.551\n97.9123\n49.00709\n-1.282\n4.5605\n48\n29.70\n84.9065\n1\n1\n0\n1\n0\n\n\nBWA\n2.278885\n17700.3152\n0.7325\n46.322125\n2.9573642\n20.8570\n61.0040\n47.00000\n69.4325\n24.044\n150.0060\n29.98541\n1.341\n6.9540\n275\n69.80\n54.9450\n1\n0\n1\n0\n1\n\n\nCAF\n4.705777\n938.9888\n0.3960\n130.247875\n0.0650827\n77.4450\n17.1505\n4.33925\n53.0425\n17.611\n27.6743\n84.46370\n-8.581\n5.3140\n540\n41.60\n83.1095\n1\n1\n0\n1\n0\n\n\nCIV\n25.392890\n5133.5905\n0.5360\n118.475250\n0.3346972\n40.4840\n46.5020\n46.82370\n57.6010\n18.854\n134.8580\n59.40349\n-0.323\n5.1820\n142\n51.00\n75.6240\n0\n1\n0\n1\n0\n\n\nCMR\n25.546324\n3628.1177\n0.5615\n107.694875\n0.3226965\n43.7520\n41.3510\n23.20300\n59.1055\n18.688\n69.0854\n50.55533\n-0.193\n4.9770\n186\n56.70\n77.5825\n0\n1\n0\n1\n1\n\n\nCOD\n85.429330\n1091.9213\n0.4790\n124.860500\n0.0242292\n65.6135\n24.6615\n8.61990\n60.5240\n16.988\n43.3822\n68.18008\n0.288\n5.9285\n321\n44.75\n90.5395\n0\n0\n0\n1\n0\n\n\nCOG\n5.312434\n3356.2418\n0.5735\n112.993625\n0.6161096\n34.3665\n43.7460\n8.65000\n64.4300\n19.204\n95.3405\n36.18735\n-0.771\n4.8545\n375\n67.15\n74.8465\n0\n1\n0\n1\n0\n\n\nDJI\n0.966240\n5366.7107\n0.5210\n19.199875\n0.6717953\n33.5180\n53.5140\n55.68140\n66.8460\n26.570\n41.1959\n49.80543\n0.947\n6.9175\n260\n77.85\n44.5025\n0\n1\n0\n1\n0\n\n\nDZA\n42.640735\n11414.5995\n0.7470\n10.256625\n3.6876905\n9.9395\n59.2890\n59.57970\n76.7865\n28.521\n121.9320\n20.14982\n-0.239\n10.2195\n69\n72.90\n48.0295\n0\n1\n0\n1\n0\n\n\nEGY\n99.405839\n11564.7950\n0.7040\n54.061500\n2.4264069\n24.0700\n48.5100\n46.92430\n71.9075\n24.606\n95.2866\n18.10248\n-0.391\n8.6215\n12\n42.70\n55.5010\n0\n0\n1\n0\n0\n\n\nERI\n3.474957\nNA\n0.4575\n53.523500\n0.2143515\n61.4155\n30.1295\n1.30891\n66.1305\n19.209\n20.3640\n31.34800\n-11.571\n8.3650\n89\n40.40\n77.5595\n0\n0\n1\n0\n1\n\n\nETH\n110.651568\n2161.6109\n0.4815\n68.133375\n0.1367414\n66.4175\n23.4770\n18.61810\n66.4200\n19.466\n36.2007\n39.14908\n0.278\n6.2735\n151\n21.00\n72.5195\n1\n0\n0\n0\n1\n\n\nGAB\n2.145926\n14806.5905\n0.7000\n97.469375\n2.5283647\n33.0875\n56.1695\n62.00000\n66.3285\n22.511\n138.2810\n32.69746\n1.562\n5.9895\n525\n89.55\n62.5225\n0\n1\n0\n1\n0\n\n\nGHA\n30.092483\n5303.5336\n0.6085\n67.256625\n0.6147189\n29.8490\n48.7120\n39.00000\n63.9250\n21.507\n137.5170\n34.91044\n-0.339\n5.1870\n148\n56.40\n63.0600\n0\n0\n1\n0\n1\n\n\nGIN\n12.592769\n2531.2341\n0.4750\n136.616375\n0.2561000\n62.0070\n31.8645\n18.00000\n61.3925\n18.020\n96.1150\n64.93173\n-0.326\n5.4930\n176\n36.30\n81.7180\n0\n1\n0\n1\n0\n\n\nGMB\n2.313894\n2175.5690\n0.4915\n79.773500\n0.2678091\n27.4370\n56.9305\n19.83650\n61.8925\n17.844\n139.5290\n39.03308\n-1.371\n4.8385\n174\n61.60\n83.0380\n0\n0\n1\n0\n1\n\n\nGNB\n1.897611\n1969.2724\n0.4760\n105.195125\n0.1811767\n68.3180\n24.6825\n3.93051\n58.1615\n18.833\n78.9889\n54.01618\n-0.755\n5.1780\n361\n43.60\n76.9380\n0\n0\n0\n0\n0\n\n\nGNQ\n1.332474\n19458.9245\n0.5870\n157.016250\n4.3449264\n42.2215\n38.3485\n26.24000\n58.5710\n22.335\n45.1669\n62.62024\n12.443\n4.0325\n201\n72.35\n61.1900\n0\n0\n0\n1\n0\n\n\nKEN\n51.983269\n4266.8368\n0.6000\n76.462375\n0.3597057\n54.7625\n37.9840\n17.82710\n66.5210\n20.119\n96.3202\n30.62253\n-0.197\n4.0970\n292\n27.25\n67.9330\n0\n0\n1\n0\n1\n\n\nLBR\n4.878175\n1462.4118\n0.4800\n136.347000\n0.3234092\n43.3515\n46.3395\n7.98448\n63.9150\n19.411\n56.5690\n53.48219\n-1.049\n5.8600\n308\n51.40\n73.3800\n0\n1\n0\n0\n1\n\n\nLBY\n6.728009\n15096.0769\n0.7225\n5.813500\n8.0879274\n18.6690\n58.9090\n21.75890\n72.8170\n28.817\n91.4793\n10.24269\n-0.301\n6.5675\n40\n80.25\n41.8425\n0\n0\n0\n0\n0\n\n\nLSO\n2.116797\n2758.1290\n0.5245\n92.261750\n1.2613313\n8.6585\n49.0890\n29.00000\n54.0175\n24.010\n113.8310\n65.66614\n-4.783\n7.8615\n611\n28.40\n52.1515\n1\n0\n1\n0\n1\n\n\nMAR\n36.250428\n7476.1792\n0.6830\n31.357000\n1.8404515\n34.9720\n43.3205\n64.80390\n76.5665\n29.538\n124.1720\n19.22586\n-1.437\n10.8840\n99\n62.75\n41.1950\n0\n1\n0\n1\n0\n\n\nMDG\n26.615810\n1629.6623\n0.5275\n110.895250\n0.1630207\n64.4480\n26.6110\n9.80000\n66.8605\n19.568\n40.5703\n38.18323\n-0.058\n5.3400\n233\n37.55\n71.7550\n0\n1\n0\n1\n0\n\n\nMLI\n19.367889\n2305.2361\n0.4325\n170.349250\n0.1866153\n62.7985\n29.5865\n13.00000\n59.1015\n16.347\n115.0850\n61.96196\n-2.123\n4.9950\n53\n42.75\n94.7075\n1\n1\n0\n1\n0\n\n\nMOZ\n29.931026\n1284.9965\n0.4540\n149.940875\n0.2809194\n70.4610\n21.1085\n10.00000\n60.5065\n17.620\n47.7158\n54.01829\n-0.172\n5.4845\n551\n36.25\n84.6455\n0\n0\n0\n0\n0\n\n\nMRT\n4.464505\n5119.7260\n0.5440\n72.045000\n0.6044313\n51.6650\n35.5065\n20.80100\n64.8170\n20.114\n103.7060\n51.54291\n1.150\n5.5370\n93\n54.10\n70.3175\n0\n1\n0\n0\n0\n\n\nMWI\n18.385982\n1051.1249\n0.4805\n134.117500\n0.0761111\n43.8895\n42.2905\n13.78220\n64.0290\n18.080\n39.0058\n35.31582\n-0.895\n4.9260\n181\n17.05\n81.3985\n1\n0\n1\n0\n1\n\n\nNAM\n2.471412\n9784.5769\n0.6455\n65.546375\n1.7450469\n22.3620\n61.3915\n51.00000\n63.5415\n21.832\n112.7020\n28.96725\n-1.979\n6.0905\n524\n50.50\n62.0615\n0\n0\n0\n0\n1\n\n\nNER\n22.876775\n1207.7762\n0.3925\n188.313625\n0.1033337\n75.1875\n17.6130\n5.25049\n62.2220\n15.151\n40.6385\n47.98493\n0.181\n5.4660\n87\n16.45\n105.1010\n1\n1\n0\n1\n0\n\n\nNGA\n198.419144\n5145.2871\n0.5365\n108.545000\n0.6498757\n35.3355\n52.4380\n42.00000\n54.5110\n18.064\n88.1842\n75.67151\n-0.310\n5.1335\n219\n50.75\n81.8610\n0\n0\n1\n0\n1\n\n\nRWA\n12.464453\n2157.3935\n0.5415\n39.292875\n0.0912374\n62.8260\n28.3825\n21.76760\n68.8600\n20.039\n78.8541\n27.02078\n-0.740\n5.2205\n59\n17.25\n69.7705\n1\n0\n0\n1\n1\n\n\nSDN\n42.307384\n4059.5331\n0.5080\n65.994875\n0.5034768\n40.0230\n43.4995\n30.87030\n65.2025\n19.659\n72.0079\n42.14203\n-1.208\n6.4285\n71\n34.75\n71.9420\n0\n0\n1\n0\n0\n\n\nSSD\n11.019019\nNA\n0.4310\n64.044250\n0.1704093\n57.2935\n28.9535\n7.97743\n57.7270\n19.040\n33.4630\n63.69163\n-15.902\n6.1685\n146\n19.75\n75.9210\n1\n0\n1\n0\n0\n\n\nSEN\n16.075343\n3354.8272\n0.5140\n74.084500\n0.7386566\n30.3755\n56.1710\n46.00000\n67.8025\n18.514\n104.4510\n31.82667\n-1.277\n5.7315\n118\n47.45\n79.5920\n0\n1\n0\n1\n0\n\n\nSLE\n7.731678\n1690.8316\n0.4495\n114.548500\n0.1409384\n55.2475\n38.3540\n9.00000\n54.5045\n19.402\n88.4699\n78.47719\n-0.554\n5.2665\n298\n42.30\n72.8270\n0\n0\n1\n0\n1\n\n\nSOM\n15.225566\nNA\nNA\n101.371375\n0.0465698\n83.1580\n13.2430\n2.00405\n57.2340\n16.683\n48.7964\n76.57223\n-2.694\n5.6895\n262\n45.30\n91.7805\n0\n0\n1\n0\n1\n\n\nSWZ\n1.142203\n8647.0887\n0.6080\n77.084375\n1.0549327\n12.5695\n63.5180\n47.00000\n59.7955\n20.729\n93.5273\n43.02284\n-7.378\n6.9180\n329\n23.90\n65.4575\n1\n0\n1\n0\n1\n\n\nTCD\n15.712305\n1577.9727\n0.3975\n163.231250\n0.0655329\n76.6500\n21.2380\n6.50000\n54.1085\n16.554\n45.1237\n71.42419\n0.131\n4.9190\n142\n23.20\n92.9445\n1\n1\n0\n1\n0\n\n\nTGO\n7.985727\n1574.2385\n0.5125\n89.421750\n0.4332564\n37.9915\n49.1365\n12.36020\n60.9000\n19.350\n77.8861\n47.36163\n-0.256\n5.1440\n36\n41.95\n73.5720\n0\n1\n0\n1\n0\n\n\nTUN\n11.629962\n10759.6827\n0.7390\n7.809625\n2.7303114\n13.1830\n54.1790\n64.19080\n76.6025\n32.835\n127.7070\n14.60544\n-0.348\n12.5545\n35\n69.10\n35.9300\n0\n1\n0\n1\n0\n\n\nTZA\n57.159453\n2625.1980\n0.5265\n118.981875\n0.2219524\n65.5295\n27.7440\n25.00000\n65.2375\n17.992\n77.2414\n37.60541\n-0.721\n4.8875\n253\n34.15\n82.3155\n0\n0\n1\n0\n1\n\n\nUGA\n43.499310\n2151.6788\n0.5410\n120.467500\n0.1350604\n72.7705\n20.6300\n23.70650\n63.1715\n16.733\n57.2726\n33.80762\n4.018\n3.8020\n200\n24.10\n91.0075\n1\n0\n1\n0\n1\n\n\nZAF\n58.175393\n12556.2802\n0.7080\n68.416500\n8.0903570\n5.1275\n71.8460\n56.16740\n63.9935\n27.621\n153.2500\n28.49095\n2.536\n8.1795\n520\n66.65\n44.2375\n0\n0\n1\n0\n1\n\n\nZMB\n17.606374\n3500.5119\n0.5830\n122.185000\n0.3012960\n49.0500\n40.0920\n14.30000\n63.7000\n17.592\n89.1570\n40.44662\n-0.467\n3.9620\n346\n43.80\n84.0360\n1\n0\n1\n0\n1\n\n\nZWE\n14.542143\n2982.9890\n0.5700\n88.973500\n0.8492879\n66.4255\n26.8395\n27.05550\n61.3425\n18.668\n89.4049\n33.90040\n-8.150\n5.4055\n210\n32.20\n77.2085\n1\n0\n1\n0\n1"
  },
  {
    "objectID": "modules/statistique/CAH.html#introduction",
    "href": "modules/statistique/CAH.html#introduction",
    "title": "Classification Ascendante Hiérarchique",
    "section": "",
    "text": "La Classification Ascendante Hiérarchique (CAH) est l’une des techniques statistiques les plus utilisées pour segmenter une population en différentes classes ou sous-groupes. Son objectif est de regrouper les individus similaires tout en maintenant une grande dissimilarité entre ces classes.\nLe principe de la CAH se déroule en trois étapes :\n\nCalcul d’une matrice de distances qui mesure la distance entre chaque paire d’individus. Lorsque deux observations sont identiques, leur distance est nulle. Plus les observations sont différentes, plus la distance est grande.\nRegroupement hiérarchique des individus par itération. Cette classification est ascendante car elle part des observations individuelles. Elle est hiérarchique car elle engendre des classes ou groupes de plus en plus larges (incluant des sous-groupes en leur sein) en fonction des distances calculée entre les individus.\nDécoupage du dendrogramme (ou arbre de classification) à une certaine hauteur pour obtenir la partition souhaitée.\n\n\n\n\n\nPour ce cours nous utiliserons les données DEV_AFRICA_2018.\n\ndata &lt;- read.csv2(file = \"data/DEV_AFRICA_2018/afrika_don.csv\")\n\nPour réaliser une CAH, il est nécessaire de préparer le tableau de données. Commencez par séléctionner uniquement les variables qui vous souhaitez utiliser.\n\n# Liste des variable à supprimer\nvar_to_del &lt;- c(\"iso3\", \"name\", \"nom\", \"SUBREG\")\n\n# Supression des variables\ndata_clean &lt;- data[,!names(data) %in% var_to_del]\n\nAfin de pouvoir manipuler correctement des données qualitatives, convertissez-les en facteur.\n\nliste_var_quali &lt;-  c(\"LOCKED\", \"COLFRA\", \"COLGBR\", \"LANGFR\", \"LANGEN\")\n\n# Transformation des variables qualitatives en `factor`\ndata_clean[,liste_var_quali] &lt;- data.frame(lapply(data_clean[,liste_var_quali], factor))\n\nIl est indispensable de bien nommer les lignes du tableau afin d’identifier facilement les individus.\n\n# Utilisation du code ISO des pays en nom de lignes\nrow.names(data_clean) &lt;- data[,\"iso3\"] \n\nTableau de données préparé pour la CAH :\n\n\n\n\n\n\n\nPOP\nPIB\nIDH\nADOFEC\nCO2HAB\nEMPAGR\nEMPSER\nINTERN\nESPVIE\nAGEMED\nTELMOB\nMORINF\nTXMIGR\nDVIEUX\nTUBERC\nURBANI\nDJEUNE\nLOCKED\nCOLFRA\nCOLGBR\nLANGFR\nLANGEN\n\n\n\n\nAGO\n31.317543\n6793.7085\n0.5815\n152.635250\n1.1209815\n50.4490\n41.3865\n14.33910\n60.9660\n16.677\n43.1305\n51.58504\n0.211\n4.3225\n355\n65.85\n91.4625\n0\n0\n0\n0\n0\n\n\nBDI\n11.352978\n756.5941\n0.4320\n56.227500\n0.0466776\n92.0170\n6.4980\n2.66075\n61.4135\n17.320\n56.5347\n40.99260\n0.181\n4.3610\n111\n13.20\n86.9555\n1\n0\n0\n1\n0\n\n\nBEN\n11.643093\n3224.0433\n0.5430\n87.379625\n0.6224791\n38.9125\n42.1465\n20.00000\n61.6200\n18.781\n82.3843\n60.53574\n-0.176\n5.9895\n56\n47.60\n77.7865\n0\n1\n0\n1\n0\n\n\nBFA\n20.036424\n2160.5895\n0.4475\n105.713875\n0.1973980\n25.5640\n40.8700\n16.00000\n61.3770\n17.551\n97.9123\n49.00709\n-1.282\n4.5605\n48\n29.70\n84.9065\n1\n1\n0\n1\n0\n\n\nBWA\n2.278885\n17700.3152\n0.7325\n46.322125\n2.9573642\n20.8570\n61.0040\n47.00000\n69.4325\n24.044\n150.0060\n29.98541\n1.341\n6.9540\n275\n69.80\n54.9450\n1\n0\n1\n0\n1\n\n\nCAF\n4.705777\n938.9888\n0.3960\n130.247875\n0.0650827\n77.4450\n17.1505\n4.33925\n53.0425\n17.611\n27.6743\n84.46370\n-8.581\n5.3140\n540\n41.60\n83.1095\n1\n1\n0\n1\n0\n\n\nCIV\n25.392890\n5133.5905\n0.5360\n118.475250\n0.3346972\n40.4840\n46.5020\n46.82370\n57.6010\n18.854\n134.8580\n59.40349\n-0.323\n5.1820\n142\n51.00\n75.6240\n0\n1\n0\n1\n0\n\n\nCMR\n25.546324\n3628.1177\n0.5615\n107.694875\n0.3226965\n43.7520\n41.3510\n23.20300\n59.1055\n18.688\n69.0854\n50.55533\n-0.193\n4.9770\n186\n56.70\n77.5825\n0\n1\n0\n1\n1\n\n\nCOD\n85.429330\n1091.9213\n0.4790\n124.860500\n0.0242292\n65.6135\n24.6615\n8.61990\n60.5240\n16.988\n43.3822\n68.18008\n0.288\n5.9285\n321\n44.75\n90.5395\n0\n0\n0\n1\n0\n\n\nCOG\n5.312434\n3356.2418\n0.5735\n112.993625\n0.6161096\n34.3665\n43.7460\n8.65000\n64.4300\n19.204\n95.3405\n36.18735\n-0.771\n4.8545\n375\n67.15\n74.8465\n0\n1\n0\n1\n0\n\n\nDJI\n0.966240\n5366.7107\n0.5210\n19.199875\n0.6717953\n33.5180\n53.5140\n55.68140\n66.8460\n26.570\n41.1959\n49.80543\n0.947\n6.9175\n260\n77.85\n44.5025\n0\n1\n0\n1\n0\n\n\nDZA\n42.640735\n11414.5995\n0.7470\n10.256625\n3.6876905\n9.9395\n59.2890\n59.57970\n76.7865\n28.521\n121.9320\n20.14982\n-0.239\n10.2195\n69\n72.90\n48.0295\n0\n1\n0\n1\n0\n\n\nEGY\n99.405839\n11564.7950\n0.7040\n54.061500\n2.4264069\n24.0700\n48.5100\n46.92430\n71.9075\n24.606\n95.2866\n18.10248\n-0.391\n8.6215\n12\n42.70\n55.5010\n0\n0\n1\n0\n0\n\n\nERI\n3.474957\nNA\n0.4575\n53.523500\n0.2143515\n61.4155\n30.1295\n1.30891\n66.1305\n19.209\n20.3640\n31.34800\n-11.571\n8.3650\n89\n40.40\n77.5595\n0\n0\n1\n0\n1\n\n\nETH\n110.651568\n2161.6109\n0.4815\n68.133375\n0.1367414\n66.4175\n23.4770\n18.61810\n66.4200\n19.466\n36.2007\n39.14908\n0.278\n6.2735\n151\n21.00\n72.5195\n1\n0\n0\n0\n1\n\n\nGAB\n2.145926\n14806.5905\n0.7000\n97.469375\n2.5283647\n33.0875\n56.1695\n62.00000\n66.3285\n22.511\n138.2810\n32.69746\n1.562\n5.9895\n525\n89.55\n62.5225\n0\n1\n0\n1\n0\n\n\nGHA\n30.092483\n5303.5336\n0.6085\n67.256625\n0.6147189\n29.8490\n48.7120\n39.00000\n63.9250\n21.507\n137.5170\n34.91044\n-0.339\n5.1870\n148\n56.40\n63.0600\n0\n0\n1\n0\n1\n\n\nGIN\n12.592769\n2531.2341\n0.4750\n136.616375\n0.2561000\n62.0070\n31.8645\n18.00000\n61.3925\n18.020\n96.1150\n64.93173\n-0.326\n5.4930\n176\n36.30\n81.7180\n0\n1\n0\n1\n0\n\n\nGMB\n2.313894\n2175.5690\n0.4915\n79.773500\n0.2678091\n27.4370\n56.9305\n19.83650\n61.8925\n17.844\n139.5290\n39.03308\n-1.371\n4.8385\n174\n61.60\n83.0380\n0\n0\n1\n0\n1\n\n\nGNB\n1.897611\n1969.2724\n0.4760\n105.195125\n0.1811767\n68.3180\n24.6825\n3.93051\n58.1615\n18.833\n78.9889\n54.01618\n-0.755\n5.1780\n361\n43.60\n76.9380\n0\n0\n0\n0\n0\n\n\nGNQ\n1.332474\n19458.9245\n0.5870\n157.016250\n4.3449264\n42.2215\n38.3485\n26.24000\n58.5710\n22.335\n45.1669\n62.62024\n12.443\n4.0325\n201\n72.35\n61.1900\n0\n0\n0\n1\n0\n\n\nKEN\n51.983269\n4266.8368\n0.6000\n76.462375\n0.3597057\n54.7625\n37.9840\n17.82710\n66.5210\n20.119\n96.3202\n30.62253\n-0.197\n4.0970\n292\n27.25\n67.9330\n0\n0\n1\n0\n1\n\n\nLBR\n4.878175\n1462.4118\n0.4800\n136.347000\n0.3234092\n43.3515\n46.3395\n7.98448\n63.9150\n19.411\n56.5690\n53.48219\n-1.049\n5.8600\n308\n51.40\n73.3800\n0\n1\n0\n0\n1\n\n\nLBY\n6.728009\n15096.0769\n0.7225\n5.813500\n8.0879274\n18.6690\n58.9090\n21.75890\n72.8170\n28.817\n91.4793\n10.24269\n-0.301\n6.5675\n40\n80.25\n41.8425\n0\n0\n0\n0\n0\n\n\nLSO\n2.116797\n2758.1290\n0.5245\n92.261750\n1.2613313\n8.6585\n49.0890\n29.00000\n54.0175\n24.010\n113.8310\n65.66614\n-4.783\n7.8615\n611\n28.40\n52.1515\n1\n0\n1\n0\n1\n\n\nMAR\n36.250428\n7476.1792\n0.6830\n31.357000\n1.8404515\n34.9720\n43.3205\n64.80390\n76.5665\n29.538\n124.1720\n19.22586\n-1.437\n10.8840\n99\n62.75\n41.1950\n0\n1\n0\n1\n0\n\n\nMDG\n26.615810\n1629.6623\n0.5275\n110.895250\n0.1630207\n64.4480\n26.6110\n9.80000\n66.8605\n19.568\n40.5703\n38.18323\n-0.058\n5.3400\n233\n37.55\n71.7550\n0\n1\n0\n1\n0\n\n\nMLI\n19.367889\n2305.2361\n0.4325\n170.349250\n0.1866153\n62.7985\n29.5865\n13.00000\n59.1015\n16.347\n115.0850\n61.96196\n-2.123\n4.9950\n53\n42.75\n94.7075\n1\n1\n0\n1\n0\n\n\nMOZ\n29.931026\n1284.9965\n0.4540\n149.940875\n0.2809194\n70.4610\n21.1085\n10.00000\n60.5065\n17.620\n47.7158\n54.01829\n-0.172\n5.4845\n551\n36.25\n84.6455\n0\n0\n0\n0\n0\n\n\nMRT\n4.464505\n5119.7260\n0.5440\n72.045000\n0.6044313\n51.6650\n35.5065\n20.80100\n64.8170\n20.114\n103.7060\n51.54291\n1.150\n5.5370\n93\n54.10\n70.3175\n0\n1\n0\n0\n0\n\n\nMWI\n18.385982\n1051.1249\n0.4805\n134.117500\n0.0761111\n43.8895\n42.2905\n13.78220\n64.0290\n18.080\n39.0058\n35.31582\n-0.895\n4.9260\n181\n17.05\n81.3985\n1\n0\n1\n0\n1\n\n\nNAM\n2.471412\n9784.5769\n0.6455\n65.546375\n1.7450469\n22.3620\n61.3915\n51.00000\n63.5415\n21.832\n112.7020\n28.96725\n-1.979\n6.0905\n524\n50.50\n62.0615\n0\n0\n0\n0\n1\n\n\nNER\n22.876775\n1207.7762\n0.3925\n188.313625\n0.1033337\n75.1875\n17.6130\n5.25049\n62.2220\n15.151\n40.6385\n47.98493\n0.181\n5.4660\n87\n16.45\n105.1010\n1\n1\n0\n1\n0\n\n\nNGA\n198.419144\n5145.2871\n0.5365\n108.545000\n0.6498757\n35.3355\n52.4380\n42.00000\n54.5110\n18.064\n88.1842\n75.67151\n-0.310\n5.1335\n219\n50.75\n81.8610\n0\n0\n1\n0\n1\n\n\nRWA\n12.464453\n2157.3935\n0.5415\n39.292875\n0.0912374\n62.8260\n28.3825\n21.76760\n68.8600\n20.039\n78.8541\n27.02078\n-0.740\n5.2205\n59\n17.25\n69.7705\n1\n0\n0\n1\n1\n\n\nSDN\n42.307384\n4059.5331\n0.5080\n65.994875\n0.5034768\n40.0230\n43.4995\n30.87030\n65.2025\n19.659\n72.0079\n42.14203\n-1.208\n6.4285\n71\n34.75\n71.9420\n0\n0\n1\n0\n0\n\n\nSSD\n11.019019\nNA\n0.4310\n64.044250\n0.1704093\n57.2935\n28.9535\n7.97743\n57.7270\n19.040\n33.4630\n63.69163\n-15.902\n6.1685\n146\n19.75\n75.9210\n1\n0\n1\n0\n0\n\n\nSEN\n16.075343\n3354.8272\n0.5140\n74.084500\n0.7386566\n30.3755\n56.1710\n46.00000\n67.8025\n18.514\n104.4510\n31.82667\n-1.277\n5.7315\n118\n47.45\n79.5920\n0\n1\n0\n1\n0\n\n\nSLE\n7.731678\n1690.8316\n0.4495\n114.548500\n0.1409384\n55.2475\n38.3540\n9.00000\n54.5045\n19.402\n88.4699\n78.47719\n-0.554\n5.2665\n298\n42.30\n72.8270\n0\n0\n1\n0\n1\n\n\nSOM\n15.225566\nNA\nNA\n101.371375\n0.0465698\n83.1580\n13.2430\n2.00405\n57.2340\n16.683\n48.7964\n76.57223\n-2.694\n5.6895\n262\n45.30\n91.7805\n0\n0\n1\n0\n1\n\n\nSWZ\n1.142203\n8647.0887\n0.6080\n77.084375\n1.0549327\n12.5695\n63.5180\n47.00000\n59.7955\n20.729\n93.5273\n43.02284\n-7.378\n6.9180\n329\n23.90\n65.4575\n1\n0\n1\n0\n1\n\n\nTCD\n15.712305\n1577.9727\n0.3975\n163.231250\n0.0655329\n76.6500\n21.2380\n6.50000\n54.1085\n16.554\n45.1237\n71.42419\n0.131\n4.9190\n142\n23.20\n92.9445\n1\n1\n0\n1\n0\n\n\nTGO\n7.985727\n1574.2385\n0.5125\n89.421750\n0.4332564\n37.9915\n49.1365\n12.36020\n60.9000\n19.350\n77.8861\n47.36163\n-0.256\n5.1440\n36\n41.95\n73.5720\n0\n1\n0\n1\n0\n\n\nTUN\n11.629962\n10759.6827\n0.7390\n7.809625\n2.7303114\n13.1830\n54.1790\n64.19080\n76.6025\n32.835\n127.7070\n14.60544\n-0.348\n12.5545\n35\n69.10\n35.9300\n0\n1\n0\n1\n0\n\n\nTZA\n57.159453\n2625.1980\n0.5265\n118.981875\n0.2219524\n65.5295\n27.7440\n25.00000\n65.2375\n17.992\n77.2414\n37.60541\n-0.721\n4.8875\n253\n34.15\n82.3155\n0\n0\n1\n0\n1\n\n\nUGA\n43.499310\n2151.6788\n0.5410\n120.467500\n0.1350604\n72.7705\n20.6300\n23.70650\n63.1715\n16.733\n57.2726\n33.80762\n4.018\n3.8020\n200\n24.10\n91.0075\n1\n0\n1\n0\n1\n\n\nZAF\n58.175393\n12556.2802\n0.7080\n68.416500\n8.0903570\n5.1275\n71.8460\n56.16740\n63.9935\n27.621\n153.2500\n28.49095\n2.536\n8.1795\n520\n66.65\n44.2375\n0\n0\n1\n0\n1\n\n\nZMB\n17.606374\n3500.5119\n0.5830\n122.185000\n0.3012960\n49.0500\n40.0920\n14.30000\n63.7000\n17.592\n89.1570\n40.44662\n-0.467\n3.9620\n346\n43.80\n84.0360\n1\n0\n1\n0\n1\n\n\nZWE\n14.542143\n2982.9890\n0.5700\n88.973500\n0.8492879\n66.4255\n26.8395\n27.05550\n61.3425\n18.668\n89.4049\n33.90040\n-8.150\n5.4055\n210\n32.20\n77.2085\n1\n0\n1\n0\n1"
  },
  {
    "objectID": "modules/statistique/CAH.html#matrice-de-distance",
    "href": "modules/statistique/CAH.html#matrice-de-distance",
    "title": "Classification Ascendante Hiérarchique",
    "section": "1. Matrice de distance",
    "text": "1. Matrice de distance\nLa ressemblance des individus est évaluée par la distance mathématique entre chaque observation. Plusieurs distances peuvent être calculées en fonction du type de données utilisées. Voici quelques exemples :\nCalcul d’une matrice de distance pour des variables quantitatives.\nLa fonction dist() permet dans calculer plusieurs distances mathématiques (euclidiennes, Maximum, Manhattan, Canberra…) pour les variables quantitatives\n\n# Sélection des variables quantitatives\nvar_quanti &lt;- data_clean[,c(1:17)] \n\n# Calcul de la matrice de distances (euclidienne)\nmd_eucli &lt;- dist(var_quanti, method = \"euclidean\")\n\nCalcul d’une matrice de distance pour des variables qualitatives.\nPour des variables qualitatives, une matrice de distances du χ² peut-être obtenue par l’intermédiaire d’une Analyse à Correspondance Multiple (ACM) avec la fonction dudi.acm(), puis de la la fonction dist.dudi() du package ade4.\nLa distance utilisée dans les analyses de correspondance multiples (ACM) est une variante de la distance du χ².\n\n# Sélection des variables qualitatives\nvar_quali &lt;- data_clean[,c(18:22)] \n\nlibrary (ade4)\n# Calcul ACM\nacm &lt;- dudi.acm(var_quali, scannf = FALSE, nf = 5)\n\n# Calcul matrice distance du χ²\nmd_chi2 &lt;- dist.dudi(acm)\n\nCalcul d’une matrice de distance pour des variables qualitatives et quantitatives.\nLa distance de Gower peut être utilisée pour un ensemble de variables qualitatives et quantitatives. Pour cela, vous pouvez utilisez la fionction daisy() du package cluster.\n\nlibrary(cluster)\nmd_gower &lt;- daisy(data_clean, metric = \"gower\")"
  },
  {
    "objectID": "modules/statistique/CAH.html#regroupement-hiérarchique",
    "href": "modules/statistique/CAH.html#regroupement-hiérarchique",
    "title": "Classification Ascendante Hiérarchique",
    "section": "2. Regroupement Hiérarchique",
    "text": "2. Regroupement Hiérarchique\nIl faut ensuite choisir une méthode d’agrégation pour construire le dendrogramme. De nombreuses solutions existent (single linkage, average linkage, ward linkage…). Les différentes méthodes de regroupement hiérarchique utilisent des critères différents pour évaluer la distance entre les groupes et peuvent donner des résultats (dendogramme) légèrement différents en termes de structure des clusters formés.\nPar exemple, la méthode complete linkage (liaison complète) est une des techniques couramment utilisées pour réaliser le regroupement hiérarchique lors de la CAH. Cette méthode consiste à calculer la distance entre deux groupes de données en se basant sur les distances maximales entre tous les points des deux groupes. Concrètement, lors du regroupement hiérarchique, la distance entre deux groupes est déterminée en trouvant la distance maximale entre les points de chaque groupe. Ainsi, la distance entre deux groupes est définie par la paire d’observations qui sont les plus éloignées l’une de l’autre parmi toutes les paires possibles d’observations entre les deux groupes. Cette approche est souvent utilisée lorsque l’on souhaite privilégier la formation de clusters compacts et bien séparés les uns des autres, car la distance choisie est la plus grande possible entre les groupes. Elle peut être utile lorsque l’on s’intéresse à des sous-groupes distincts et bien définis dans les données.\nLa fonction R-base pour le calcul d’un dendrogramme à partir d’une matrice de distances est hclust(). La méthode d’aggrégation souhaitée peut être précisé avec l’argument method. Quelques exemple d’application :\n\nVariables quantitativesVariables qualitativesToutes les variables (quantitatives et qualitatives)\n\n\nAggrégation des individus par la méthode de Ward appliquée au carré des distances (“ward.D2”)\n\nhc_eucli_ward2 &lt;- hclust(md_eucli, method = \"ward.D2\")\n\nVisualisation du dendogramme (arbre de classification) avec la fonction plot().\n\nplot(hc_eucli_ward2, main = \"Distance euclidienne + Méthode de Ward2\")\n\n\n\n\n\n\nAggrégation des individus par la méthode de liason complète (“complete”)\n\nhc_chi2_complete &lt;- hclust(md_chi2, method = \"complete\")\n\nVisualisation du dendogramme (arbre de classification) avec la fonction plot().\n\nplot(hc_chi2_complete, main = \"Distance chi2 + Méthode de liasion complète\")\n\n\n\n\n\n\nAggrégation des individus par la méthode de liason moyenne (“average”)\n\nhc_gower_average &lt;- hclust(md_gower, method = \"average\")\n\nVisualisation du dendogramme (arbre de classification) avec la fonction plot().\n\nplot(hc_gower_average, main = \"Distance de Gower + Méthode de liaison moyenne\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nEn fonction de vos données et de vos objectifs, vous pouvez réaliser plusieurs dendrogramme différents jusqu’à obtenir une classification qui fait « sens »."
  },
  {
    "objectID": "modules/statistique/CAH.html#partitionnement",
    "href": "modules/statistique/CAH.html#partitionnement",
    "title": "Classification Ascendante Hiérarchique",
    "section": "3. Partitionnement",
    "text": "3. Partitionnement\nIl ne reste plus qu’à découper le dendrogramme obtenu à une certaine hauteur pour obtenir une partition des individus. La qualité d’une partition se traduit mathématiquement par une petite variabilité intra-classe et une grande variabilité inter-classes. La forme et les sauts d’inertie du dendogramme permettent d’apprécier l’évolution de ces variabilités en fonction du nombre de partitions. Par exemple :\n\nForme de l’arbreSauts d’inertie\n\n\nL’analyse de la forme du dendogramme fournit des indications sur le nombre de classes à retenir. Deux branches bien distinctes apparaissent sur l’arbre. Ces deux branches se subdivisent ensuite en 4 sous-groupes. Les partitions suivantes semblent beaucoup moins marquées.\n\n\n\n\n\n\n\nL’inertie de l’arbre renvoyée par la fonction hclust() est l’inertie inter-classe qui traduit la séparation et la compacité des classes. Elle est calculée à partir des distances entre les centres des classes formés à chaque étape du regroupement. Une inertie inter-classe élevée indique que les clusters sont bien séparés, ce qui est généralement considéré comme souhaitable lors de la formation de groupes homogènes. En visualisant l’évolution de l’inertie selon le nombre de classes, on peut ainsi évaluer la qualité de la partition et choisir le nombre optimal de classes pour créer des groupes homogènes et bien distincts.\nL’inertie du dendogramme est stockée dans l’élément height d’un objet hclust. Il est facile de représenter les sauts d’inertie avec la fonction plot().\n\n# Récupération et tri croissant de l'inertie de chaque partition\ninertie &lt;- sort(hc_eucli_ward2$height, decreasing = TRUE)\n\n# Représentation graphique de l'inertie en fonction du nombre de classe\nplot(inertie[1:13], type = \"s\", xlab = \"Nombre de classes\", ylab = \"Inertie\")\n\n\n\n\n\n\n\nLa fonction rect.hclust() permet de visualiser les différentes partitions directement sur le dendrogramme.\n\nplot(hc_eucli_ward2, main = \"Distance euclidienne + Méthode de Ward2\")\nrect.hclust(hc_eucli_ward2, 2, border = \"green4\") # Partition en 2 classes\nrect.hclust(hc_eucli_ward2, 3, border = \"blue4\") # Partition en 3 classes\nrect.hclust(hc_eucli_ward2, 4, border = \"red4\") # Partition en 4 classes\n\n\n\n\nLa fonction cutree() permet de récupérer la partition des individus suivant le nombre de classes souhaitées. Elle renvoie un vecteur contenant la classe d’appartrenance de chaque individu. l’ordre des individus étant identique à celui du tableau de départ, la classe d’appartenance des individus peut facilement être ajoutée dans une nouvelle colonne du tableau de départ.\n\n# k = Nombre de classes souhaitées\nclasses &lt;- cutree(hc_eucli_ward2, k = 4)\n\n# Création d'une nouvelle colonne avec la classe d'appartenance\nvar_quanti$CLASSE &lt;- classes\n\n\n\n\n\n\n\n\nPOP\nPIB\nIDH\nADOFEC\nCO2HAB\nEMPAGR\nEMPSER\nINTERN\nESPVIE\nAGEMED\nTELMOB\nMORINF\nTXMIGR\nDVIEUX\nTUBERC\nURBANI\nDJEUNE\nCLASSE\n\n\n\n\nAGO\n31.317543\n6793.7085\n0.5815\n152.635250\n1.1209815\n50.4490\n41.3865\n14.33910\n60.9660\n16.677\n43.1305\n51.58504\n0.211\n4.3225\n355\n65.85\n91.4625\n1\n\n\nBDI\n11.352978\n756.5941\n0.4320\n56.227500\n0.0466776\n92.0170\n6.4980\n2.66075\n61.4135\n17.320\n56.5347\n40.99260\n0.181\n4.3610\n111\n13.20\n86.9555\n2\n\n\nBEN\n11.643093\n3224.0433\n0.5430\n87.379625\n0.6224791\n38.9125\n42.1465\n20.00000\n61.6200\n18.781\n82.3843\n60.53574\n-0.176\n5.9895\n56\n47.60\n77.7865\n3\n\n\nBFA\n20.036424\n2160.5895\n0.4475\n105.713875\n0.1973980\n25.5640\n40.8700\n16.00000\n61.3770\n17.551\n97.9123\n49.00709\n-1.282\n4.5605\n48\n29.70\n84.9065\n2\n\n\nBWA\n2.278885\n17700.3152\n0.7325\n46.322125\n2.9573642\n20.8570\n61.0040\n47.00000\n69.4325\n24.044\n150.0060\n29.98541\n1.341\n6.9540\n275\n69.80\n54.9450\n4\n\n\nCAF\n4.705777\n938.9888\n0.3960\n130.247875\n0.0650827\n77.4450\n17.1505\n4.33925\n53.0425\n17.611\n27.6743\n84.46370\n-8.581\n5.3140\n540\n41.60\n83.1095\n2\n\n\nCIV\n25.392890\n5133.5905\n0.5360\n118.475250\n0.3346972\n40.4840\n46.5020\n46.82370\n57.6010\n18.854\n134.8580\n59.40349\n-0.323\n5.1820\n142\n51.00\n75.6240\n3\n\n\nCMR\n25.546324\n3628.1177\n0.5615\n107.694875\n0.3226965\n43.7520\n41.3510\n23.20300\n59.1055\n18.688\n69.0854\n50.55533\n-0.193\n4.9770\n186\n56.70\n77.5825\n3\n\n\nCOD\n85.429330\n1091.9213\n0.4790\n124.860500\n0.0242292\n65.6135\n24.6615\n8.61990\n60.5240\n16.988\n43.3822\n68.18008\n0.288\n5.9285\n321\n44.75\n90.5395\n2\n\n\nCOG\n5.312434\n3356.2418\n0.5735\n112.993625\n0.6161096\n34.3665\n43.7460\n8.65000\n64.4300\n19.204\n95.3405\n36.18735\n-0.771\n4.8545\n375\n67.15\n74.8465\n3\n\n\nDJI\n0.966240\n5366.7107\n0.5210\n19.199875\n0.6717953\n33.5180\n53.5140\n55.68140\n66.8460\n26.570\n41.1959\n49.80543\n0.947\n6.9175\n260\n77.85\n44.5025\n3\n\n\nDZA\n42.640735\n11414.5995\n0.7470\n10.256625\n3.6876905\n9.9395\n59.2890\n59.57970\n76.7865\n28.521\n121.9320\n20.14982\n-0.239\n10.2195\n69\n72.90\n48.0295\n1\n\n\nEGY\n99.405839\n11564.7950\n0.7040\n54.061500\n2.4264069\n24.0700\n48.5100\n46.92430\n71.9075\n24.606\n95.2866\n18.10248\n-0.391\n8.6215\n12\n42.70\n55.5010\n1\n\n\nERI\n3.474957\nNA\n0.4575\n53.523500\n0.2143515\n61.4155\n30.1295\n1.30891\n66.1305\n19.209\n20.3640\n31.34800\n-11.571\n8.3650\n89\n40.40\n77.5595\n2\n\n\nETH\n110.651568\n2161.6109\n0.4815\n68.133375\n0.1367414\n66.4175\n23.4770\n18.61810\n66.4200\n19.466\n36.2007\n39.14908\n0.278\n6.2735\n151\n21.00\n72.5195\n2\n\n\nGAB\n2.145926\n14806.5905\n0.7000\n97.469375\n2.5283647\n33.0875\n56.1695\n62.00000\n66.3285\n22.511\n138.2810\n32.69746\n1.562\n5.9895\n525\n89.55\n62.5225\n4\n\n\nGHA\n30.092483\n5303.5336\n0.6085\n67.256625\n0.6147189\n29.8490\n48.7120\n39.00000\n63.9250\n21.507\n137.5170\n34.91044\n-0.339\n5.1870\n148\n56.40\n63.0600\n3\n\n\nGIN\n12.592769\n2531.2341\n0.4750\n136.616375\n0.2561000\n62.0070\n31.8645\n18.00000\n61.3925\n18.020\n96.1150\n64.93173\n-0.326\n5.4930\n176\n36.30\n81.7180\n2\n\n\nGMB\n2.313894\n2175.5690\n0.4915\n79.773500\n0.2678091\n27.4370\n56.9305\n19.83650\n61.8925\n17.844\n139.5290\n39.03308\n-1.371\n4.8385\n174\n61.60\n83.0380\n2\n\n\nGNB\n1.897611\n1969.2724\n0.4760\n105.195125\n0.1811767\n68.3180\n24.6825\n3.93051\n58.1615\n18.833\n78.9889\n54.01618\n-0.755\n5.1780\n361\n43.60\n76.9380\n2\n\n\nGNQ\n1.332474\n19458.9245\n0.5870\n157.016250\n4.3449264\n42.2215\n38.3485\n26.24000\n58.5710\n22.335\n45.1669\n62.62024\n12.443\n4.0325\n201\n72.35\n61.1900\n4\n\n\nKEN\n51.983269\n4266.8368\n0.6000\n76.462375\n0.3597057\n54.7625\n37.9840\n17.82710\n66.5210\n20.119\n96.3202\n30.62253\n-0.197\n4.0970\n292\n27.25\n67.9330\n3\n\n\nLBR\n4.878175\n1462.4118\n0.4800\n136.347000\n0.3234092\n43.3515\n46.3395\n7.98448\n63.9150\n19.411\n56.5690\n53.48219\n-1.049\n5.8600\n308\n51.40\n73.3800\n2\n\n\nLBY\n6.728009\n15096.0769\n0.7225\n5.813500\n8.0879274\n18.6690\n58.9090\n21.75890\n72.8170\n28.817\n91.4793\n10.24269\n-0.301\n6.5675\n40\n80.25\n41.8425\n4\n\n\nLSO\n2.116797\n2758.1290\n0.5245\n92.261750\n1.2613313\n8.6585\n49.0890\n29.00000\n54.0175\n24.010\n113.8310\n65.66614\n-4.783\n7.8615\n611\n28.40\n52.1515\n2\n\n\nMAR\n36.250428\n7476.1792\n0.6830\n31.357000\n1.8404515\n34.9720\n43.3205\n64.80390\n76.5665\n29.538\n124.1720\n19.22586\n-1.437\n10.8840\n99\n62.75\n41.1950\n1\n\n\nMDG\n26.615810\n1629.6623\n0.5275\n110.895250\n0.1630207\n64.4480\n26.6110\n9.80000\n66.8605\n19.568\n40.5703\n38.18323\n-0.058\n5.3400\n233\n37.55\n71.7550\n2\n\n\nMLI\n19.367889\n2305.2361\n0.4325\n170.349250\n0.1866153\n62.7985\n29.5865\n13.00000\n59.1015\n16.347\n115.0850\n61.96196\n-2.123\n4.9950\n53\n42.75\n94.7075\n2\n\n\nMOZ\n29.931026\n1284.9965\n0.4540\n149.940875\n0.2809194\n70.4610\n21.1085\n10.00000\n60.5065\n17.620\n47.7158\n54.01829\n-0.172\n5.4845\n551\n36.25\n84.6455\n2\n\n\nMRT\n4.464505\n5119.7260\n0.5440\n72.045000\n0.6044313\n51.6650\n35.5065\n20.80100\n64.8170\n20.114\n103.7060\n51.54291\n1.150\n5.5370\n93\n54.10\n70.3175\n3\n\n\nMWI\n18.385982\n1051.1249\n0.4805\n134.117500\n0.0761111\n43.8895\n42.2905\n13.78220\n64.0290\n18.080\n39.0058\n35.31582\n-0.895\n4.9260\n181\n17.05\n81.3985\n2\n\n\nNAM\n2.471412\n9784.5769\n0.6455\n65.546375\n1.7450469\n22.3620\n61.3915\n51.00000\n63.5415\n21.832\n112.7020\n28.96725\n-1.979\n6.0905\n524\n50.50\n62.0615\n1\n\n\nNER\n22.876775\n1207.7762\n0.3925\n188.313625\n0.1033337\n75.1875\n17.6130\n5.25049\n62.2220\n15.151\n40.6385\n47.98493\n0.181\n5.4660\n87\n16.45\n105.1010\n2\n\n\nNGA\n198.419144\n5145.2871\n0.5365\n108.545000\n0.6498757\n35.3355\n52.4380\n42.00000\n54.5110\n18.064\n88.1842\n75.67151\n-0.310\n5.1335\n219\n50.75\n81.8610\n3\n\n\nRWA\n12.464453\n2157.3935\n0.5415\n39.292875\n0.0912374\n62.8260\n28.3825\n21.76760\n68.8600\n20.039\n78.8541\n27.02078\n-0.740\n5.2205\n59\n17.25\n69.7705\n2\n\n\nSDN\n42.307384\n4059.5331\n0.5080\n65.994875\n0.5034768\n40.0230\n43.4995\n30.87030\n65.2025\n19.659\n72.0079\n42.14203\n-1.208\n6.4285\n71\n34.75\n71.9420\n3\n\n\nSSD\n11.019019\nNA\n0.4310\n64.044250\n0.1704093\n57.2935\n28.9535\n7.97743\n57.7270\n19.040\n33.4630\n63.69163\n-15.902\n6.1685\n146\n19.75\n75.9210\n2\n\n\nSEN\n16.075343\n3354.8272\n0.5140\n74.084500\n0.7386566\n30.3755\n56.1710\n46.00000\n67.8025\n18.514\n104.4510\n31.82667\n-1.277\n5.7315\n118\n47.45\n79.5920\n3\n\n\nSLE\n7.731678\n1690.8316\n0.4495\n114.548500\n0.1409384\n55.2475\n38.3540\n9.00000\n54.5045\n19.402\n88.4699\n78.47719\n-0.554\n5.2665\n298\n42.30\n72.8270\n2\n\n\nSOM\n15.225566\nNA\nNA\n101.371375\n0.0465698\n83.1580\n13.2430\n2.00405\n57.2340\n16.683\n48.7964\n76.57223\n-2.694\n5.6895\n262\n45.30\n91.7805\n2\n\n\nSWZ\n1.142203\n8647.0887\n0.6080\n77.084375\n1.0549327\n12.5695\n63.5180\n47.00000\n59.7955\n20.729\n93.5273\n43.02284\n-7.378\n6.9180\n329\n23.90\n65.4575\n1\n\n\nTCD\n15.712305\n1577.9727\n0.3975\n163.231250\n0.0655329\n76.6500\n21.2380\n6.50000\n54.1085\n16.554\n45.1237\n71.42419\n0.131\n4.9190\n142\n23.20\n92.9445\n2\n\n\nTGO\n7.985727\n1574.2385\n0.5125\n89.421750\n0.4332564\n37.9915\n49.1365\n12.36020\n60.9000\n19.350\n77.8861\n47.36163\n-0.256\n5.1440\n36\n41.95\n73.5720\n2\n\n\nTUN\n11.629962\n10759.6827\n0.7390\n7.809625\n2.7303114\n13.1830\n54.1790\n64.19080\n76.6025\n32.835\n127.7070\n14.60544\n-0.348\n12.5545\n35\n69.10\n35.9300\n1\n\n\nTZA\n57.159453\n2625.1980\n0.5265\n118.981875\n0.2219524\n65.5295\n27.7440\n25.00000\n65.2375\n17.992\n77.2414\n37.60541\n-0.721\n4.8875\n253\n34.15\n82.3155\n2\n\n\nUGA\n43.499310\n2151.6788\n0.5410\n120.467500\n0.1350604\n72.7705\n20.6300\n23.70650\n63.1715\n16.733\n57.2726\n33.80762\n4.018\n3.8020\n200\n24.10\n91.0075\n2\n\n\nZAF\n58.175393\n12556.2802\n0.7080\n68.416500\n8.0903570\n5.1275\n71.8460\n56.16740\n63.9935\n27.621\n153.2500\n28.49095\n2.536\n8.1795\n520\n66.65\n44.2375\n1\n\n\nZMB\n17.606374\n3500.5119\n0.5830\n122.185000\n0.3012960\n49.0500\n40.0920\n14.30000\n63.7000\n17.592\n89.1570\n40.44662\n-0.467\n3.9620\n346\n43.80\n84.0360\n3\n\n\nZWE\n14.542143\n2982.9890\n0.5700\n88.973500\n0.8492879\n66.4255\n26.8395\n27.05550\n61.3425\n18.668\n89.4049\n33.90040\n-8.150\n5.4055\n210\n32.20\n77.2085\n3"
  },
  {
    "objectID": "modules/statistique/CAH.html#caractérisation-représentation",
    "href": "modules/statistique/CAH.html#caractérisation-représentation",
    "title": "Classification Ascendante Hiérarchique",
    "section": "4. Caractérisation & représentation",
    "text": "4. Caractérisation & représentation\nDans l’objectif de caractèriser et de nommer les différentes classes détéctées, il peut être intérressant de faire un résumé statistique de chaque variable pour toutes les classes. Le package gtsummary et sa fonction tbl_summary est parfaite pour cela.\n\nlibrary(gtsummary)\ntbl_summary(var_quanti, by = CLASSE)\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      1, N = 81\n      2, N = 241\n      3, N = 131\n      4, N = 41\n    \n  \n  \n    POP\n34 (9, 47)\n14 (7, 24)\n18 (12, 30)\n2 (2, 3)\n    PIB\n10,272 (8,354, 11,452)\n1,691 (1,285, 2,162)\n4,060 (3,356, 5,134)\n16,398 (15,024, 18,140)\n        Unknown\n0\n3\n0\n0\n    IDH\n0.69 (0.64, 0.72)\n0.48 (0.44, 0.50)\n0.54 (0.54, 0.57)\n0.71 (0.67, 0.73)\n        Unknown\n0\n1\n0\n0\n    ADOFEC\n60 (26, 71)\n113 (87, 135)\n87 (72, 109)\n72 (36, 112)\n    CO2HAB\n2.13 (1.59, 2.97)\n0.17 (0.09, 0.23)\n0.61 (0.36, 0.65)\n3.65 (2.85, 5.28)\n    EMPAGR\n18 (12, 27)\n64 (52, 71)\n40 (34, 49)\n27 (20, 35)\n    EMPSER\n57 (47, 62)\n28 (21, 39)\n43 (40, 49)\n58 (52, 59)\n    INTERN\n54 (47, 61)\n10 (6, 18)\n27 (20, 42)\n37 (25, 51)\n    ESPVIE\n68 (63, 77)\n61 (58, 64)\n64 (61, 65)\n68 (64, 70)\n    AGEMED\n26.1 (21.6, 28.8)\n18.0 (17.2, 19.4)\n18.9 (18.7, 20.1)\n23.3 (22.5, 25.2)\n    TELMOB\n117 (95, 125)\n57 (41, 81)\n89 (82, 104)\n115 (80, 141)\n    MORINF\n24 (19, 32)\n51 (39, 65)\n42 (35, 52)\n31 (25, 40)\n    TXMIGR\n-0.4 (-1.6, -0.1)\n-0.7 (-1.6, 0.0)\n-0.3 (-0.8, -0.2)\n1.5 (0.9, 4.3)\n    DVIEUX\n8.40 (6.71, 10.39)\n5.29 (4.92, 5.73)\n5.19 (4.98, 5.73)\n6.28 (5.50, 6.66)\n    TUBERC\n214 (61, 396)\n179 (106, 301)\n186 (118, 260)\n238 (161, 338)\n    URBANI\n64 (49, 67)\n36 (23, 42)\n51 (44, 56)\n76 (72, 83)\n    DJEUNE\n52 (43, 63)\n82 (74, 88)\n76 (70, 78)\n58 (52, 62)\n  \n  \n  \n    \n      1 Median (IQR)\n    \n  \n\n\n\n\n\nProfil des classes\nL’intérprétation des profil des classes peut être facilitée par la représentation graphique. Pour cela, commencez par standardiser les valeurs avec la fonction scale()\n\nscaled_var &lt;- scale(var_quanti[-18])\n\n# Matrice to dataframe\nscaled_var &lt;- as.data.frame(scaled_var)\n\n# Récupération des classe d'appartenance\nscaled_var$CLASSE &lt;- as.factor(classes)\n\nRegrouper ensuite les individus par classe d’appartenance en calculant les moyennes (ou médiannes) de chaque indicateur avec la fonction aggregate().\n\n# Regroupement individus par classe + calcul moyennes\nProfil_classe &lt;- aggregate(scaled_var[, -18],\n                           by = list(CLASSE = scaled_var$CLASSE),\n                           mean, na.rm = TRUE)\n\n\n\n\n\n\nCLASSE\nPOP\nPIB\nIDH\nADOFEC\nCO2HAB\nEMPAGR\nEMPSER\nINTERN\nESPVIE\nAGEMED\nTELMOB\nMORINF\nTXMIGR\nDVIEUX\nTUBERC\nURBANI\nDJEUNE\n\n\n\n\n1\n0.2576714\n0.9831468\n1.3558610\n-0.7955726\n0.9931544\n-1.1334637\n1.0549772\n1.3282362\n0.9815592\n1.2790957\n0.7319400\n-0.9742460\n-0.0063041\n1.4317306\n0.1309541\n0.6079127\n-1.0991077\n\n\n2\n-0.0979426\n-0.7091511\n-0.7708391\n0.4098541\n-0.4901452\n0.6113731\n-0.6549051\n-0.7021380\n-0.4003301\n-0.5200337\n-0.5014697\n0.4125525\n-0.2335242\n-0.2781355\n0.0149935\n-0.6187286\n0.5494495\n\n\n3\n0.2237703\n-0.2049346\n0.0852618\n-0.1520631\n-0.2974752\n-0.1834640\n0.2727221\n0.2532384\n-0.0592075\n-0.1520919\n0.2736590\n0.0360333\n0.0585430\n-0.3544520\n-0.1825306\n0.2339907\n0.0072599\n\n\n4\n-0.6549404\n2.4227871\n1.4435022\n-0.3737746\n1.9213565\n-0.8050529\n0.9331295\n0.7333309\n0.6312865\n1.0563097\n0.6555464\n-0.6439315\n1.2234886\n-0.0426795\n0.2413550\n1.7360767\n-1.1220766\n\n\n\n\n\n\n\n\n\nUne dernière étape est nécessaire pour représenter les profil de classe avec ggplot2. Tranformez le tableau en format long en utilisant la fonction pivot_longer() du package tidyr.\n\nlibrary(tidyr)\nProfil_classe_lg &lt;- Profil_classe |&gt;\n                      pivot_longer(!CLASSE, names_to = \"variable\", values_to = \"value\")\n\n\n\n\n\n\n\nCLASSE\nvariable\nvalue\n\n\n\n\n1\nPOP\n0.2576714\n\n\n1\nPIB\n0.9831468\n\n\n1\nIDH\n1.3558610\n\n\n1\nADOFEC\n-0.7955726\n\n\n1\nCO2HAB\n0.9931544\n\n\n1\nEMPAGR\n-1.1334637\n\n\n1\nEMPSER\n1.0549772\n\n\n1\nINTERN\n1.3282362\n\n\n1\nESPVIE\n0.9815592\n\n\n1\nAGEMED\n1.2790957\n\n\n1\nTELMOB\n0.7319400\n\n\n1\nMORINF\n-0.9742460\n\n\n1\nTXMIGR\n-0.0063041\n\n\n1\nDVIEUX\n1.4317306\n\n\n1\nTUBERC\n0.1309541\n\n\n1\nURBANI\n0.6079127\n\n\n1\nDJEUNE\n-1.0991077\n\n\n2\nPOP\n-0.0979426\n\n\n2\nPIB\n-0.7091511\n\n\n2\nIDH\n-0.7708391\n\n\n2\nADOFEC\n0.4098541\n\n\n2\nCO2HAB\n-0.4901452\n\n\n2\nEMPAGR\n0.6113731\n\n\n2\nEMPSER\n-0.6549051\n\n\n2\nINTERN\n-0.7021380\n\n\n2\nESPVIE\n-0.4003301\n\n\n2\nAGEMED\n-0.5200337\n\n\n2\nTELMOB\n-0.5014697\n\n\n2\nMORINF\n0.4125525\n\n\n2\nTXMIGR\n-0.2335242\n\n\n2\nDVIEUX\n-0.2781355\n\n\n2\nTUBERC\n0.0149935\n\n\n2\nURBANI\n-0.6187286\n\n\n2\nDJEUNE\n0.5494495\n\n\n3\nPOP\n0.2237703\n\n\n3\nPIB\n-0.2049346\n\n\n3\nIDH\n0.0852618\n\n\n3\nADOFEC\n-0.1520631\n\n\n3\nCO2HAB\n-0.2974752\n\n\n3\nEMPAGR\n-0.1834640\n\n\n3\nEMPSER\n0.2727221\n\n\n3\nINTERN\n0.2532384\n\n\n3\nESPVIE\n-0.0592075\n\n\n3\nAGEMED\n-0.1520919\n\n\n3\nTELMOB\n0.2736590\n\n\n3\nMORINF\n0.0360333\n\n\n3\nTXMIGR\n0.0585430\n\n\n3\nDVIEUX\n-0.3544520\n\n\n3\nTUBERC\n-0.1825306\n\n\n3\nURBANI\n0.2339907\n\n\n3\nDJEUNE\n0.0072599\n\n\n4\nPOP\n-0.6549404\n\n\n4\nPIB\n2.4227871\n\n\n4\nIDH\n1.4435022\n\n\n4\nADOFEC\n-0.3737746\n\n\n4\nCO2HAB\n1.9213565\n\n\n4\nEMPAGR\n-0.8050529\n\n\n4\nEMPSER\n0.9331295\n\n\n4\nINTERN\n0.7333309\n\n\n4\nESPVIE\n0.6312865\n\n\n4\nAGEMED\n1.0563097\n\n\n4\nTELMOB\n0.6555464\n\n\n4\nMORINF\n-0.6439315\n\n\n4\nTXMIGR\n1.2234886\n\n\n4\nDVIEUX\n-0.0426795\n\n\n4\nTUBERC\n0.2413550\n\n\n4\nURBANI\n1.7360767\n\n\n4\nDJEUNE\n-1.1220766\n\n\n\n\n\n\n\n\n\nReprésentation graphique des profils de classe avec ggplot2 :\n\nlibrary(ggplot2)\nggplot(Profil_classe_lg) +\n  geom_bar(aes(x = variable, y = value, fill =  CLASSE), stat = \"identity\") +\n  scale_fill_manual(values = c(\"lightblue3\", \"red3\", \"yellow3\", \"blue4\")) +\n  facet_wrap(~CLASSE) +\n  coord_flip() + theme_bw()\n\n\n\n\n\n\nCartographie\nSi vous souhaitez cartographier les résultat, vous pouvez utiliser le package mapsf. Commencez par importer un fond de carte, puis réalisez une jointure avec le tableau de données final contenant les classes d’appartenances.\n\n# Import d'une couche géoghraphique des pays africains \nlibrary(sf)\npays_afrique &lt;- st_read(\"data/GADM_AFRICA_2020/afrika_map.shp\",  quiet = TRUE)\n\n# Jointure Fond de carte - tableau\npays_afrique &lt;-merge(pays_afrique,var_quanti, by.x=\"iso3\", by.y=0, all.x=TRUE)\n\nPuis cartographiez la classification avec la fonction mapsf() :\n\nlibrary(mapsf)\nmf_map(x = pays_afrique, \n       var = \"CLASSE\", \n       type = \"typo\",\n       pal = c(\"lightblue3\", \"red3\", \"yellow3\", \"blue4\"),\n       leg_title = \"Classes\")\n\nmf_layout(\n  title = \"CAH (distance euclidienne + méthode Ward.2)\",\n  credits = \"H. Pecout; Sources: Human Development Report 2020 & GADM 2023\"\n)"
  },
  {
    "objectID": "modules/statistique/CAH.html#exercice",
    "href": "modules/statistique/CAH.html#exercice",
    "title": "Classification Ascendante Hiérarchique",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\nFond de carte Afrique (GADM 2020)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez les fichiers suivants en utilisant les fonctions adéquates :\n\ndata/DEV_AFRICA_2018/afrika_don.csv\n\ndata/GADM_AFRICA_2020/afrika_map.shp\n\n\nVous pouvez également importer le dictionnaire des variables afrika_don_meta.csv.\n\n\nUn peu d’aide ?\n# Pour importer le fichier csv (afrika_don.csv)\nread.csv2()\nread.csv()\n\n# Pour importer le fichier ESRI Shapefile (afrika_map.shp)\nlibrary(sf)\nst_read()\n\n\n5. Explorez les potentielles corrélations entre les différentes variables quantitatives du tableau “afrika_don”\nPour cela, utilisez la représentation graphique en nuage de point et le calul de coefficient de corrélation. Quelle(s) variable(s) pourraient-on exclure de la CAH ?\n\n\nUn peu d’aide ?\n# Nuages de points multiples  \npairs()\n# Corrélation multiple\ncor()\n\n# Nuages de points 1 vs 1\nplot()\n# Corrélation 1 vs 1\ncor_test()\n\n\n5. Préparez le tabmeau de données pour réalisez un CAH.\n\nAssignez les valeurs de la variable “iso3” comme noms des lignes du tableau\nSélectionnez uniquement les 10 variables suivantes :“POP”, “PIB”, “ADOFEC”, “EMPAGR”, “INTERN”, “ESPVIE”, “TXMIGR”, “DVIEUX”, “TUBERC”, “URBANI”\n\n\n\nUn peu d’aide ?\n# 1. Ajout de noms de ligne \nrow.names(tableau) &lt;- tabelau$...\n\n# 2. Sélection des colonnes\nNew_tab &lt;- tableau[ , ... ]\n\n\n6. Calculez une matrice de distance euclidienne entre toutes les variables.\n\n\nUn peu d’aide ?\ndist()\n\n\n7. Réalisez un regroupement hiérarchique avec la méthode “ward.d2” puis affichez le dendogramme\n\n\nUn peu d’aide ?\n# Regroupement hiérarchique\nhclust()\n\n# Affichage de l'arbre\nplot()\n\n\n7. Representez l’inertie intra-classe en fonction du partitionnement de l’arbre\nA quelle hauteur pouvons nous découper le dendogramme ? Combien de classes bien disctinctes pouvons-vous créer ?\n\n\nUn peu d’aide ?\n# Récupération et tri croissant de l'inertie de chaque partition\n... &lt;- sort(...$..., decreasing = TRUE)\n\n# Représentation graphique de l'inertie en fonction du nombre de classe\nplot(...)\n\n\n8. Découpez le dendogramme en 3 classes et assignez le résultat de la classification dans une nouvelle colonne du tableau de données\n\n\nUn peu d’aide ?\n# Découpage de l'arbre et assignation de la classification dans une nouvelle colonne\n...$... &lt;- cutree()\n\n\n9. Cartographiez le résultat\n\n\nUn peu d’aide ?\n# Joignez le tableau de données au fond de carte\nmerge()\n\n# Construisez une carte de typologie - Une couleur par classe détéctée\nlibrary(mapsf)\nmf_map()\nmf_layout()\n\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/cartographie.html",
    "href": "modules/cartographie.html",
    "title": "Cartographie",
    "section": "",
    "text": "Cartographie avec mapsf\n\n\nPrésentation du package mapsf pour la cartographie thématique\n\n\n\n\n\n\n27 juil. 2023\n\n\nTimothée Giraud, Hugues pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/reproductibilite.html",
    "href": "modules/reproductibilite.html",
    "title": "Reproductibilité",
    "section": "",
    "text": "Le package miniCRAN\n\n\nCréer son CRAN personnel en local\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues Pecout\n\n\n\n\n\n\n\n\nProgrammation lettrée et notebook\n\n\nIntroduction et mise en pratique avec Rmarkdown\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues Pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html",
    "href": "modules/graphique/Rbase_graph.html",
    "title": "Graphique R-base",
    "section": "",
    "text": "Le langage R met à disposition un ensemble de fonctions pour la représentation graphique via le package pré-installé graphics . Bien que l’on préférera des packages spécialisés et plus complets comme ggplot2 pour créer de jolis graphiques personnalisés, les fonctions R-base de représentation peuvent être très utiles en matière d’exploration de données."
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#les-fonctions-r-base",
    "href": "modules/graphique/Rbase_graph.html#les-fonctions-r-base",
    "title": "Graphique R-base",
    "section": "Les fonctions R-base",
    "text": "Les fonctions R-base\nLes fonctions graphiques peuvent être classées en trois catégories :\nI. Les fonctions permettant de créer différents types de graphiques :\n\nplot() : Fonction générique de représentation graphique\nmatplot() : Dispersions de toutes le variables d’un tableau (un graphique)\npairs() : Matrice de nuage de point pour l’ensemble des variables d’un tableau\nstripchart() : diagrammes de dispersion\ndotchart() : diagramme en points de Cleveland\nboxplot() : diagramme en boîte\nqqnorm() : diagramme quantile-quantile théorique normal\nqqplot() : diagramme quantile-quantile empirique\nbarplot() : diagramme à barres\npie() : diagramme en secteurs\nmosaicplot() : diagramme en mosaïque\nspineplot() : diagrammes en épine (entre l’histogramme et le mosaic plot)\nhist() : histogramme\ncurve() : Représentation d’une expression mathématique\netc….\n\nII. les fonctions permettant d’ajouter de l’information à un graphique existant :\n\nlegend() : légende\ntitle() : titre\ndensity() : courbe de densité à noyau\npoints() : point\nrug() : représentation stripchart le long de l’axe des x\nlines() : segments de droites reliant des points\nmatlines() : segments de droites reliant des points (utiliser avec matplot())\nabline() : droites traversant toute la zone graphique\ntext() : texte dans la zone graphique\nmtext() : texte dans la marge\netc…\n\nIII. Les fonctions utilisées pour fixer et contrôler des paramètres graphiques généraux :\n\npar()\nlayout()"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#la-fonction-plot",
    "href": "modules/graphique/Rbase_graph.html#la-fonction-plot",
    "title": "Graphique R-base",
    "section": "La fonction plot()",
    "text": "La fonction plot()\nLa fonction primitive de représentation graphique la plus couramment utilisée est la fonction plot(). Il s’agit d’une fonction générique dont le comportement s’adapte automatiquement à la nature de ses arguments.\n\n\n\n\n\n\nAvertissement\n\n\n\nEn fonction du type de variable choisie, la fonction plot() peut produire un graphique de style barplot, spineplot, stripchart, barplot ou curve. (cf. Notes de cours STT-4230 / STT-6230, de Sophie Baillargeon.)\n\n\nIl est même possible d’exécuter cette fonction sur l’ensemble d’un dataframe. Des nuages de points par couple de variables seront alors automatiquement produits :\n\nplot(iris) \n\n\n\n\n\n\n\n\nDeux syntaxes sont possibles pour utiliser cette fonction sur deux variables :\n\nClassique :\n\n\nx &lt;- seq(-pi, pi, 0.1)\ny &lt;- sin(x)\n\n\nplot(x, y) \n\n\n\n\n\n\n\n\n\nsyntaxe “formule” :\n\n\nplot(y ~ x)        \n\n\n\n\n\n\n\n\nDans l’expression y ~ x, y désigne la variable dépendante (à expliquer) et varX la variable indépendante (explicative).\nLa fonction plot() accepte une multitude d’arguments qui permettent de façonner les graphiques (voir le Help pour plus de détails).\n\nplot(y ~ x, \n  type = \"o\", # type de tracé: points (\"p\"), lignes (\"l\"), les deux (\"b\" ou \"o\"), ...\n  col = \"red\", # couleur, tapez `colours()` pour la liste complète\n  pch = 20, # type de symboles, un chiffre entre 0 et 25, tapez `?points`\n  cex = 1.1, # taille des symboles\n  lty = 1, # type de lignes, un chiffre entre 1 et 6\n  lwd = 1.4, # taille de lignes\n  xlim = c(-2.5, 2.5), # limites de l'axe des x\n  ylim = c(-1.5, 1.5), # limites de l'axe des y)\n  xlab = \"La variable x\", # titre pour l'axe des x\n  ylab = \"Le sinus  de x\", # titre pour l'axe des y\n  main = \"La fonction sinus entre -pi et pi\" # titre général pour le graphique\n)"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#ajout-déléménts",
    "href": "modules/graphique/Rbase_graph.html#ajout-déléménts",
    "title": "Graphique R-base",
    "section": "Ajout d’éléménts",
    "text": "Ajout d’éléménts\nUne fois le graphique construit, plusieurs fonctions primitives vous permettre d’ajouter différents éléments. Exemple :\n\nplot(y ~ x, \n  type = \"o\", # type de tracé: points (\"p\"), lignes (\"l\"), les deux (\"b\" ou \"o\"), ...\n  col = \"red\", # couleur, tapez `colours()` pour la liste complète\n  pch = 20, # type de symboles, un chiffre entre 0 et 25, tapez `?points`\n  cex = 1.1, # taille des symboles\n  lty = 1, # type de lignes, un chiffre entre 1 et 6\n  lwd = 1.4, # taille de lignes\n  xlim = c(-2.5, 2.5), # limites de l'axe des x\n  ylim = c(-1.5, 1.5), # limites de l'axe des y)\n  xlab = \"La variable x\", # titre pour l'axe des x\n  ylab = \"Le sinus  de x\") # titre pour l'axe des y) \n\n\n# Ajout d'une LEGENDE\nlegend(x = 0.9, # Emplacement de la légende (coin haut gauche)\n       y = -1.1, # Emplacement de la légende (coin haut gauche)\n       legend = \"Fonction sinus entre -pi et pi\", \n       bg = \"lightgoldenrod\",\n       col = \"red\",\n       pch = 20,\n       cex = 0.7, # Taille de lé lagende\n       lty = 1, \n       lwd = 1.4)\n\n# Ajout d'une LIGNE (horizontale)\nabline(h = 0, # Coupe l'axe des y à cette valeur \n       lty = 2, # Type de ligne\n       lwd = 0.5, # épaisseur\n       col = \"grey50\")\n\n# Ajout d'un POINT\npoints(x = -0, \n       y = 0, \n       col = \"red4\", \n       pch = 20,# Type de symbol\n       cex = 4)\n\n# Ajout de TEXTE\ntext(\"x = 0 = y\", # Texte à afficher\n     x = 0.4, # Emplacement du texte (centre)\n     y = -0.16, # Emplacement du texte (centre)  \n     col = \"red4\")     \n       \n# Ajout d'un TITRE\ntitle(\"Titre de mon graphique\", \n      cex.main = 1.2,  \n      font.main= 4, \n      col.main= \"red4\")"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#fenêtre-graphique",
    "href": "modules/graphique/Rbase_graph.html#fenêtre-graphique",
    "title": "Graphique R-base",
    "section": "Fenêtre graphique",
    "text": "Fenêtre graphique\nDeux fonctions - par() et layout() - permettent de gérer les paramètres graphiques, comme la disposition des figures, les marges, les axes, la police… :\nExemple d’utilisation de la fonction par() qui contient un grand nombre d’arguments possibles (cf. ?par) :\n\npar(bg = \"#298cbe\", # Couleur de fond\n    col= \"white\",      # couleur du graphique\n    mfrow = c(2,2),    # Fenêtre découper en deux lignes / deux colonnes (4 graphiques)\n    mar = c(5,3,4,1))  # Gestion des marges pour chaque graphique (B,L,T,R)\n\n\nplot(x = log(1:10), y = 10:1, main = \"plot 1\")\n\nplot(x = exp(1:10), y = log(1:10), main = \"plot 2\")\n\nplot(x = sin(1:10), y = 1:10, main = \"plot 3\")\n\nplot(x = 1:10, y = exp(1:10), main = \"plot 4\")\n\n\n\n\n\n\nlayout() propose moins d’arguments mais permet un meilleur ajustement de la disposition des figures. Pour cela, il est nécessaire de construire une matrice pour indiquer la position et l’espace de chaque graphique ajouté. Exemple :\n\nmatrix(c(1,1,1,2,0,3,2,0,3),  3,  3,  byrow = TRUE)\n\n     [,1] [,2] [,3]\n[1,]    1    1    1\n[2,]    2    0    3\n[3,]    2    0    3\n\n\nAvec la matrice ci-dessus, la fenêtre graphique sera paramétrée pour contenir trois graphiques. Le graphique 1 occupera toute la première ligne. le graphique 2 occupera les deux dernières lignes de la première colonne, et le 3e sera situé dans les deux dernières lignes de la dernière colonne. Exemple :\n\npar(bg  = \"#298cbe\",  col= \"white\")\n\n# Découpage de la fenêtre graphique\nlayout(mat = matrix(c(1,1,1,2,0,3,2,0,3),  3,  3,  byrow = TRUE))\n\nplot(x = exp(1:10), y = log(1:10), main = \"plot 1\")\nplot(x = sin(1:10), y = 1:10, main = \"plot 2\")\nplot(x = log(1:10), y = 10:1, main = \"plot 3\")"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#principaux-graphiques",
    "href": "modules/graphique/Rbase_graph.html#principaux-graphiques",
    "title": "Graphique R-base",
    "section": "Principaux graphiques",
    "text": "Principaux graphiques\n\nVariable Quantitative\nPour représenter la distribution d’un variable quantitative, plusieurs types de graphiques peuvent être utilisés.\n\nstripchart()\nLa fonction stripchart() permet de représenter la distribution d’une variable quantitative.\n\n\nCode\npar(mfrow = c(2,2)) \n\n# gauche supérieur\nstripchart(cars$speed, xlab = \"speed\", pch = 16)\n\n# droite supérieur\nstripchart(cars$speed, xlab = \"speed\", method = \"stack\", pch = 16)\n\n# gauche inférieur\nstripchart(cars$speed, xlab = \"speed\", method = \"jitter\", pch = \"#\")\n\n# droite inférieur\nstripchart(cars$speed, ylab = \"speed\", method = \"jitter\", vertical = TRUE)\n\n\n\n\n\n\n\nhist()\nLa fonction hist() permet de construire un histogramme.\n\n\nCode\npar(mfrow = c(2,2)) \n\n# gauche supérieur\nhist(cars$speed)\n\n# droite supérieur\nhist(cars$speed, breaks = quantile(cars$speed), main = \"Histogramme par quartile\")\n\n# gauche inférieur\nhist(cars$speed, freq = FALSE, main = \"Histogramme des proportions\")\n\n# droite inférieur\nhist(cars$speed, freq = FALSE, main = \"Histogramme et densité échantillonnale\")\nlines(density(cars$speed))\n\n\n\n\n\n\n\nboxplot()\nLa fonction boxplot()permet de construire une boîte à moustache. Elle peut être associée à la fonction stripchart().\n\n\nCode\npar(mfrow = c(1,2)) \n\n# gauche\nboxplot(cars$dist)\n\n# droite\nboxplot(cars$dist, horizontal=T, varwidth= TRUE, col = \"red4\", outline = FALSE)\nstripchart(cars$dist,  pch = 16, metho = \"jitter\", add = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 variables Quantitatives\n\nplot()\nUtilisez la fonction plot() pour représenter deux variables quantitatives.\n\n\nCode\nplot(speed ~ dist, data = cars, pch = 16)\n\n# Ajout d'une marque pour chaque individus le long de l'axe des abcisses\nrug(cars$dist)\n\n\n\n\n\n\n\n\n\n\n\n\nVariable Qualitative\n\nplot()\nLa fonction plot() peut être utilisée pour une variable qualitative. Pour cela la variable doit être stockée dans le format factor.\n\nclass(esoph$alcgp)\n\n[1] \"ordered\" \"factor\" \n\nplot(esoph$agegp)\n\n\n\n\n\n\n\n\n\n\nbarplot()\nVous pouvez utiliser la fonction barplot() sur une table de fréquence.\n\n# Calcul table de fréquence\ntable_freq &lt;- table(esoph$agegp)\n\n# Fréquence par modalité\ntable_freq \n\n\n25-34 35-44 45-54 55-64 65-74   75+ \n   15    15    16    16    15    11 \n\nbarplot(table_freq )\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 variables Qualitatives\nComme avec une variable qualitative, vous pouvez utiliser les fonction plot() et barplot() pour représenter La répartition d’individus en fonction de deux variables qualitatives.\n\nplot()\nComme avec une seule variable, les variables qualitatives croisées doivent être stockée en factor.\n\n\nCode\nplot(alcgp ~ agegp, data = esoph)\n\n\n\n\n\n\n\n\n\n\n\nbarplot()\nLa fonction barplot fonctionne également sur deux variables qualitatives. Dans un premier temps, calculez le tableau croisé à partir des deux variables qualitatives ciblées :\n\n# Calcul table de fréquence\ntable_freq &lt;- table(esoph$alcgp, esoph$agegp)\n\n# Fréquence par modalité\ntable_freq \n\n           \n            25-34 35-44 45-54 55-64 65-74 75+\n  0-39g/day     4     4     4     4     4   3\n  40-79         4     4     4     4     3   4\n  80-119        3     4     4     4     4   2\n  120+          4     3     4     4     4   2\n\n\nPuis utilisez la fonction barplot() :\n\n\nCode\npar(mfrow = c(2,2)) \n\n# gauche supérieur\nbarplot(table_freq)\n\n# droite supérieur\nbarplot(table_freq, horiz = TRUE)\n\n# gauche inférieur\nbarplot(table_freq, horiz = TRUE, beside=TRUE)\n\n# droite inférieur\nbarplot(table_freq, beside=TRUE, legend.text = levels(esoph$alcgp), \n        args.legend=list(x=\"bottomright\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuantitative & Qualitative\n\nplot()\nLa fonction généraliste plot() peut être utilisée. Si la variable qualitative est appelée en première, le graphique prendra la forme d’un spine plot (%). Dans le cas contraire, la fonction renverra un ensemble de boxplots.\n\n\nCode\npar(mfrow = c(1,2)) \n\n\n# Spine plot\nplot(agegp ~ ncases, data = esoph, main = \"Spine plot\")\n\n# Boxplot\nplot(ncases ~ agegp, data = esoph, main = \"Boxplots\")\n\n\n\n\n\n\n\n\n\nIl est également possible d’utiliser directement la fonction boxplot pour représenter la distribution de chaque individus pour une variable quantitative, par modalité d’une variable qualitative :\n\n\nCode\nboxplot(ncases ~ agegp, data = esoph)\n\n\n\n\n\n\n\n\n\nL’argument col de la fonction plot() permet aussi de représenter trois variables (quantitative ~ quantitative + qualitative). Pour cela, il est préférable d’utiliser une variable qualitative stockée en format factor.\n\n\nCode\n# Conversion de la variable qualitative en format factor\nmtcars$cyl &lt;- as.factor(mtcars$cyl)\n\n# Nuage de point\nplot(disp ~ wt, \n     data = mtcars, \n     col = cyl, # Couleur des points en fonction d'une variable qualitative\n     pch = 16, \n     xlab = \"Weight\",\n     ylab = \"Displacement\")\n\n# Ajout d'une légende\nlegend(x = \"bottomright\", \n       title = \"Number of cylinders\",\n       legend = levels(mtcars$cyl), \n       col =  1:3, \n       ncol = 3, \n       pch = 16)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTableau complet\nLa fonction pairs() (ou plot()) permet de construire une matrice du nuages de points entre toutes les variables d’un tableau, quelque soit leur type.\n\n\nCode\npairs(iris)\n\n\n\n\n\n\n\n\n\n\n\n\n\nExpression mathématique\nLa fonction curve() permet de tracer de représenter une expression mathématique.\n\n\nCode\ncurve(expr = (x), col = \"grey30\", from = -2, to = 2)\ncurve(expr = x^2,  col = \"green4\", add = TRUE)\ncurve(expr = x^3, col = \"red\", add = TRUE)\n\nlegend(\"bottomright\", title = \"Function\", \n       legend = c(\"(x)\", \"x^2\", \"x^3\"), \n       col = c(\"grey30\", \"green4\", \"red\"), \n       lty = 1)"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#exporter-un-graphique",
    "href": "modules/graphique/Rbase_graph.html#exporter-un-graphique",
    "title": "Graphique R-base",
    "section": "Exporter un graphique",
    "text": "Exporter un graphique\nUn graphique crée dans RStudio est affiché par défaut dans l’onglet Plots. Dans cet onglet, vous pouvez zoomer sur le graphique en cliquant sur le bouton Zoom. Vous pouvez aussi enregistrer le graphique en cliquant sur le bouton Export :\n\n\n\n\n\nL’export d’un graphique peut être automatisé en ligne de code R de différente manière (cf. module import). Le procédure d’export la plus simple peut être réalisé avec la fonction dev.print(). Cette fonction permet aussi bien un export en format vectoriel que matricielle du graphique affiché.\n\n# Format pdf\ndev.print(device = pdf, \"graph_export.pdf\", width = 600) \n\n# format svg\ndev.print(device = svg, file = \"graph_export.svg\", width = 6)\n\n# format png\ndev.print(device = png, file = \"graph_export.png\", width = 600)\n\n# format png\ndev.print(device = jpeg, file = \"graph_export.jpeg\", width = 600)"
  },
  {
    "objectID": "modules/graphique/Rbase_graph.html#exercice",
    "href": "modules/graphique/Rbase_graph.html#exercice",
    "title": "Graphique R-base",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez le fichier “afrika_don.csv” dans un data.frame\n\n\nUn peu d’aide ?\n... &lt;- read.csv2(file = \"...\")\n\n\n5. Construisez un histogramme par quartile pour la variable “POP” :\n\n\n\n\n\n\n\nUn peu d’aide ?\nhist(..., breaks  = quantile(...))\n\n\n6. Améliorez la mise en page, en ajoutant par exemple un peu de couleur, un titre, une source… :\n\n\n\n\n\n\n\nUn exemple ?\npar(bg = \"cornsilk3\")\n\nhist(My_data$POP, \n     breaks  = quantile(My_data$POP),\n     col = \"green4\",\n     border = \"white\",\n     xlab = \"Nombre d'habitants (millions)\", \n     ylab = \"Proportion\", \n     main = \"Répartition des pays africains selon leur population\")\n\nrug(My_data$POP)\nmtext(side = 4, \"source : UN, 2020\", cex = 0.8)\n\n\n7. Exportez le graphique à l’aide d’une fonction (format png)\n\n\nUn peu d’aide ?\ndev.print(device = ..., file = \"...\")\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/manipulation/manipulation.html",
    "href": "modules/manipulation/manipulation.html",
    "title": "Manipulation de tableau de données",
    "section": "",
    "text": "Plusieurs packages comme data.table ou tidyverse (dplyr, tidyr, stringr…) sont d’excellentes extensions qui facilitent la manipulation de données. Cependant, le langage R et ses fonctions primitives permettent déjà de faire beaucoup de choses facilement et sans charger de packages supplémentaires…\nDans cette leçon, nous nous intéressons principalement à la manipulation de tableau, et plus précisément à la manipulation de l’objet data.frame avec R."
  },
  {
    "objectID": "modules/manipulation/manipulation.html#le-data.frame",
    "href": "modules/manipulation/manipulation.html#le-data.frame",
    "title": "Manipulation de tableau de données",
    "section": "Le data.frame",
    "text": "Le data.frame\nLe data.frame est un objet primitif de R qui permet de stocker un tableau de données.\nChaque colonne d’un data.frame est en fait un vecteur (liste d’éléments de même type). On peut donc dire qu’un data.frame est en réalité un ensemble de vecteurs de même longueur (même nombre d’éléments). Pour bien comprendre cela, il suffit de construire un data.frame de toute pièce :\n\n# Construction de plusieurs vecteurs de même longueur (3 éléments à chaque fois)\nnom &lt;- c(\"Modibo Keïta\", \"Moussa Traoré\", \"Alpha Oumar Konaré\")\nnaissance &lt;- c(\"1915-06-04\", \"1936-09-25\", \"1946-02-02\")\narrivee_pouvoir &lt;- c(1960, 1968, 1992)\nduree_pouvoir &lt;- c(8, 22, 10)\nparcours_militaire &lt;- c(FALSE, TRUE, FALSE)\n\n# Construction du data.frame à partir de ces vecteurs\nmon_tableau &lt;- data.frame(nom,\n                          naissance,\n                          arrivee_pouvoir,\n                          duree_pouvoir,\n                          parcours_militaire)\n\n# Vérification du type d'objet créer\nclass(mon_tableau)\n\n[1] \"data.frame\"\n\n\nmon_tableau :\n\n\n\n\n\nnom\nnaissance\narrivee_pouvoir\nduree_pouvoir\nparcours_militaire\n\n\n\n\nModibo Keïta\n1915-06-04\n1960\n8\nFALSE\n\n\nMoussa Traoré\n1936-09-25\n1968\n22\nTRUE\n\n\nAlpha Oumar Konaré\n1946-02-02\n1992\n10\nFALSE"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#interroger-un-df",
    "href": "modules/manipulation/manipulation.html#interroger-un-df",
    "title": "Manipulation de tableau de données",
    "section": "Interroger un df",
    "text": "Interroger un df\nPlusieurs fonctions permettent de visualiser la structure d’un data.frame. Exemples :\n\n# Afficher le tableau de données\nView(mon_tableau)\n\nCette fonction est l’équivalent du clic sur l’objet data.frame dans l’onglet environnement de l’EDI Rstudio :\n\n\n\n\n\n\n\n\n\nIl est également possible d’afficher, directement dans la console, les premières lignes ou dernières lignes d’un data.frame.\n\n# Afficher les premières lignes (6 par défaut)\nhead(mon_tableau)\n\n# Afficher les denrières lignes (6 par défaut)\nhead(mon_tableau, n = 10)\n\nLa fonction str() permet d’interroger la structure d’un tableau et de ses variables.\n\n# Pour connaitre la structure d'un tableau\nstr(mon_tableau)\n\n'data.frame':   3 obs. of  5 variables:\n $ nom               : chr  \"Modibo Keïta\" \"Moussa Traoré\" \"Alpha Oumar Konaré\"\n $ naissance         : chr  \"1915-06-04\" \"1936-09-25\" \"1946-02-02\"\n $ arrivee_pouvoir   : num  1960 1968 1992\n $ duree_pouvoir     : num  8 22 10\n $ parcours_militaire: logi  FALSE TRUE FALSE\n\n\nCette fonction est l’équivalent du clic sur l’icône bleu situé à gauche d’un data.frame dans l’onglet environnement de l’EDI Rstudio :\n\n\n\n\n\n\n\n\n\nUn ensemble de fonction permettent d’interroger les dimensions d’un data.frame. Ex :\n\n# Nombre de colonnes\n# length(mon_tableau) ou :\nncol(mon_tableau)\n\n[1] 5\n\n# Nombre de lignes\nnrow(mon_tableau)\n\n[1] 3\n\n# Dimension d'un tableau (nombre de colonnes et de lignes)\ndim(mon_tableau)\n\n[1] 3 5\n\n\nLa fonction colnames() permet de récupérer les noms de colonnes.\n\ncolnames(mon_tableau)\n\n[1] \"nom\"                \"naissance\"          \"arrivee_pouvoir\"   \n[4] \"duree_pouvoir\"      \"parcours_militaire\"\n\n\nEnfin la fonction summary(), qui peut être utilisée sur n’importe quel type d’objet, renvoie un résumé statistique pour chaque colonne lorsqu’elle est exécutée sur un data.frame.\n\nsummary(mon_tableau)\n\n     nom             naissance         arrivee_pouvoir duree_pouvoir  \n Length:3           Length:3           Min.   :1960    Min.   : 8.00  \n Class :character   Class :character   1st Qu.:1964    1st Qu.: 9.00  \n Mode  :character   Mode  :character   Median :1968    Median :10.00  \n                                       Mean   :1973    Mean   :13.33  \n                                       3rd Qu.:1980    3rd Qu.:16.00  \n                                       Max.   :1992    Max.   :22.00  \n parcours_militaire\n Mode :logical     \n FALSE:2           \n TRUE :1"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#créer-un-colonne",
    "href": "modules/manipulation/manipulation.html#créer-un-colonne",
    "title": "Manipulation de tableau de données",
    "section": "Créer un colonne",
    "text": "Créer un colonne\nLa syntaxe suivante mon_tableau$nom utilisant le symbole “$” permet de sélectionner une colonne (ici ‘nom’) d’un data.frame. Cette syntaxe peut également être utilisée pour créer une nouvelle colonne. Exemple :\n\nmon_tableau$new_col &lt;- c(\"val1\", \"val2\", \"val3\")\n\nCette syntaxe permet également créer une nouvelle colonne à partir de colonnes existantes :\n\nmon_tableau$fin_pouv &lt;- mon_tableau$arrivee_pouvoir + mon_tableau$duree_pouvoir\n\nmon_tableau avec ses deux nouvelles colonnes :\n\n\n\n\n\nnom\nnaissance\narrivee_pouvoir\nduree_pouvoir\nparcours_militaire\nnew_col\nfin_pouv\n\n\n\n\nModibo Keïta\n1915-06-04\n1960\n8\nFALSE\nval1\n1968\n\n\nMoussa Traoré\n1936-09-25\n1968\n22\nTRUE\nval2\n1990\n\n\nAlpha Oumar Konaré\n1946-02-02\n1992\n10\nFALSE\nval3\n2002"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#séléctionner",
    "href": "modules/manipulation/manipulation.html#séléctionner",
    "title": "Manipulation de tableau de données",
    "section": "Séléctionner",
    "text": "Séléctionner\nLe symbole “$” permet de sélectionner une colonne d’un tableau. Pour sélectionner plusieurs colonnes et également des lignes précises, deux solutions sont possibles.\n\nLes crochets [ , ]\n\n# df[toutes les lignes, 4e colonne]\nmon_tableau[, 4]\n\n# df[lignes 1 à 2, toutes les colonnes]\nmon_tableau[1:2, ]\n\n# df[toutes les lignes, 1er et 3e colonne]\nmon_tableau[, c(1,3)]\n\n# df[toutes les lignes où la durée du pouvoir est égal ou supérieur à 10]\nmon_tableau[duree_pouvoir  &lt;= 10, ]\n\nExemple, sélection des valeurs situées ligne 2, dans les colonnes “nom” et “naissance” :\n\n# df[ligne 2, colonne \"nom\"]\nmon_tableau[2 , c(\"nom\", \"naissance\")]\n\n            nom  naissance\n2 Moussa Traoré 1936-09-25\n\n\n\n\nLa fonction subset()\nLa fonction primitive subset() permet également de réaliser des sélections dans un data.frame. Avec cette fonction, il n’est pas possible de sélectionner des lignes avec leur index. La sélection de ligne doit forcément répondre à une condition.\n\nsubset(mon_tableau,   \n       subset = duree_pouvoir &lt;= 10,\n       select = c(\"nom\", \"naissance\"))\n\n                 nom  naissance\n1       Modibo Keïta 1915-06-04\n3 Alpha Oumar Konaré 1946-02-02"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#regrouper",
    "href": "modules/manipulation/manipulation.html#regrouper",
    "title": "Manipulation de tableau de données",
    "section": "Regrouper",
    "text": "Regrouper\n\nFonction aggregate()\nLa fonction primitive pour regrouper des lignes d’un data.frame en fonction d’une valeur n’est pas très simple d’utilisation. De plus, elle ne permet de calculer qu’une seul nouvelle variable à partir du regroupement opéré. La fonction goup_by() du package dplyr lui est souvent préférée.\n\n#  Regroupement les lignes sur variable \"parcours_militaire\"\n# et calcul du nombre d'individus regroupés\naggregate(mon_tableau$parcours_militaire, \n          by=list(militaire=parcours_militaire),\n          FUN = length)\n\n  militaire x\n1     FALSE 2\n2      TRUE 1\n\n\n\n#  Regroupement les lignes sur variable \"parcours_militaire\"\n# et calcul de la durée moyenne au pouvoir pour chaque groupe\naggregate(duree_pouvoir ~ parcours_militaire, \n          data = mon_tableau, \n          FUN = mean)\n\n  parcours_militaire duree_pouvoir\n1              FALSE             9\n2               TRUE            22"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#joindre",
    "href": "modules/manipulation/manipulation.html#joindre",
    "title": "Manipulation de tableau de données",
    "section": "Joindre",
    "text": "Joindre\nUn jointure peut s’effectuer à l’aide de la fonction primitive merge().\n\n# Construction d'un second tableau \nnom &lt;- c(\"Modibo Keïta\", \"Moussa Traoré\", \"Alpha Oumar Konaré\")\ndeces &lt;-  c(1977, 2020, NA)\nmon_tableau_bis &lt;- data.frame(nom, deces)\n\n# Jointure de deux tableaux par le \"nom\"\nmerge(mon_tableau, mon_tableau_bis, by=\"nom\")\n\n                 nom  naissance arrivee_pouvoir duree_pouvoir\n1 Alpha Oumar Konaré 1946-02-02            1992            10\n2       Modibo Keïta 1915-06-04            1960             8\n3      Moussa Traoré 1936-09-25            1968            22\n  parcours_militaire new_col fin_pouv deces\n1              FALSE    val3     2002    NA\n2              FALSE    val1     1968  1977\n3               TRUE    val2     1990  2020"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#trier",
    "href": "modules/manipulation/manipulation.html#trier",
    "title": "Manipulation de tableau de données",
    "section": "Trier",
    "text": "Trier\nLa fonction primitive sort() peut être utilisée pour trier les éléments d’un vecteur, mais pour trier un tableau en fonction des valeurs d’une ou de plusieurs variables, utilisez la fonction order(). Il est obligatoire d’assigner le résultat dans un objet pour que le tri opéré soit gardé en mémoire.\n\nmon_tableau[order(duree_pouvoir, decreasing = TRUE), 1:4]\n\n                 nom  naissance arrivee_pouvoir duree_pouvoir\n2      Moussa Traoré 1936-09-25            1968            22\n3 Alpha Oumar Konaré 1946-02-02            1992            10\n1       Modibo Keïta 1915-06-04            1960             8"
  },
  {
    "objectID": "modules/manipulation/manipulation.html#chaîne-de-caractère",
    "href": "modules/manipulation/manipulation.html#chaîne-de-caractère",
    "title": "Manipulation de tableau de données",
    "section": "Chaîne de caractère",
    "text": "Chaîne de caractère\nLa manipulation de chaîne de caractère dans un tableau est une opération classique. Si il existe des packages très puissant comme stringr pour traiter les chaînes de caractère, les fonctions primitives du langage R offrent un certain nombre de fonctionnalités.\n\nConcatener\nLes fonction paste et paste0 permet de concatener des chaîne de caractère\n\npaste(mon_tableau$nom, \"a été président du Mali pendant\", mon_tableau$duree_pouvoir, \"ans\")\n\n[1] \"Modibo Keïta a été président du Mali pendant 8 ans\"       \n[2] \"Moussa Traoré a été président du Mali pendant 22 ans\"     \n[3] \"Alpha Oumar Konaré a été président du Mali pendant 10 ans\"\n\n\n\n\nGérer la casse\nPlusieurs foncntions primitives permettent de gérer la casse d’une chaîne de caractère.\n\n# Transformation en minuscule\ntolower(mon_tableau$nom)\n\n[1] \"modibo keïta\"       \"moussa traoré\"      \"alpha oumar konaré\"\n\n# Transformation en majuscule\ntoupper(mon_tableau$nom)\n\n[1] \"MODIBO KEÏTA\"       \"MOUSSA TRAORÉ\"      \"ALPHA OUMAR KONARÉ\"\n\n# Minuscule ou majuscule \ncasefold(mon_tableau$nom, upper = TRUE)\n\n[1] \"MODIBO KEÏTA\"       \"MOUSSA TRAORÉ\"      \"ALPHA OUMAR KONARÉ\"\n\n\n\n\nModifier\n\n# Pour extraire une partie de chaîne de caractère\nsubstring(text = mon_tableau$naissance, first =  1, last = 4)\n\n[1] \"1915\" \"1936\" \"1946\"\n\n# Pour remplacer une partie de chaîne de caractère\ngsub(x = mon_tableau$naissance , pattern = \"-\" , replacement = \"/\")\n\n[1] \"1915/06/04\" \"1936/09/25\" \"1946/02/02\"\n\n# Découper une chaîne de caractère \nstrsplit(x = mon_tableau$naissance, split = \"-\")\n\n[[1]]\n[1] \"1915\" \"06\"   \"04\"  \n\n[[2]]\n[1] \"1936\" \"09\"   \"25\"  \n\n[[3]]\n[1] \"1946\" \"02\"   \"02\""
  },
  {
    "objectID": "modules/manipulation/manipulation.html#exercice",
    "href": "modules/manipulation/manipulation.html#exercice",
    "title": "Manipulation de tableau de données",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio\nFile/New Project/New Directory…\n2. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nDonnées pays africains (UN-CEPII)\n Download\n\n\nFond de carte Afrique (GADM 2020)\n Download\n\n\n\n3. Placez les données (décompressées) dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n4. Importez les fichiers suivants en utilisant les fonctions adéquates :\n\ndata/DEV_AFRIA_2018/afrika_don.csv\n\ndata/GADM_AFRICA_2020/afrika_map.shp\n\n\n\n\nUn peu d’aide ?\n# Pour importer le fichier csv (afrika_don.csv)\nread.csv()\nread.csv2()\n\n# Pour importer le fichier ESRI Shapefile (afrika_map.shp)\nlibrary(sf)\nst_read()\n\n\n5. Faîte une jointure entre le fond de carte des pays et le tableau de données\n\n\nUn peu d’aide ?\nmerge(x = ... , y = ... , by = \"...\", all.x = ...) \n\n\n6. Créez une nouvelle colonne stockant le nom de chaque pays en MAJUSCULE\n\n\nUn peu d’aide ?\n...$... &lt;- toupper(...$...)\n\n\n7. Sélectionnez uniquement les pays francophone (LANGR = 1)\n\n\nUn peu d’aide ?\n... &lt;- ....[...$LANGR == ... , ]\n\n\n8. Calculer le nombre de pays francophone par sous-région\n\n\nUn peu d’aide ?\n... &lt;- aggregate(... ~ ..., \n                 data = ..., \n                 FUN = ...)\n\n\n9. Modifiez les noms des colonnes du tableau de regroupement crée pour les rendre plus intelligibles\n\n\nUn peu d’aide ?\ncolnames(...) &lt;- c(\"...\", \"...\")\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/reseau/igraph.html",
    "href": "modules/reseau/igraph.html",
    "title": "Analyse de réseau avec igraph",
    "section": "",
    "text": "Cette leçon a pour objectif d’introduire à la manipulation de réseau avec le package igraph.Elle s’adresse aux utilisateur·rices R maîtrisant les manipulations de base des objets R. Un minimum de connaissance en matière de théorie de graphe est également requis.\nPlan du cours :\n\nPrésentation du package igraph\nL’objet igraph : création, manipulation et export\n\nIndicateurs globaux\n\nMesures locales\n\nCliques et communautés\n\nReprésentation graphique\n\nExercice"
  },
  {
    "objectID": "modules/reseau/igraph.html#introduction",
    "href": "modules/reseau/igraph.html#introduction",
    "title": "Analyse de réseau avec igraph",
    "section": "",
    "text": "Cette leçon a pour objectif d’introduire à la manipulation de réseau avec le package igraph.Elle s’adresse aux utilisateur·rices R maîtrisant les manipulations de base des objets R. Un minimum de connaissance en matière de théorie de graphe est également requis.\nPlan du cours :\n\nPrésentation du package igraph\nL’objet igraph : création, manipulation et export\n\nIndicateurs globaux\n\nMesures locales\n\nCliques et communautés\n\nReprésentation graphique\n\nExercice"
  },
  {
    "objectID": "modules/reseau/igraph.html#manuel-exercice",
    "href": "modules/reseau/igraph.html#manuel-exercice",
    "title": "Analyse de réseau avec igraph",
    "section": " Manuel & exercice",
    "text": "Manuel & exercice\n\n\n\n\n\n Consulter en plein écran"
  },
  {
    "objectID": "modules/graphique.html",
    "href": "modules/graphique.html",
    "title": "Graphique",
    "section": "",
    "text": "Graphique R-base\n\n\nRepresentations graphiques avec les fonctions primitives\n\n\n\n\n\n\n26 juil. 2023\n\n\nHugues pecout, Justin Dansou\n\n\n\n\n\n\n\n\nLe package ggplot2\n\n\nReprésentations graphiques avec ggplot2\n\n\n\n\n\n\n26 juil. 2023\n\n\nJustin Dansou, Hugues Pecout\n\n\n\n\n\n\nAucun article correspondant\n\n\n\n\nRevenir à la page d’acceuil des modules"
  },
  {
    "objectID": "modules/import/scraping.html",
    "href": "modules/import/scraping.html",
    "title": "Introduction au WebScraping",
    "section": "",
    "text": "Travail en cours\n\n\n\nPublication prévue pour avril 2024"
  },
  {
    "objectID": "modules/import/scraping.html#fondamentaux-et-cas-pratiques-de-webscraping-avec-r-et-python",
    "href": "modules/import/scraping.html#fondamentaux-et-cas-pratiques-de-webscraping-avec-r-et-python",
    "title": "Introduction au WebScraping",
    "section": "",
    "text": "Travail en cours\n\n\n\nPublication prévue pour avril 2024"
  },
  {
    "objectID": "modules/reproductibilite/minicran.html",
    "href": "modules/reproductibilite/minicran.html",
    "title": "Le package miniCRAN",
    "section": "",
    "text": "Le package miniCRAN permet de créer un dépôt en interne composé de packages sélectionnés dans des dépôts de type CRAN. Cela permet de récupérer les sources binaires de packages ciblés, et de les rendre disponibles où l’on souhaite (sur sa machine, sur clef USB, sur son propre serveur…).\nminiCRAN peut par exemple être utilisé pour créer son CRAN personnel sur une clef USB, qui vous permettra d’installer ces packages sur n’importe quelle machine sans avoir besoin d’être connecté à internet.\nCommencez par installer le package miniCRAN :\n\ninstall.packages(\"miniCRAN\")\n\nminiCRAN ne récupère pas uniquement le code source d’un package ciblé mais également toutes ses dépendances (autres packages) indispensables à son fonctionnement.\n\nLister les dépendances\nla fonction pkgDep()permet de connaitre la liste de toutes les dépendances d’un package. Exemple :\n\nlibrary(miniCRAN)\n\npkgDep(pkg = \"mapsf\", suggests = FALSE, enhances = FALSE, repos = \"https://cloud.r-project.org/\")\n\n [1] \"mapsf\"      \"classInt\"   \"Rcpp\"       \"sf\"         \"e1071\"     \n [6] \"class\"      \"KernSmooth\" \"DBI\"        \"magrittr\"   \"s2\"        \n[11] \"units\"      \"MASS\"       \"proxy\"      \"wk\"        \n\n\nVous pouvez visualiser ces dépendances sous forme de graphe à l’aide de la fonction makeDepGraph() :\n\n# Construction d'un objet igraph (graphe) formalisant les dépendances d'un package\ngraph_dep &lt;- makeDepGraph( \"mapsf\", suggests = FALSE, enhances = FALSE, repos = \"https://cloud.r-project.org/\")\n\n# Affichage du graphe\nplot(graph_dep , legendPosition = c(-1, 1), vertex.size = 20)\n\n\n\n\n\n\nCréer son miniCRAN\nAvant d’importer les sources des packages ciblés ainsi que leurs dépendances, créez un nouveau répertoire qui permettra de les stocker. Vous pouvez le faire manuellement ou en code R avec la fonction dir.create() :\n\npath_miniCRAN &lt;- \"/home/hugues/Documents/5.Cours/Modules_R/miniCRAN\"\n\n# Création du répertoire nommé \"miniCRAN\"\ndir.create(path = path_miniCRAN)\n\nIl ne vous reste plus qu’à remplir votre répertoire avec les sources des packages ciblés. Pour cela, utilisez la fonction makeRepo() :\n\n# Création d'un vecteur avec le ou les package(s) ciblé(s)\nmes_pkgs &lt;- c(\"readxl\", \"openxlsx\", \"haven\",\n              \"dplyr\", \"lubridate\", \"stringr\",\n              \"ggplot2\", \"FactoMineR\", \"sf\",\n              \"terra\", \"mapsf\", \"rmarkdown\", \"knitr\")\n\n\n# Téléchargement des sources des packages (+ dépendances) dans le répertoire \"miniCRAN\"\nmakeRepo(pkgDep(mes_pkgs), path = path_miniCRAN, type = c(\"source\", \"mac.binary\", \"win.binary\"))\n\n\n\nAjouter des packages\nIl est très simple de rajouter de nouveaux packages (et leur dépendances) dans votre miniCRAN en utilisant la fonction addPackage() :\n\naddPackage(\"tidyr\", path = path_miniCRAN, type = c(\"source\", \"mac.binary\", \"win.binary\"))\n\nPour lister l’ensemble des packages stockés sur votre miniCRAN, utilisez la fonction pkgAvail() :\n\n# Check for available packages\npkgAvail(repos = path_miniCRAN, )[, c(1:3, 5)]\n\n\n\nInstaller un package du miniCRAN\nPour installer un package stocké sur votre miniCRAN local, utilisez la fonction install.packages()de la manière suivante :\n\n# Chemin d'accès jusqu'au \"miniCRAN\" stocké sur votre machine.\nurl_miniCRAN &lt;- paste0(\"file:///\", \"C:/Users/&lt;username&gt;/.../miniCRAN\")\n\n# Installation (type = \"source\", \"mac.binary\" ou \"win.binary\")\ninstall.packages(\"ggplot2\", \n                 repos = url_miniCRAN,\n                 type = \"win.binary\", \n                 dependencies = TRUE)\n\n\n\nLe miniCRAN de TIG’R\nUn miniCRAN comportant l’ensemble des packages utilisés dans les leçons de ce site web est mis à disposition. Vous pouvez le télécharger en vous connectant à cette page.\n\n\nPour aller plus loin\nPour connaitre l’ensemble des fonctionnalités offertes par le package miniCRAN, consultez le site web du package."
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html",
    "href": "modules/geomatique/OpenStreetMap.html",
    "title": "OpenStreetMap & R",
    "section": "",
    "text": "Cette leçon vise à introduire différents types d’exploitation de la base de données géographique libre OpenStreetMap avec R. Les traitements et analyses présentés sont :\n\nGéocodage d’adresses avec tidygeocoder\nCartographie interactive avec leaflet et mapview\nExtraction de données avec maptiles, osmdata et osmextract\nCalcul de matrice de distance euclidienne avec sf, puis par la route avec osrm\nCalcul itinéraires avec osrm"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html#introduction",
    "href": "modules/geomatique/OpenStreetMap.html#introduction",
    "title": "OpenStreetMap & R",
    "section": "",
    "text": "Cette leçon vise à introduire différents types d’exploitation de la base de données géographique libre OpenStreetMap avec R. Les traitements et analyses présentés sont :\n\nGéocodage d’adresses avec tidygeocoder\nCartographie interactive avec leaflet et mapview\nExtraction de données avec maptiles, osmdata et osmextract\nCalcul de matrice de distance euclidienne avec sf, puis par la route avec osrm\nCalcul itinéraires avec osrm"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html#manuel",
    "href": "modules/geomatique/OpenStreetMap.html#manuel",
    "title": "OpenStreetMap & R",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran"
  },
  {
    "objectID": "modules/geomatique/OpenStreetMap.html#exercice",
    "href": "modules/geomatique/OpenStreetMap.html#exercice",
    "title": "OpenStreetMap & R",
    "section": " Exercice",
    "text": "Exercice\n\n1. Créez un projet Rstudio puis un script R à la racine du projet.\nFile/New Project/New Directory…\n2. Géocodez une de ces deux adresses :\nA. IRSP : “Institut Régional de Santé Publique de Ouidah, Bénin”\nB. LaReSPD : “Université de Parakou, Bénin”\n\n\nUn peu d’aide ?\n# Construction d'un data.frame avec nom et adresse\n... &lt;- data.frame(name = \"IRSP\",\n                  addresse = \".........\")\n\n# Géocodage \nlibrary(tidygeocoder)\n... &lt;- geocode(.tbl = ...,  address = ...)\n\n\n3. Créez un point (objet sf) à partir de la latitude et de la longitude récupérées.\n\n\nUn peu d’aide ?\nlibrary(sf)\n\n# Création objet sf\n... &lt;- st_as_sf(..., coords = c(\"...\", \"...\"), crs = 4326)\n\n\n4. Transformez la projection de ce point en WGS84 / Pseudo-Mercator (EPSG 3857), puis visualisez-le avec mapview.\n\n\nUn peu d’aide ?\n... &lt;- st_transform(..., crs = 3857)\n\nlibrary(mapview)\nmapview(...)\n\n\n5. Téléchargez les données suivantes :\n\n\n\n\n\n\n\nIntitulé\nTéléchargement\n\n\n\n\nEmprise des agglomérations urbaines (AFRICAPOLIS 2020)\n Download\n\n\n\n6. Placez les données décompressées dans le répertoire de votre projet, de la façon suivante :\n\n\n\n\n\n\n\n\n\n7. Importez la couche géographique africapolis_extract.shp et transformez sa projection en en WGS84 / Pseudo-Mercator (EPSG 3857).\n\n\nUn peu d’aide ?\n... &lt;- st_read(\"data/.../....shp\",  quiet = TRUE)\n\n# Transformation de la projection en Pseudo-Mercator (3857)\n... &lt;- st_transform(..., crs = 3857)\n\n\n8. Sélectionnez uniquement les agglomérations béninoises.\n\n\nUn peu d’aide ?\n... &lt;- ...[...$... == \"BEN\", ]\n\n\n9. Extrayez les centroïdes des polygones d’agglomération du Bénin.\n\n\nUn peu d’aide ?\n... &lt;- st_centroid(...)\n\n\n10. Extrayez la tuile (fond de carte) OSM située au niveau des centroïdes extraits.\nVous pouvez utiliser la fonction st_buffer() pour extraire une zone légèrement plus étendue que l’emprise des centroïdes.\n\n\nUn peu d’aide ?\nlibrary(maptiles)\n... &lt;- get_tiles(x = st_buffer(x = ..., dist =  ...), zoom = 8, crop = TRUE)\n\n\n11. Affichez la tuile OSM, les centroïdes d’agglomérations et l’IRSP (ou LaReSPD) sur une carte.\n\n\nUn peu d’aide ?\nplot_tiles(...)\nplot(st_geometry(...),  col=\"...\" , add = TRUE)\nplot(st_geometry(...),  col=\"...\" , add = TRUE)\n\n# Source des données ?\nmtext(side = 1, line = -1, text = get_credit(\"OpenStreetMap\"), col=\"tomato\")\n\n\n12. Calculez trois matrices de distance différentes entre l’IRSP (ou LaReSPD) et les centroïdes des agglomérations béninoises.\nA. Une matrice de distance euclidienne\nB. Une matrice de distance par la route\nC. Un matrice de distance temps par la route\n\n\nUn peu d’aide ?\n# Distance Euclidienne \n... &lt;- st_distance(x = ..., y = ...) \n\n# Distance et temps par la route\nlibrary(osrm)\n... &lt;- osrmTable(src = ..., \n                 dst = ...,\n                 measure = c(\"...\", \"...\"))\n\n\n13. Créez de nouveaux attributs (nouvelles colonnes) dans la couche géographique des centroïdes d’agglomérations, pour y stocker les distances euclidiennes à l’IRSP (ou LaReSPD), et les distances (km et temps) par la route.\nConvertissez les distances calculées (mètres) en kilomètres et les temps (minutes) en heures.\n\n\nUn peu d’aide ?\n# Distances euclidiennes\n...$... &lt;- as.numeric(...) / 1000\n\n# Distances km/route\n...$... &lt;- as.numeric(...$...) / 1000\n\n# Distances hrs/route\n...$... &lt;- as.numeric(...$...) / 60\n\n\n14. Calculez les indices moyens d’accessibilité à l’IRSP (ou LaReSPD).\n\n\nUn peu d’aide ?\n# Moyenne des indices accessibilité \nmean(...$...)\nmean(...$...)\nmean(...$...)\n\n\n15. Calculez les indices de performances suivants à partir des distances récupérées.\n\nIndice de sinuosité = distance km par la route / distance euclidienne\n\nIndice de vitesse sur route = distance km par la route / distance temps par la route\n\nIndice global de performance = Indice de vitesse sur route / Indice de sinuosité.\n\nEnregistrez ces indices dans de nouvelles colonnes. Vous pouvez arrondir leurs valeurs à l’aide de la fonction round().\n\n\nUn peu d’aide ?\n# Indice de sinuosité \n...$ind_sin &lt;- round(...$... / ...$..., 2)\n\n# Indice de vitesse sur route\n...$ind_vit &lt;- round(...$... / ...$..., 1)\n\n# Indice global de performance\n...$... &lt;- round(...$ind_vit / ...$ind_sin, 1)\n\n\n16. Cartographiez l’indice global de performance sur les centroïdes (points) des agglomérations. Utilisez la tuile OSM téléchargée comme fond de carte.\n\n\nUn peu d’aide ?\nlibrary(mapsf)\nlibrary(maptiles)\n\n# Affichage de la tuile\nplot_tiles(...)\n\n# Cartographie de l'indice global de performance\nmf_map(x = ...,\n       var = \"...\",\n       type = \"...\",\n       pal = \"...\",\n       leg_pos = \"...\",\n       leg_title = \"...\",\n       breaks = \"...s\",\n       nbreaks = ...,\n       leg_val_rnd = ...,\n       border= ...,\n       cex = ...,\n       add = TRUE)\n\n# Affichage de l'IRSP (ou LaReSPD)\nplot(st_geometry(...), border = NA, col=\"red\", pch = 20, cex = 2, add = TRUE)\n\n\n17. Quelle agglomération présente la plus forte valeur de l’indice global de performance d’accessibilité pour l’IRSP (ou LaReSPD).\n\n\nUn peu d’aide ?\n# Sélection \n... &lt;- ...[...$... == max(...$...), ]\n\n\n18. Calculez l’itinéraire (plus court chemin) entre l’IRSP (ou LaReSPD) et cette agglomération. Cartographiez cet intinéraire sur la tuile OSM téléchargée.\n\n\nUn peu d’aide ?\nlibrary(osrm)\nroute &lt;- osrmRoute(src = ..., dst = ...)\n\n# Cartographie\nplot_tiles(...)\nplot(st_geometry(route), col = \"grey10\", lwd = 6, add = TRUE)\nplot(st_geometry(route), col = \"grey90\", lwd = 1, add = TRUE)\n# Affichage du point d'origine\nplot(st_geometry(...), border = NA, col=\"red\", pch = 20, cex = 3, add = TRUE)\n# Affichage du point de destination\nplot(st_geometry(...), border = NA, col=\"red\", pch = 20, cex = 3, add = TRUE)\n# Crédit pour la tuile OSM\nmtext(side = 1, line = -1, text = get_credit(\"OpenStreetMap\"), col=\"tomato\")\n\n\n\n\n\n\n Corrigé"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html",
    "href": "modules/geomatique/geomatic_raster.html",
    "title": "Géomatique avec R - raster",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques matricielles (raster) avec le package terra. Les différentes manipulations de données matricielles abordées sont :\n\nImport et export de raster\nAffichage graphique de raster\nModification d’un raster (reprojection, découpage, aggrégation, fusion…)\nAlgèbre spatial (locale, focale, zonales et globale)\nTransformation et conversion de raster"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html#introduction",
    "href": "modules/geomatique/geomatic_raster.html#introduction",
    "title": "Géomatique avec R - raster",
    "section": "",
    "text": "Cette leçon vise à initier à la gestion, l’analyse et la représentation de données géographiques matricielles (raster) avec le package terra. Les différentes manipulations de données matricielles abordées sont :\n\nImport et export de raster\nAffichage graphique de raster\nModification d’un raster (reprojection, découpage, aggrégation, fusion…)\nAlgèbre spatial (locale, focale, zonales et globale)\nTransformation et conversion de raster"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html#manuel",
    "href": "modules/geomatique/geomatic_raster.html#manuel",
    "title": "Géomatique avec R - raster",
    "section": " Manuel",
    "text": "Manuel\n\n\n\n\n\n Consulter en plein écran"
  },
  {
    "objectID": "modules/geomatique/geomatic_raster.html#exercice",
    "href": "modules/geomatique/geomatic_raster.html#exercice",
    "title": "Géomatique avec R - raster",
    "section": " Exercice",
    "text": "Exercice"
  },
  {
    "objectID": "modules/WIP/osm.html",
    "href": "modules/WIP/osm.html",
    "title": "Exploiter les données OSM",
    "section": "",
    "text": "Work in progress"
  },
  {
    "objectID": "ressources.html",
    "href": "ressources.html",
    "title": "Ressources",
    "section": "",
    "text": "analyse-R : Site web pour l’introduction à l’analyse d’enquêtes avec R et RStudio , crée et maintenue par Joseph Larmarange.\n Cartographie avec R : Manuel pour la création de cartes thématiques conformes aux règles de la sémiologie graphique et de la cartographie, T. giraud & H. Pecout.\n ElementR : Site web du groupe d’utilisateur·rice·s pour le traitement de l’information géographique avec R, coordonnée l’UMR Géographie-Cités, l’UMR PRODIG et l’UAR RIATE.\n Geocomputation with R : Ouvrage (en anglais mais le plus complet) sur la géographie computationnelle avec R, R. Lovelace, J. Nowosad et J. Muenchow.\n Géomatique avec R : Manuel pour la gestion et le traitements de données spatiales, T. giraud & H. Pecout.\n guide-R : Guide pour l’analyse de données d’enquêtes avec R (version actualisée et restructurée de nombreux chapitres d’analyse-R).\n Parcours R : Supports de formations R MTES & MCTRCT.\n Spatial Data Science with R and terra : Documentation très complète (anglais) sur l’utilisation du package terra, produite par l’auteur principal du package.\n Une introduction à R et au tidyverse : Manuel d’introduction à R, accessible et régulièrement mis à jour, par Julien Barnier.\n UtilitR : Documentation collaborative et open source sur R, destinée en premier lieu aux agents de l’INSEE.\nDes centaines de ressources diverses et gratuites (livres, articles, agrégateurs, cours, exercices, sites web, vidéos…) pour la pratique de R en sciences humaines et sociale sont référencées sur le site internet rzine.fr."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Crédits",
    "section": "",
    "text": "TIG’R a été initié en 2023 par Hugues pecout et Julien Dansou dans le cadre de l’école thématique Méthodes et outils de sciences territoriales organisée par le Collègue Internationnal des Sciences Territoirales en 2023. Ce site internet est desormais collaboratif. Il est ouvert à toute contribution.\n\n\n\nListe des contributeurs, par ordre alphabétique :\nLaurent Beauguitte\nAlexandre Cebeillac\nLéa Christophe\nRobin Cura\nJulien Dansou\nMégane Fernandez\nTimothée Giraud\nHugues Pecout\nSébastien Rey-Coyrehourcq\n\n\n\n\nConditions d’utilisation\nLe contenu de ce site web (support de cours et exercice inclus) est soumis à la Licence ouverte V2.0 d’Etalab.\nLe « réutilisateur » est libre de réutiliser l’ « information » :\n\nde la reproduire, la copier,\n\nde l’adapter, la modifier, l’extraire et la transformer, pour créer des « Informations dérivées », des produits ou des services,\n\nde la communiquer, la diffuser, la redistribuer, la publier et la transmettre,\n\nde l’exploiter à titre commercial, par exemple en la combinant avec d’autres informations, ou en l’incluant dans son propre produit ou application.\n\nSous réserve de :\n\nmentionner la paternité de l’ « Information » : sa source (cf. citation et la date de dernière mise à jour de l’ « Information » réutilisée.\n\n\n\n\n\n\n\n\nCitation\n\n\nPecout H., Dansou J., et al. 2023. « TIG’R :  Traitement de l’information géographique avec R ». 2023. https://ee2023.netlify.app/."
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "Introduction",
    "section": "",
    "text": "Les différentes leçons peuvent être utilisées indépendamment les unes des autres. Il est néanmoins nécessaire de connaître les bases du langage R (objets, opérateurs, fonctions…) pour comprendre les différents cours et exercices proposés.\nSi vous êtes débutant·e, plusieurs supports libres et gratuits d’initiation à R sont indiqués dans les ressources annexes. Si vous êtes enseignant·e, vous pouvez également utilisés ces deux diaporamas d’introduction au langage R :\n\n\n\nConsulter en plein écran\n\n\n\n\n\n\nConsulter en plein écran\n\n\n\n\n\n\n\nInstaller R et Rstudio\n\n\n\nTéléchargez R et Rstudio depuis le site de Posit : https://posit.co/download/rstudio-desktop/\nPuis, suivez les instructions d’installation (classiques)\n\n\n\nLes modules thématiques\nLes leçons TIG’R sont classées en huit modules thématiques qui segmentent l’ensemble de la chaîne de traitement de données géographiques :\n\nDonnées (Import, collecte , connexion BD… et export de données)\nManipulation de données (gestion & traitement de données)\nStatistique descriptives (uni, bi et multivariée)\nReprésentation graphique (R-base & ggplot2)\nAnalyse de réseau (Théorie de graphes et analyse de réseau)\nGéomatique (traitement des données vectorielles et raster)\nCartographie thématique (statique et interactive)\nReproductibilité (Bonnes pratiques pour la recherche reproductible)\n\n\n\nLes packages utilisés\nAfin de maximiser la reproductibilité des traitements présentés, les différents modules de formation tentent de minimiser les dépendances à des packages. Les différents packages utilisés sont généralement des références dans la communauté R et laisser présager une certaine stabilité du code présenté.\nLes packages utilisés dans les différents modules thématiques sont :\n\nreadxl\nopenxlsx\nhaven\njpeg\ndplyr\nlubridate\nstringr\ncluster\nade4\nFactoMineR\ngtsummary\nggplot2\nigraph\nsf\nterra\nmapsf\nleaflet\nmapview\nmaptiles\nosmdata\nosmextract\nosrm\nrmarkdown\nknitr\nminiCRAN\n\n\nInstallation\n\n# Liste des packages à installer\npackages &lt;- c(\"readxl\", \"openxlsx\", \"haven\",\n              \"dplyr\", \"lubridate\", \"stringr\",\n              \"ggplot2\", \"FactoMineR\", \"sf\",\n              \"terra\", \"mapsf\", \"rmarkdown\", \"knitr\", \"...\")\n\n\n# Détection de package à installer\nmissing_packages &lt;- packages [!(packages  %in% installed.packages()[,\"Package\"])]\n\n# Installation des packages manquants\nif(length(missing_packages)) install.packages(missing_packages)\n\n\n\n\nLe miniCRAN\nAfin de pouvoir reproduire les différentes leçons sans être dépendant d’une connexion internet, un miniCRAN (répertoire contenant les sources de l’ensemble des packages) est mis à disposition :\n\n Télécharger le miniCRAN\n\nUne fois le répertoire décompressé, vous pouvez installer les différents packages en local de la manière suivante :\n\n# Chemin d'accès jusqu'au répertoire \"miniCRAN\" copié sur votre machine.\nURL_dossier &lt;- paste0(\"file:///\", \"C:/Users/&lt;username&gt;/.../\", \"miniCRAN\")\n\n# Installation de ggplot2 depuis la source (répertoire miniCRAN)\ninstall.packages(\"ggplot2\", \n                 repos = URL_dossier,\n                 type = \"source\")\n\n\n\n\n\n\n\nNote\n\n\n\nModifier “C:/Users/username/…/” par le chemin d’accès correct.\n\n\n\n\nLes données utilisées\nLes différents jeux de données utilisés dans les modules sont présentés et mis à disposition sur cette page.\n\n\nConditions d’utilisation\nLe contenu de ce site web (support de cours et exercice inclus) est soumis à la Licence ouverte V2.0 d’Etalab. Le « Réutilisateur » est libre de réutiliser l’ « Information » :\n\nde la reproduire, la copier,\n\nde l’adapter, la modifier, l’extraire et la transformer, pour créer des « Informations dérivées », des produits ou des services,\n\nde la communiquer, la diffuser, la redistribuer, la publier et la transmettre,\n\nde l’exploiter à titre commercial, par exemple en la combinant avec d’autres informations, ou en l’incluant dans son propre produit ou application.\n\nSous réserve de :\n\nmentionner la paternité de l’ « Information » : sa source (cf. citation et la date de dernière mise à jour de l’ « Information » réutilisée.\n\n\n\nCitation TIG’R\n\n\nPecout H., Dansou J., et al. 2023. « TIG’R :  Traitement de l’information géographique avec R ». 2023. https://ee2023.netlify.app/."
  },
  {
    "objectID": "correction/ggplot2/Correction_ggplot.html",
    "href": "correction/ggplot2/Correction_ggplot.html",
    "title": "Application Tidyverse & ggplot2",
    "section": "",
    "text": "Exercice 1 ~ Application Tidyverse\n\n1. Importer la base de données DEV_AFRICA_2018 sous le nom DevAfrica2018\n\nlibrary(tidyverse)\n\n# Import des métadonnées\nmetaDataDEVAFRICA  &lt;- read.table(file = \"data/DEV_AFRICA_2018/afrika_don_meta.csv\", \n                           header = TRUE,\n                           sep= \";\",\n                           encoding = \"UTF-8\")\n\nlibrary(readxl)\nDevAfrica2018 &lt;- read_excel(\"data/DEV_AFRICA_2018/afrika_don.xls\")\n\n\n\n2. Sélectionner la liste des pays et leur region d’appartenance\n\n# Sélection de la liste des pays et leur region d'appartenance\nDevAfrica2018 %&gt;%\n  select(nom, SUBREG)\n\n# A tibble: 49 × 2\n   nom                 SUBREG         \n   &lt;chr&gt;               &lt;chr&gt;          \n 1 Angola              Middle Africa  \n 2 Burundi             Eastern Africa \n 3 Bénin               Western Africa \n 4 Burkina Faso        Western Africa \n 5 Botswana            Southern Africa\n 6 Rep. Centrafricaine Middle Africa  \n 7 Côte d'Ivoire       Western Africa \n 8 Cameroun            Middle Africa  \n 9 Congo, Rép. dém. du Middle Africa  \n10 Congo               Middle Africa  \n# ℹ 39 more rows\n\n\n\n\n3. Quelles sont les variables de la base de données dont le nom commence par la lettre “P”\n\n# Select ion de colonnes par nom : sélectionner les variables dont le nom commencent par \"P\" \nDevAfrica2018 %&gt;%\n  select(starts_with(\"P\"))\n\n# A tibble: 49 × 2\n     POP PIB               \n   &lt;dbl&gt; &lt;chr&gt;             \n 1 31.3  6793.7084905000002\n 2 11.4  756.59407529999999\n 3 11.6  3224.0433155000001\n 4 20.0  2160.5894579999999\n 5  2.28 17700.315175      \n 6  4.71 938.98882209999999\n 7 25.4  5133.5904630000005\n 8 25.5  3628.1176970000001\n 9 85.4  1091.9212769999999\n10  5.31 3356.2418290000001\n# ℹ 39 more rows\n\n\n\n\n4. Quelles sont les variables de la base de données dont le nom contient la lettre “P”\n\n# sélectionner les variables dont le nom contient la lettre \"P\" \nDevAfrica2018 %&gt;%\n  select(contains(\"P\"))\n\n# A tibble: 49 × 5\n     POP PIB                EMPAGR EMPSER ESPVIE\n   &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 31.3  6793.7084905000002   50.4  41.4    61.0\n 2 11.4  756.59407529999999   92.0   6.50   61.4\n 3 11.6  3224.0433155000001   38.9  42.1    61.6\n 4 20.0  2160.5894579999999   25.6  40.9    61.4\n 5  2.28 17700.315175         20.9  61.0    69.4\n 6  4.71 938.98882209999999   77.4  17.2    53.0\n 7 25.4  5133.5904630000005   40.5  46.5    57.6\n 8 25.5  3628.1176970000001   43.8  41.4    59.1\n 9 85.4  1091.9212769999999   65.6  24.7    60.5\n10  5.31 3356.2418290000001   34.4  43.7    64.4\n# ℹ 39 more rows\n\n\n\n\n5. Renommer la variable “PIB” en “ProduitInterieurBrut”\n\n# Renommer la variable \"PIB\"  par \"ProduitInterieurBrut\"\nDevAfrica2018 %&gt;%\n  rename(ProduitInterieurBrut = PIB)\n\n# A tibble: 49 × 26\n   iso3  name        nom     POP ProduitInterieurBrut IDH   ADOFEC CO2HAB EMPAGR\n   &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 AGO   Angola      Ango… 31.3  6793.7084905000002   0.58…  153.  1.12     50.4\n 2 BDI   Burundi     Buru… 11.4  756.59407529999999   0.432   56.2 0.0467   92.0\n 3 BEN   Benin       Bénin 11.6  3224.0433155000001   0.54…   87.4 0.622    38.9\n 4 BFA   Burkina Fa… Burk… 20.0  2160.5894579999999   0.44…  106.  0.197    25.6\n 5 BWA   Botswana    Bots…  2.28 17700.315175         0.73…   46.3 2.96     20.9\n 6 CAF   Central Af… Rep.…  4.71 938.98882209999999   0.39…  130.  0.0651   77.4\n 7 CIV   Côte d'Ivo… Côte… 25.4  5133.5904630000005   0.53…  118.  0.335    40.5\n 8 CMR   Cameroon    Came… 25.5  3628.1176970000001   0.56…  108.  0.323    43.8\n 9 COD   Dem. Rep. … Cong… 85.4  1091.9212769999999   0.47…  125.  0.0242   65.6\n10 COG   Congo       Congo  5.31 3356.2418290000001   0.57…  113.  0.616    34.4\n# ℹ 39 more rows\n# ℹ 17 more variables: EMPSER &lt;dbl&gt;, INTERN &lt;dbl&gt;, ESPVIE &lt;dbl&gt;, AGEMED &lt;dbl&gt;,\n#   TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;, DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;,\n#   URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;, LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;,\n#   COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;\n\n\n\n\n6. Calculer le taux de dépendance jeune par sous-région\n\n# Proportion (Pourcentage) de jeunes par sous région\nDevAfrica2018 %&gt;%\n  group_by(SUBREG) %&gt;%\n  summarise(depJeune = mean(DJEUNE))\n\n# A tibble: 5 × 2\n  SUBREG          depJeune\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Eastern Africa      77.3\n2 Middle Africa       79.3\n3 Northern Africa     49.1\n4 Southern Africa     55.8\n5 Western Africa      79.6\n\n\n\n\n7. Ordonner les pays par sous région\n\n# Trier les pays par niveau de PIB croissant\nDevAfrica2018 %&gt;%\n  arrange(desc(SUBREG))\n\n# A tibble: 49 × 26\n   iso3  name  nom     POP PIB   IDH   ADOFEC CO2HAB EMPAGR EMPSER INTERN ESPVIE\n   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 BEN   Benin Bénin 11.6  3224… 0.54…   87.4  0.622   38.9   42.1  20      61.6\n 2 BFA   Burk… Burk… 20.0  2160… 0.44…  106.   0.197   25.6   40.9  16      61.4\n 3 CIV   Côte… Côte… 25.4  5133… 0.53…  118.   0.335   40.5   46.5  46.8    57.6\n 4 GHA   Ghana Ghana 30.1  5303… 0.60…   67.3  0.615   29.8   48.7  39      63.9\n 5 GIN   Guin… Guin… 12.6  2531… 0.47…  137.   0.256   62.0   31.9  18      61.4\n 6 GMB   Gamb… Gamb…  2.31 2175… 0.49…   79.8  0.268   27.4   56.9  19.8    61.9\n 7 GNB   Guin… Guin…  1.90 1969… 0.47…  105.   0.181   68.3   24.7   3.93   58.2\n 8 LBR   Libe… Libé…  4.88 1462… 0.47…  136.   0.323   43.4   46.3   7.98   63.9\n 9 MLI   Mali  Mali  19.4  2305… 0.43…  170.   0.187   62.8   29.6  13      59.1\n10 MRT   Maur… Maur…  4.46 5119… 0.54…   72.0  0.604   51.7   35.5  20.8    64.8\n# ℹ 39 more rows\n# ℹ 14 more variables: AGEMED &lt;dbl&gt;, TELMOB &lt;dbl&gt;, MORINF &lt;dbl&gt;, TXMIGR &lt;dbl&gt;,\n#   DVIEUX &lt;dbl&gt;, TUBERC &lt;dbl&gt;, URBANI &lt;dbl&gt;, DJEUNE &lt;dbl&gt;, SUBREG &lt;chr&gt;,\n#   LOCKED &lt;dbl&gt;, COLFRA &lt;dbl&gt;, COLGBR &lt;dbl&gt;, LANGFR &lt;dbl&gt;, LANGEN &lt;dbl&gt;\n\n\n\n\n\nExercice 2 : Application ggplot2\n\n1. Recoder la variable « POP » en « Population » en trois catégories :\n\nMoins de 10 millions,\n\n10 -- 25 millions,\n\n&gt; 25 millions.\n\n\n# Recodage de la variable \nDevAfrica2018$Population &lt;- cut(DevAfrica2018$POP,  \n                                breaks = c(1,10,25,200), \n                                labels = c(\"Moins de 10 millions\", \n                                           \"10 - 25 millions\", \n                                           \"&gt; 25 millions\"), \n                                right = F)\n\n\n\n2. Représentation graphique de l’effectif des pays par sous-région\n\nlibrary(ggplot2)\n\nggplot(DevAfrica2018) + \n   geom_histogram(aes(x=SUBREG), stat = 'count')\n\n\n\n3. Ajout des étiquettes (titre du graphique, étiquette axe abscisse, axe des ordonnées) au graphique.\n\nggplot(DevAfrica2018) + \n  geom_histogram(aes(x=SUBREG), stat = 'count')+\n  ggtitle(\"Effectif de population par sous-région\")+\n  xlab(\"Sous région\") + \n  ylab(\"Effectif de population\")\n\n\n\n\n\n\n4. Construction d’une boite à moustaches de l’espérance de vie à la naissance par sous-région.\n\nggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y=ESPVIE))\n\n\n\n5. Construction d’une boite à moustache de l’espérance de vie à la naissance par sous-région. Note : faites les largeurs des boites à moustaches proportionnelles à l’effectif de la population par sous-région.\n\nggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y=ESPVIE), varwidth = TRUE)\n\n\n\n\n\n\n6. Ajout des étiquettes (titre du graphique, étiquette axe abscisse, axe des ordonnées) au graphique.\n\nfigure1 &lt;- ggplot(DevAfrica2018) + \n  geom_boxplot(aes(x=SUBREG, y=ESPVIE), varwidth = TRUE) + \n  xlab(\"Sous région\") + \n  ylab(\"Espérence de vie à la naissance\") + \n  ggtitle(\"Expérance de vie à la naissance par sous-règion\")\n\n# Sauvegarde du graphique\nggsave(\"figure1.png\", dpi = 3000)\n\nSaving 7 x 5 in image"
  }
]